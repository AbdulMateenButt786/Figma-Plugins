{"version":3,"file":"benchmark.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,kDAAU;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;;;;;;;;;;;ACXa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,2HAA+B;AAC/D,aAAa,mBAAO,CAAC,gGAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB;AACtB;AACA;AACA,wCAAwC,UAAU,SAAS,UAAU,SAAS,cAAc;AAC5F;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;;;;;;;;;;;;ACtIa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,mBAAO,CAAC,gFAAU;AACjC,cAAc;AACd,kBAAkB,mBAAO,CAAC,sFAAa;AACvC,iBAAiB;AACjB,oBAAoB,mBAAO,CAAC,0FAAe;AAC3C,mBAAmB;AACnB,sBAAsB,mBAAO,CAAC,8FAAiB;AAC/C,uBAAuB;AACvB,gBAAgB,mBAAO,CAAC,kFAAW;AACnC,wBAAwB;AACxB,gBAAgB,mBAAO,CAAC,kFAAW;AACnC,yBAAyB;;;;;;;;;;;;ACbZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,mBAAO,CAAC,oFAAc;AAClC,aAAa,mBAAO,CAAC,gGAAkB;AACvC,kBAAkB,mBAAO,CAAC,kFAAW;AACrC,wBAAwB,mBAAO,CAAC,wGAAsB;AACtD,gBAAgB,mBAAO,CAAC,wFAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,UAAU,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,aAAa,OAAO,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;;AChQD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,wGAAsB;AACtD,gBAAgB,mBAAO,CAAC,wFAAc;AACtC;AACA;AACA;AACA,cAAc;AACda;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,wGAAsB;AACtD,gBAAgB,mBAAO,CAAC,wFAAc;AACtC;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3Ha;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB,EAAE,MAAM;AAC1C;AACA;AACA,6BAA6B,sBAAsB,EAAE,qBAAqB;AAC1E;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA,iCAAiC,WAAW,EAAE,0BAA0B,EAAE,QAAQ,EAAE,cAAc,EAAE,YAAY,EAAE,2BAA2B,EAAE,WAAW;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;;AClJN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,mBAAO,CAAC,oFAAc;AAClC,kBAAkB,mBAAO,CAAC,4FAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACbiBAAiB;;;;;;;;;;;;ACnRJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;;ACzBT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,mBAAO,CAAC,2FAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,gCAAgC,KAAK;AACrC;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;;AC9TH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,WAAW;AACX,YAAY;AACZ,WAAW;AACX,UAAU;AACV,UAAU;AACV,UAAU;AACV,aAAa;AACb,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,YAAY;AACZ,YAAY;AACZ,aAAa;AACb,aAAa;AACb,WAAW;AACX,aAAa;AACb,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,cAAc;AACd,cAAc;AACd;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;;ACpCH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA,eAAe;AACf;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;;AC3Bf;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,mBAAO,CAAC,mFAAa;AACjC,WAAW;AACX,mBAAmB,mBAAO,CAAC,iFAAY;AACvC,cAAc;AACd,iBAAiB;AACjB,mBAAmB;AACnB,uBAAuB;AACvB,wBAAwB;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBa;AACb;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,iFAAU;;;;;;;;;;;ACL3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,gEAAiB;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7GiD;AAEjD,yDAAyD;AACzD,yDAAyD;AACzD,2DAA2D;AAC3D,2DAA2D;AAC3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6BA,CAAC4C,OAAO6C,MAAMC,UAAUxF;AAC9D;AAEA,iEAAexV,SAASA,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,gBAAgB,OAAO,EAAE,IAAI;AAC7B;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,wCAAwC,mBAAmB;AAC3D,iCAAiC,aAAa,EAAE,OAAO,UAAU,EAAE;AACnE,uDAAuD,wBAAwB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB,IAAI,0CAA0C,KAAK,yCAAyC,KAAK,0CAA0C;AAClL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6BAA6B,IAAI,+BAA+B,IAAI,8BAA8B,IAAI,0CAA0C;AACjK;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,4BAA4B;AAC5B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,2BAA2B;AAC3B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA,aAAa,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,sCAAsC;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEoR;AACpR;;;;;;;;;;;;;;;;;;AC5ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV,uCAAuC,oFAAoF;AAC3H,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,mBAAmB;AAC1F,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM,mCAAmC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,wHAAwH,2EAA2E,IAAI;AACvM;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,4BAA4B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,4BAA4B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,4BAA4B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB,UAAU,SAAS;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,KAAK,EAAC;AACS;;;;;;;;;;;;;;;;AC9yD9B;;AAEA;AACA,aAAa;AACb,eAAe,WAAW,GAAG,IAAI;AACjC,OAAO,IAAI;;AAEX,aAAa;AACb,WAAW,QAAQ,WAAW,GAAG,IAAI;AACrC,OAAO,IAAI;;AAEX;AACA,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","sources":["webpack://@tokens-studio/figma-plugin/./node_modules/is-plain-object/index.js","webpack://@tokens-studio/figma-plugin/./node_modules/isobject/index.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/factory.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/index.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/parser.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/reducer.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/resolved-type.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/stringifier.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/tokenizer.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/util/calc-notation.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/util/node-impl.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/util/unicode.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/css-calc/util/utils.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/index.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/types/ast/errors.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/dist/types/ast/index.js","webpack://@tokens-studio/figma-plugin/./node_modules/postcss-calc-ast-parser/node_modules/postcss-value-parser/lib/unit.js","webpack://@tokens-studio/figma-plugin/./node_modules/set-value/index.js","webpack://@tokens-studio/figma-plugin/./benchmark/tests/parseAndResolve.ts","webpack://@tokens-studio/figma-plugin/./src/app/components/createTokenObj.tsx","webpack://@tokens-studio/figma-plugin/./src/constants/AliasRegex.ts","webpack://@tokens-studio/figma-plugin/./src/constants/BoxShadowTypes.ts","webpack://@tokens-studio/figma-plugin/./src/constants/ColorModifierTypes.ts","webpack://@tokens-studio/figma-plugin/./src/constants/ColorSpaceTypes.ts","webpack://@tokens-studio/figma-plugin/./src/constants/Properties.ts","webpack://@tokens-studio/figma-plugin/./src/constants/StorageProviderType.ts","webpack://@tokens-studio/figma-plugin/./src/constants/TokenSetStatus.ts","webpack://@tokens-studio/figma-plugin/./src/constants/TokenTypes.ts","webpack://@tokens-studio/figma-plugin/./src/plugin/figmaTransforms/opacity.ts","webpack://@tokens-studio/figma-plugin/./src/plugin/tokenHelpers.ts","webpack://@tokens-studio/figma-plugin/./src/utils/alias/checkIfAlias.tsx","webpack://@tokens-studio/figma-plugin/./src/utils/alias/checkIfContainsAlias.tsx","webpack://@tokens-studio/figma-plugin/./src/utils/alias/getAliasValue.ts","webpack://@tokens-studio/figma-plugin/./src/utils/alias/index.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/convertToRgb.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/darken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/index.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/isLightOrDark.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/lighten.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/mix.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/transparentize.ts","webpack://@tokens-studio/figma-plugin/./src/utils/convertModifiedColorToHex.ts","webpack://@tokens-studio/figma-plugin/./src/utils/convertToDefaultProperty.ts","webpack://@tokens-studio/figma-plugin/./src/utils/convertTokens.tsx","webpack://@tokens-studio/figma-plugin/./src/utils/convertTokensObjectToResolved.ts","webpack://@tokens-studio/figma-plugin/./src/utils/convertTokensToGroupedObject.ts","webpack://@tokens-studio/figma-plugin/./src/utils/expand.ts","webpack://@tokens-studio/figma-plugin/./src/utils/findReferences.tsx","webpack://@tokens-studio/figma-plugin/./src/utils/getValueWithReferences.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/index.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isGitProvider.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isMatchingStyle.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isPrimitiveValue.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isPropertyType.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleBorderToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleBoxShadowToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleBoxShadowValue.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleCompositionToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleTokenValueObject.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleTypographyToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleTypographyValue.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isTokenGroupWithType.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isTokenType.ts","webpack://@tokens-studio/figma-plugin/./src/utils/math/checkAndEvaluateMath.ts","webpack://@tokens-studio/figma-plugin/./src/utils/math/index.ts","webpack://@tokens-studio/figma-plugin/./src/utils/modifyColor.ts","webpack://@tokens-studio/figma-plugin/./src/utils/parseTokenValues.ts","webpack://@tokens-studio/figma-plugin/./src/utils/transform.ts","webpack://@tokens-studio/figma-plugin/./node_modules/color2k/dist/index.exports.import.es.mjs","webpack://@tokens-studio/figma-plugin/./node_modules/expr-eval/dist/index.mjs","webpack://@tokens-studio/figma-plugin/./node_modules/just-extend/index.mjs","webpack://@tokens-studio/figma-plugin/./node_modules/just-omit/index.mjs","webpack://@tokens-studio/figma-plugin/./node_modules/colorjs.io/dist/color.js","webpack://@tokens-studio/figma-plugin/webpack/bootstrap","webpack://@tokens-studio/figma-plugin/webpack/runtime/compat get default export","webpack://@tokens-studio/figma-plugin/webpack/runtime/define property getters","webpack://@tokens-studio/figma-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://@tokens-studio/figma-plugin/webpack/runtime/make namespace object","webpack://@tokens-studio/figma-plugin/./benchmark/index.ts"],"sourcesContent":["/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst valueParserUnit = require(\"postcss-value-parser/lib/unit\");\nconst Impl = require(\"./util/node-impl\");\nconst LENGTH_UNITS = [\n    \"em\",\n    \"ex\",\n    \"ch\",\n    \"rem\",\n    \"vw\",\n    \"vh\",\n    \"vmin\",\n    \"vmax\",\n    \"px\",\n    \"mm\",\n    \"cm\",\n    \"in\",\n    \"pt\",\n    \"pc\",\n    \"Q\",\n    \"vm\",\n];\nconst ANGLE_UNITS = [\"deg\", \"grad\", \"turn\", \"rad\"];\nconst TIME_UNITS = [\"s\", \"ms\"];\nconst FREQUENCY_UNITS = [\"Hz\", \"kHz\"];\nconst RESOLUTION_UNITS = [\"dpi\", \"dpcm\", \"dppm\"];\nconst FLEX_UNITS = [\"fr\"];\nconst L_LENGTH_UNITS = LENGTH_UNITS.map(u => u.toLowerCase());\nconst L_ANGLE_UNITS = ANGLE_UNITS.map(u => u.toLowerCase());\nconst L_TIME_UNITS = TIME_UNITS.map(u => u.toLowerCase());\nconst L_FREQUENCY_UNITS = FREQUENCY_UNITS.map(u => u.toLowerCase());\nconst L_RESOLUTION_UNITS = RESOLUTION_UNITS.map(u => u.toLowerCase());\nconst L_FLEX_UNITS = FLEX_UNITS.map(u => u.toLowerCase());\nfunction newPunctuator(token, before) {\n    if (token.value === \",\" || token.value === \")\") {\n        return newTokenNode(Impl.Punctuator, token, token.value, before);\n    }\n    throw new Error(`illegal argument error \"${token.value}\"`);\n}\nexports.newPunctuator = newPunctuator;\nfunction newOperator(token, before) {\n    return newTokenNode(Impl.Operator, token, token.value, before);\n}\nexports.newOperator = newOperator;\nfunction newString(token, before) {\n    return newTokenNode(Impl.StringNode, token, token.value, before);\n}\nexports.newString = newString;\nfunction newWordNode(token, before) {\n    return newValueNode(token, before);\n}\nexports.newWordNode = newWordNode;\nfunction newFunction(token, before, open) {\n    return new Impl.FunctionNode(token.value, before, {\n        start: token.source.start,\n        end: open.source.end,\n    });\n}\nexports.newFunction = newFunction;\nfunction newParentheses(token, before) {\n    return new Impl.Parentheses(before, {\n        start: token.source.start,\n        end: token.source.end,\n    });\n}\nexports.newParentheses = newParentheses;\nfunction newMathExpression(left, op, right) {\n    const opNode = typeof op === \"string\"\n        ? newTokenNode(Impl.Operator, { source: { start: { index: 0 }, end: { index: 0 } } }, op, \" \")\n        : op;\n    const { before } = left.raws;\n    left.raws.before = \"\";\n    return new Impl.MathExpression(left, opNode, right, before, {\n        start: left.source.start,\n        operator: opNode.source,\n        end: right.source.end,\n    });\n}\nexports.newMathExpression = newMathExpression;\nfunction newValueNode(token, before) {\n    if (token.type === \"word\") {\n        const parsedUnit = valueParserUnit(token.value);\n        if (parsedUnit) {\n            const n = newNumNode(parsedUnit, token, before);\n            if (n) {\n                return n;\n            }\n        }\n    }\n    return newTokenNode(Impl.Word, token, token.value, before);\n}\nfunction newNumNode(parsedUnit, token, before) {\n    const { source } = token;\n    if (!parsedUnit.unit) {\n        return new Impl.NumberValue(parsedUnit.number, before, source);\n    }\n    const lunit = parsedUnit.unit.toLowerCase();\n    function unitNode(WithUnitValue, unit) {\n        const n = new WithUnitValue(parsedUnit.number, unit, before, source);\n        if (unit !== parsedUnit.unit) {\n            n.raws.unit = {\n                raw: parsedUnit.unit,\n                value: unit,\n            };\n        }\n        return n;\n    }\n    let unitIndex;\n    if ((unitIndex = L_LENGTH_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.LengthValue, LENGTH_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_ANGLE_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.AngleValue, ANGLE_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_TIME_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.TimeValue, TIME_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_FREQUENCY_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.FrequencyValue, FREQUENCY_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_RESOLUTION_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.ResolutionValue, RESOLUTION_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_FLEX_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.FlexValue, FLEX_UNITS[unitIndex]);\n    }\n    if (lunit === \"%\") {\n        return unitNode(Impl.PercentageValue, \"%\");\n    }\n    return null;\n}\nfunction newTokenNode(TokenValue, token, value, before) {\n    const { source } = token;\n    return new TokenValue(value, before, source);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_1 = require(\"./parser\");\nexports.Parser = parser_1.Parser;\nvar tokenizer_1 = require(\"./tokenizer\");\nexports.Tokenizer = tokenizer_1.Tokenizer;\nvar stringifier_1 = require(\"./stringifier\");\nexports.Stringifier = stringifier_1.Stringifier;\nvar resolved_type_1 = require(\"./resolved-type\");\nexports.getResolvedType = resolved_type_1.getResolvedType;\nvar reducer_1 = require(\"./reducer\");\nexports.reduceExpression = reducer_1.reduce;\nvar factory_1 = require(\"./factory\");\nexports.newMathExpression = factory_1.newMathExpression;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AST = require(\"../types/ast\");\nconst Impl = require(\"./util/node-impl\");\nconst factory_1 = require(\"./factory\");\nconst calc_notation_1 = require(\"./util/calc-notation\");\nconst utils_1 = require(\"./util/utils\");\nconst MAYBE_FUNCTION = /^([^-+0-9.]|-[^+0-9.])/u;\nconst PRECEDENCE = {\n    \"*\": 3,\n    \"/\": 3,\n    \"+\": 2,\n    \"-\": 2,\n};\nfunction srcLoc(node) {\n    return node.source || { start: { index: 0 }, end: { index: 0 } };\n}\nfunction isExpression(node) {\n    if (node && node.type !== \"Punctuator\" && node.type !== \"Operator\") {\n        return node;\n    }\n    return null;\n}\nclass Parser {\n    constructor(tokenizer, _options) {\n        this.tokenizer = tokenizer;\n        this.root = new Impl.Root({\n            start: {\n                index: 0,\n            },\n            end: {\n                index: 0,\n            },\n        });\n        this.rescans = [];\n        this.tokens = this.root.tokens;\n        this.errors = this.root.errors;\n    }\n    parse() {\n        let state = {\n            container: this.root,\n            fnName: \"\",\n            post() {\n            },\n            eof() {\n            },\n        };\n        while (state) {\n            state = this.processExpressions(state);\n        }\n        const { tokens } = this;\n        if (tokens.length > 0) {\n            srcLoc(this.root).end.index =\n                tokens[tokens.length - 1].source.end.index;\n        }\n        this.errors.unshift(...this.tokenizer.errors);\n        this.errors.sort((e1, e2) => e1.index - e2.index);\n        return this.root;\n    }\n    reportParseError(code, index = 0) {\n        if (this.errors.find(e => e.code === code && e.index === index)) {\n            return;\n        }\n        const error = AST.ParseError.fromCode(code, index);\n        this.errors.push(error);\n    }\n    processExpressions(state) {\n        let tokenSet;\n        while ((tokenSet = this.scan())) {\n            const { token } = tokenSet;\n            switch (token.type) {\n                case \"word\":\n                    if (MAYBE_FUNCTION.test(token.value)) {\n                        const next = this.scan();\n                        if (next) {\n                            if (!next.raws &&\n                                next.token.type === \"punctuator\" &&\n                                next.token.value === \"(\") {\n                                return this.processFunction(token, tokenSet.raws, next.token, state);\n                            }\n                            this.back(next);\n                        }\n                    }\n                    state.container.push(factory_1.newWordNode(token, tokenSet.raws));\n                    break;\n                case \"string\":\n                    state.container.push(factory_1.newString(token, tokenSet.raws));\n                    break;\n                case \"operator\":\n                    this.checkAndMergeMathExpr(state, PRECEDENCE[token.value]);\n                    state.container.push(factory_1.newOperator(token, tokenSet.raws));\n                    break;\n                case \"punctuator\":\n                    this.checkAndMergeMathExpr(state);\n                    return this.processPunctuator(token, tokenSet.raws, state);\n                default:\n                    break;\n            }\n        }\n        this.postStack(state);\n        state.eof();\n        return null;\n    }\n    checkAndMergeMathExpr(state, currPrecedence) {\n        const { container } = state;\n        const { nodes } = container;\n        if (nodes.length >= 3) {\n            const bfOp = nodes[nodes.length - 2];\n            if (bfOp.type === \"Operator\" && PRECEDENCE[bfOp.value]) {\n                if (currPrecedence == null ||\n                    currPrecedence <= PRECEDENCE[bfOp.value]) {\n                    const math = this.mergeMathExpr(state);\n                    if (math) {\n                        container.push(math);\n                    }\n                }\n            }\n        }\n    }\n    processPunctuator(token, before, state) {\n        const { container, parent } = state;\n        if (token.value === \"(\") {\n            const node = factory_1.newParentheses(token, before);\n            container.push(node);\n            return this.createNestedStateContainer(node, state.fnName, state);\n        }\n        this.postStack(state);\n        if (token.value === \")\") {\n            if (parent) {\n                state.post(token, before);\n                return parent;\n            }\n            this.reportParseError(\"unexpected-parenthesis\", token.source.start.index);\n        }\n        container.push(factory_1.newPunctuator(token, before));\n        return state;\n    }\n    processFunction(token, before, open, state) {\n        const node = factory_1.newFunction(token, before, open);\n        state.container.push(node);\n        return this.createNestedStateContainer(node, node.name, state);\n    }\n    createNestedStateContainer(node, fnName, state) {\n        return {\n            container: node,\n            parent: state,\n            fnName,\n            post(close, beforeClose) {\n                if (beforeClose) {\n                    node.raws.beforeClose = beforeClose;\n                }\n                srcLoc(node).end = close.source.end;\n            },\n            eof: () => {\n                node.unclosed = true;\n                const last = this.tokens[this.tokens.length - 1];\n                const lastChild = node.last;\n                if (lastChild) {\n                    srcLoc(node).end = srcLoc(lastChild).end;\n                }\n                this.reportParseError(\"eof-in-bracket\", last.source.end.index);\n                state.eof();\n            },\n        };\n    }\n    mergeMathExpr(state) {\n        const { container: { nodes }, } = state;\n        const right = nodes.pop();\n        const op = nodes.pop();\n        const left = nodes.pop() || null;\n        const restore = () => {\n            if (left) {\n                nodes.push(left);\n            }\n            nodes.push(op, right);\n        };\n        const reportError = (node) => {\n            if (calc_notation_1.isMathFunction(state.fnName)) {\n                this.reportParseError(\"unexpected-calc-token\", srcLoc(node).start.index);\n            }\n        };\n        const rightExpr = isExpression(right);\n        if (utils_1.isComma(op)) {\n            if (!rightExpr) {\n                reportError(right);\n            }\n            restore();\n            return null;\n        }\n        if (!left) {\n            reportError(isExpression(op) ? right : op);\n            restore();\n            return null;\n        }\n        const leftExpr = isExpression(left);\n        if (!leftExpr) {\n            reportError(isExpression(nodes[nodes.length - 1]) ? op : left);\n            restore();\n            return null;\n        }\n        if (op.type !== \"Operator\") {\n            reportError(op);\n            restore();\n            return null;\n        }\n        if (!rightExpr) {\n            reportError(right);\n            restore();\n            return null;\n        }\n        return factory_1.newMathExpression(leftExpr, op, rightExpr);\n    }\n    postStack(state) {\n        const { container } = state;\n        const { nodes } = container;\n        while (nodes.length > 1) {\n            const math = this.mergeMathExpr(state);\n            if (math) {\n                container.push(math);\n            }\n            else {\n                return;\n            }\n        }\n    }\n    scan() {\n        const re = this.rescans.shift();\n        if (re) {\n            return re;\n        }\n        let raws = \"\";\n        let token = this.tokenizer.nextToken();\n        while (token) {\n            this.tokens.push(token);\n            if (token.type === \"whitespace\" ||\n                token.type === \"comment\" ||\n                token.type === \"inline-comment\") {\n                raws += token.value;\n            }\n            else {\n                return {\n                    token,\n                    raws,\n                };\n            }\n            token = this.tokenizer.nextToken();\n        }\n        if (raws) {\n            this.root.raws.after = raws;\n        }\n        return null;\n    }\n    back(tokenset) {\n        this.rescans.unshift(tokenset);\n    }\n}\nexports.Parser = Parser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst calc_notation_1 = require(\"./util/calc-notation\");\nconst utils_1 = require(\"./util/utils\");\nfunction reduce(expr) {\n    return reduceExpression(expr);\n}\nexports.reduce = reduce;\nfunction reduceMathExpression(expr) {\n    const left = reduceExpression(expr.left);\n    const right = reduceExpression(expr.right);\n    if (!left || !right) {\n        return null;\n    }\n    switch (expr.operator) {\n        case \"+\":\n        case \"-\":\n            return reduceAddSub(left, expr.operator, right);\n        case \"/\":\n            return reduceDivision(left, right);\n        case \"*\":\n            return reduceMultiple(left, right);\n        default:\n    }\n    return null;\n}\nfunction reduceAddSub(left, operator, right) {\n    if (left.type !== right.type) {\n        return null;\n    }\n    const ope = operator === \"-\"\n        ? (ln, rn) => ln - rn\n        : (ln, rn) => ln + rn;\n    if (left.type === \"Number\") {\n        return {\n            type: \"Number\",\n            value: ope(left.value, right.value),\n        };\n    }\n    const lunit = left.unit;\n    const runit = right.unit;\n    if (lunit === runit) {\n        return {\n            type: left.type,\n            value: ope(left.value, right.value),\n            unit: left.unit,\n        };\n    }\n    return null;\n}\nfunction reduceDivision(left, right) {\n    if (right.type !== \"Number\") {\n        return null;\n    }\n    if (left.type === \"Number\") {\n        return {\n            type: \"Number\",\n            value: left.value / right.value,\n        };\n    }\n    return {\n        type: left.type,\n        value: left.value / right.value,\n        unit: left.unit,\n    };\n}\nfunction reduceMultiple(left, right) {\n    if (left.type === \"Number\") {\n        if (right.type === \"Number\") {\n            return {\n                type: \"Number\",\n                value: left.value * right.value,\n            };\n        }\n        return {\n            type: right.type,\n            value: left.value * right.value,\n            unit: right.unit,\n        };\n    }\n    else if (right.type === \"Number\") {\n        return {\n            type: left.type,\n            value: left.value * right.value,\n            unit: left.unit,\n        };\n    }\n    return null;\n}\nfunction reduceExpression(expr) {\n    if (expr.type === \"Number\" ||\n        expr.type === \"Length\" ||\n        expr.type === \"Angle\" ||\n        expr.type === \"Time\" ||\n        expr.type === \"Frequency\" ||\n        expr.type === \"Resolution\" ||\n        expr.type === \"Percentage\" ||\n        expr.type === \"Flex\") {\n        return expr;\n    }\n    if (expr.type === \"MathExpression\") {\n        return reduceMathExpression(expr);\n    }\n    if (expr.type === \"Parentheses\" || expr.type === \"Root\") {\n        if (expr.nodes.length === 1) {\n            return reduceExpression(expr.nodes[0]);\n        }\n    }\n    else if (expr.type === \"Function\") {\n        if (expr.type === \"Function\") {\n            if (calc_notation_1.isCalc(expr.name)) {\n                return getCalcNumber(expr);\n            }\n        }\n    }\n    return null;\n}\nfunction getCalcNumber(fn) {\n    const args = utils_1.getFunctionArguments(fn);\n    if (args && args.length === 1) {\n        return reduceExpression(args[0]);\n    }\n    return null;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst calc_notation_1 = require(\"./util/calc-notation\");\nconst utils_1 = require(\"./util/utils\");\nfunction getResolvedType(expr) {\n    const left = getType(expr.left);\n    const right = getType(expr.right);\n    const { operator } = expr;\n    switch (operator) {\n        case \"+\":\n        case \"-\":\n            if (left === \"Unknown\" || right === \"Unknown\") {\n                return \"Unknown\";\n            }\n            if (left === right) {\n                return left;\n            }\n            if (left === \"Number\" || right === \"Number\") {\n                return \"invalid\";\n            }\n            if (left === \"Percentage\") {\n                return right;\n            }\n            if (right === \"Percentage\") {\n                return left;\n            }\n            return \"invalid\";\n        case \"*\":\n            if (left === \"Unknown\" || right === \"Unknown\") {\n                return \"Unknown\";\n            }\n            if (left === \"Number\") {\n                return right;\n            }\n            if (right === \"Number\") {\n                return left;\n            }\n            return \"invalid\";\n        case \"/\":\n            if (right === \"Unknown\") {\n                return \"Unknown\";\n            }\n            if (right === \"Number\") {\n                return left;\n            }\n            return \"invalid\";\n        default:\n    }\n    return \"Unknown\";\n}\nexports.getResolvedType = getResolvedType;\nfunction getExpressionType(expr) {\n    const { type } = expr;\n    if (type === \"Number\" ||\n        type === \"Length\" ||\n        type === \"Angle\" ||\n        type === \"Time\" ||\n        type === \"Frequency\" ||\n        type === \"Resolution\" ||\n        type === \"Percentage\" ||\n        type === \"Flex\") {\n        return type;\n    }\n    return \"Unknown\";\n}\nfunction getType(expr) {\n    if (expr.type === \"MathExpression\") {\n        const rtype = getResolvedType(expr);\n        return rtype === \"invalid\" ? \"Unknown\" : rtype;\n    }\n    if (expr.type === \"Parentheses\") {\n        if (expr.nodes.length === 1) {\n            return getType(expr.nodes[0]);\n        }\n        return \"Unknown\";\n    }\n    if (expr.type === \"Function\") {\n        if (calc_notation_1.isCalc(expr.name)) {\n            return getCalcFunctionType(expr);\n        }\n        if (calc_notation_1.isMin(expr.name) || calc_notation_1.isMax(expr.name)) {\n            return getMinMaxFunctionType(expr);\n        }\n        if (calc_notation_1.isClamp(expr.name)) {\n            return getClampFunctionType(expr);\n        }\n        return \"Unknown\";\n    }\n    return getExpressionType(expr);\n}\nfunction getCalcFunctionType(fn) {\n    if (fn.nodes.length === 1) {\n        return getFunctionArgumentsType(fn);\n    }\n    return \"Unknown\";\n}\nfunction getMinMaxFunctionType(fn) {\n    return getFunctionArgumentsType(fn);\n}\nfunction getClampFunctionType(fn) {\n    if (fn.nodes.length === 5) {\n        return getFunctionArgumentsType(fn);\n    }\n    return \"Unknown\";\n}\nfunction getFunctionArgumentsType(fn) {\n    const args = utils_1.getFunctionArguments(fn);\n    if (!args) {\n        return \"Unknown\";\n    }\n    const types = args.map(getType);\n    let result = null;\n    for (const type of types) {\n        if (!result || result === \"Percentage\") {\n            result = type;\n        }\n        else if (type === \"Percentage\") {\n        }\n        else if (result !== type) {\n            return \"Unknown\";\n        }\n    }\n    return result || \"Unknown\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction rawVal(node, name) {\n    const r = node.raws[name];\n    return r ? r.raw : `${node[name]}`;\n}\nfunction raw(node, name) {\n    const r = node.raws[name];\n    return r || \"\";\n}\nfunction wrapRaws(node, inner) {\n    return `${raw(node, \"before\")}${inner}`;\n}\nfunction numWithUnit(node) {\n    return wrapRaws(node, `${rawVal(node, \"value\")}${rawVal(node, \"unit\")}`);\n}\nclass Stringifier {\n    constructor(options) {\n        this.options = Object.assign({\n            autofix: false,\n        }, options || {});\n    }\n    stringify(node) {\n        return this[node.type](node);\n    }\n    Root(node) {\n        let s = \"\";\n        for (const c of node.nodes) {\n            s += this.stringify(c);\n        }\n        s += raw(node, \"after\");\n        return s;\n    }\n    Function(node) {\n        let s = `${node.name}(`;\n        for (const c of node.nodes) {\n            s += this.stringify(c);\n        }\n        s += raw(node, \"beforeClose\");\n        if (this.options.autofix || !node.unclosed) {\n            s += \")\";\n        }\n        return wrapRaws(node, s);\n    }\n    Parentheses(node) {\n        let s = \"(\";\n        for (const c of node.nodes) {\n            s += this.stringify(c);\n        }\n        s += raw(node, \"beforeClose\");\n        if (this.options.autofix || !node.unclosed) {\n            s += \")\";\n        }\n        return wrapRaws(node, s);\n    }\n    MathExpression(node) {\n        let beforeLeft = \"\";\n        let between = raw(node, \"between\");\n        let beforeRight = \"\";\n        let afterRight = \"\";\n        if (this.options.autofix) {\n            if (!between) {\n                between = \" \";\n            }\n            if (!node.right.raws.before) {\n                beforeRight = \" \";\n            }\n            if (node.left.type === \"MathExpression\") {\n                if ((node.left.operator === \"+\" ||\n                    node.left.operator === \"-\") &&\n                    (node.operator === \"*\" || node.operator === \"/\")) {\n                    beforeLeft += \"(\";\n                    between = `)${between}`;\n                }\n            }\n            if (node.right.type === \"MathExpression\") {\n                if ((node.operator === \"+\" && node.right.operator === \"-\") ||\n                    ((node.operator === \"-\" || node.operator === \"*\") &&\n                        (node.right.operator === \"+\" ||\n                            node.right.operator === \"-\")) ||\n                    node.operator === \"/\") {\n                    beforeRight += \"(\";\n                    afterRight = `)${afterRight}`;\n                }\n            }\n        }\n        return wrapRaws(node, `${beforeLeft}${this.stringify(node.left)}${between}${node.operator}${beforeRight}${this.stringify(node.right)}${afterRight}`);\n    }\n    Number(node) {\n        return wrapRaws(node, rawVal(node, \"value\"));\n    }\n    Punctuator(node) {\n        return wrapRaws(node, node.value);\n    }\n    Word(node) {\n        return wrapRaws(node, node.value);\n    }\n    String(node) {\n        return wrapRaws(node, node.value);\n    }\n    Operator(node) {\n        return wrapRaws(node, node.value);\n    }\n    Length(node) {\n        return numWithUnit(node);\n    }\n    Angle(node) {\n        return numWithUnit(node);\n    }\n    Time(node) {\n        return numWithUnit(node);\n    }\n    Frequency(node) {\n        return numWithUnit(node);\n    }\n    Resolution(node) {\n        return numWithUnit(node);\n    }\n    Percentage(node) {\n        return numWithUnit(node);\n    }\n    Flex(node) {\n        return numWithUnit(node);\n    }\n    word(node) {\n        return node.value;\n    }\n    punctuator(node) {\n        return node.value;\n    }\n    operator(node) {\n        return node.value;\n    }\n    whitespace(node) {\n        return node.value;\n    }\n    comment(node) {\n        return node.value;\n    }\n    string(node) {\n        return node.value;\n    }\n    \"inline-comment\"(node) {\n        return node.value;\n    }\n}\nexports.Stringifier = Stringifier;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AST = require(\"../types/ast\");\nconst unicode_1 = require(\"./util/unicode\");\nfunction isPunctuator(cc) {\n    return cc === unicode_1.LPAREN || cc === unicode_1.RPAREN || cc === unicode_1.COMMA;\n}\nfunction maybeNumber(cc) {\n    return unicode_1.isDigit(cc) || cc === unicode_1.DOT;\n}\nfunction isQuotes(cc) {\n    return cc === unicode_1.DQUOTE || cc === unicode_1.SQUOTE;\n}\nfunction getRightBracket(cc) {\n    if (cc === unicode_1.LPAREN) {\n        return unicode_1.RPAREN;\n    }\n    if (cc === unicode_1.LBRACE) {\n        return unicode_1.RBRACE;\n    }\n    return unicode_1.RBRACKET;\n}\nclass Tokenizer {\n    constructor(text, options) {\n        this.lastCode = unicode_1.NULL;\n        this.rescan = false;\n        this.token = null;\n        this.lastTokenType = null;\n        this.errors = [];\n        this.text = text;\n        this.offset = -1;\n        this.state = \"SCAN\";\n        this.nextTokenOffset = 0;\n        this.options = Object.assign({\n            allowInlineCommnets: true,\n        }, options || {});\n    }\n    nextToken() {\n        while (this.token == null) {\n            const cc = this.scan();\n            this.state = this[this.state](cc) || \"SCAN\";\n            if (cc === unicode_1.EOF && !this.rescan) {\n                break;\n            }\n        }\n        const { token } = this;\n        this.token = null;\n        return token;\n    }\n    scan() {\n        if (this.rescan) {\n            this.rescan = false;\n            return this.lastCode;\n        }\n        return this.next();\n    }\n    next() {\n        if (this.offset < this.text.length) {\n            this.offset++;\n        }\n        if (this.offset >= this.text.length) {\n            return (this.lastCode = unicode_1.EOF);\n        }\n        return (this.lastCode = this.text.charCodeAt(this.offset));\n    }\n    back() {\n        this.rescan = true;\n    }\n    reportParseError(code) {\n        const error = AST.ParseError.fromCode(code, this.offset);\n        this.errors.push(error);\n    }\n    getCode(indexOffset = 0) {\n        return this.text.charCodeAt(this.nextTokenOffset + indexOffset);\n    }\n    commitToken(type, indexOffset = 0) {\n        const start = this.nextTokenOffset;\n        const offset = this.offset + indexOffset + 1;\n        const value = this.text.slice(start, offset);\n        this.token = {\n            type,\n            value,\n            source: {\n                start: {\n                    index: start,\n                },\n                end: {\n                    index: offset,\n                },\n            },\n        };\n        this.nextTokenOffset = offset;\n        this.lastTokenType = type;\n    }\n    SCAN(cc) {\n        if (unicode_1.isWhitespace(cc)) {\n            return \"WHITESPACE\";\n        }\n        if (cc === unicode_1.DQUOTE) {\n            return \"DQUOTE\";\n        }\n        if (cc === unicode_1.SQUOTE) {\n            return \"SQUOTE\";\n        }\n        if (cc === unicode_1.SLASH) {\n            return \"SLASH\";\n        }\n        if (cc === unicode_1.MINUS) {\n            return \"MINUS\";\n        }\n        if (cc === unicode_1.PLUS) {\n            return \"PLUS\";\n        }\n        if (cc === unicode_1.STAR) {\n            this.commitToken(\"operator\");\n            return \"SCAN\";\n        }\n        if (isPunctuator(cc)) {\n            this.commitToken(\"punctuator\");\n            return \"SCAN\";\n        }\n        if (cc === unicode_1.LBRACKET) {\n            return \"LBRACKET\";\n        }\n        if (cc === unicode_1.LBRACE) {\n            return \"LBRACE\";\n        }\n        if (cc === unicode_1.EOF) {\n            return \"SCAN\";\n        }\n        return \"WORD\";\n    }\n    WORD(cc) {\n        while (!unicode_1.isWhitespace(cc) &&\n            !isPunctuator(cc) &&\n            cc !== unicode_1.PLUS &&\n            cc !== unicode_1.STAR &&\n            cc !== unicode_1.SLASH &&\n            !isQuotes(cc) &&\n            cc !== unicode_1.EOF) {\n            if (cc === unicode_1.MINUS) {\n                const st = this.getCode();\n                if (maybeNumber(st) ||\n                    ((st === unicode_1.MINUS || st === unicode_1.PLUS) &&\n                        maybeNumber(this.getCode(1)))) {\n                    this.commitToken(\"word\", -1);\n                    return \"MINUS\";\n                }\n            }\n            else if (cc === unicode_1.LBRACE || cc === unicode_1.LBRACKET || cc === unicode_1.LPAREN) {\n                this.skipBrakets(this.next(), getRightBracket(cc));\n            }\n            cc = this.next();\n        }\n        this.commitToken(\"word\", -1);\n        this.back();\n    }\n    LBRACKET(cc) {\n        this.skipBrakets(cc, unicode_1.RBRACKET);\n        return \"WORD\";\n    }\n    LBRACE(cc) {\n        this.skipBrakets(cc, unicode_1.RBRACE);\n        return \"WORD\";\n    }\n    WHITESPACE(cc) {\n        while (unicode_1.isWhitespace(cc)) {\n            cc = this.next();\n        }\n        this.commitToken(\"whitespace\", -1);\n        this.back();\n    }\n    SLASH(cc) {\n        if (cc === unicode_1.STAR) {\n            return \"COMMENT\";\n        }\n        if (cc === unicode_1.SLASH && this.options.allowInlineCommnets) {\n            return \"INLINE_COMMENT\";\n        }\n        this.commitToken(\"operator\", -1);\n        this.back();\n    }\n    COMMENT(cc) {\n        while (cc !== unicode_1.EOF) {\n            if (cc === unicode_1.STAR) {\n                cc = this.next();\n                if (cc === unicode_1.SLASH) {\n                    this.commitToken(\"comment\");\n                    return;\n                }\n            }\n            cc = this.next();\n        }\n        this.commitToken(\"comment\", -1);\n        this.reportParseError(\"eof-in-comment\");\n    }\n    INLINE_COMMENT(cc) {\n        while (cc !== unicode_1.EOF) {\n            if (cc === unicode_1.LF || cc === unicode_1.FF) {\n                this.commitToken(\"inline-comment\");\n                return;\n            }\n            if (cc === unicode_1.CR) {\n                cc = this.next();\n                if (cc === unicode_1.LF) {\n                    this.commitToken(\"inline-comment\");\n                    return;\n                }\n                this.commitToken(\"inline-comment\", -1);\n                return this.back();\n            }\n            cc = this.next();\n        }\n        this.commitToken(\"inline-comment\", -1);\n    }\n    MINUS(cc) {\n        if (this.lastTokenType === \"word\" ||\n            cc === unicode_1.EOF ||\n            (cc !== unicode_1.MINUS && !maybeNumber(cc) && !unicode_1.isLetter(cc))) {\n            this.commitToken(\"operator\", -1);\n            this.back();\n            return;\n        }\n        return \"WORD\";\n    }\n    PLUS(cc) {\n        if (this.lastTokenType !== \"word\") {\n            if (maybeNumber(cc)) {\n                return \"WORD\";\n            }\n        }\n        this.commitToken(\"operator\", -1);\n        this.back();\n    }\n    DQUOTE(cc) {\n        this.skipString(cc, unicode_1.DQUOTE);\n    }\n    SQUOTE(cc) {\n        this.skipString(cc, unicode_1.SQUOTE);\n    }\n    skipBrakets(cc, end) {\n        const closeStack = [];\n        while (cc !== unicode_1.EOF) {\n            if (end === cc) {\n                const nextTargetBracket = closeStack.pop() || null;\n                if (!nextTargetBracket) {\n                    return;\n                }\n                end = nextTargetBracket;\n            }\n            else if (cc === unicode_1.LBRACE || cc === unicode_1.LBRACKET || cc === unicode_1.LPAREN) {\n                if (end) {\n                    closeStack.push(end);\n                }\n                end = getRightBracket(cc);\n            }\n            cc = this.next();\n        }\n        this.reportParseError(\"eof-in-bracket\");\n    }\n    skipString(cc, end) {\n        while (cc !== unicode_1.EOF) {\n            if (cc === unicode_1.BACKSLASH) {\n                cc = this.next();\n            }\n            else if (cc === end) {\n                this.commitToken(\"string\");\n                return;\n            }\n            cc = this.next();\n        }\n        this.commitToken(\"string\", -1);\n        this.reportParseError(\"eof-in-string\");\n    }\n}\nexports.Tokenizer = Tokenizer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RE_CALC = /^(-(webkit|mox)-)?calc/iu;\nconst RE_MIN = /^(-(webkit|mox)-)?min/iu;\nconst RE_MAX = /^(-(webkit|mox)-)?max/iu;\nconst RE_CLAMP = /^(-(webkit|mox)-)?clamp/iu;\nfunction isCalc(name) {\n    return RE_CALC.test(name);\n}\nexports.isCalc = isCalc;\nfunction isMin(name) {\n    return RE_MIN.test(name);\n}\nexports.isMin = isMin;\nfunction isMax(name) {\n    return RE_MAX.test(name);\n}\nexports.isMax = isMax;\nfunction isClamp(name) {\n    return RE_CLAMP.test(name);\n}\nexports.isClamp = isClamp;\nfunction isMathFunction(name) {\n    return isCalc(name) || isClamp(name) || isMin(name) || isMax(name);\n}\nexports.isMathFunction = isMathFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stringifier_1 = require(\"../stringifier\");\nlet defaultStringifier = null;\nclass Node {\n    constructor() {\n        this.parent = null;\n    }\n    toString(stringifier) {\n        if (typeof stringifier === \"function\") {\n            return stringifier(this);\n        }\n        return (stringifier ||\n            defaultStringifier ||\n            (defaultStringifier = new stringifier_1.Stringifier())).stringify(this);\n    }\n    walk(type, callback) {\n        const node = this;\n        let result = undefined;\n        const nodes = [...(node.nodes || []), node.left, node.right].filter(n => Boolean(n));\n        const check = typeof type === \"string\"\n            ? (n) => n.type === type\n            : (n) => type.test(n.type);\n        for (const child of nodes) {\n            if (check(child)) {\n                result = callback(child);\n                if (result === false) {\n                    break;\n                }\n            }\n            if (child.walk) {\n                result = child.walk(type, callback);\n                if (result === false) {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n}\nclass Container extends Node {\n    push(...children) {\n        for (const child of children) {\n            if (child.type === \"Root\") {\n                this.push(...child.nodes);\n            }\n            else {\n                child.parent = this;\n                this.nodes.push(child);\n            }\n        }\n        return this;\n    }\n    unshift(...children) {\n        for (const child of children.reverse()) {\n            if (child.type === \"Root\") {\n                this.unshift(...child.nodes);\n            }\n            else {\n                child.parent = this;\n                this.nodes.unshift(child);\n            }\n        }\n        return this;\n    }\n    append(...children) {\n        return this.push(...children);\n    }\n    prepend(...children) {\n        return this.unshift(...children);\n    }\n    insertBefore(exist, add) {\n        if (add.type === \"Root\") {\n            const { nodes } = add;\n            if (nodes.length === 1) {\n                return this.insertBefore(exist, nodes[0]);\n            }\n            throw new Error(\"The given Root node is illegal.\");\n        }\n        const existIndex = this.nodes.indexOf(exist);\n        if (existIndex < 0) {\n            throw new Error(\"The given node could not be found.\");\n        }\n        add.parent = this;\n        this.nodes.splice(existIndex, 0, add);\n        return this;\n    }\n    insertAfter(exist, add) {\n        if (add.type === \"Root\") {\n            const { nodes } = add;\n            if (nodes.length === 1) {\n                return this.insertAfter(exist, nodes[0]);\n            }\n            throw new Error(\"The given Root node is illegal.\");\n        }\n        const existIndex = this.nodes.indexOf(exist);\n        if (existIndex < 0) {\n            throw new Error(\"The given node could not be found.\");\n        }\n        add.parent = this;\n        this.nodes.splice(existIndex + 1, 0, add);\n        return this;\n    }\n    removeAll() {\n        for (const node of this.nodes) {\n            node.parent = null;\n        }\n        this.nodes = [];\n        return this;\n    }\n    removeChild(child) {\n        const index = this.nodes.indexOf(child);\n        this.nodes[index].parent = null;\n        this.nodes.splice(index, 1);\n        return this;\n    }\n    get first() {\n        return this.nodes[0] || null;\n    }\n    get last() {\n        return this.nodes[this.nodes.length - 1] || null;\n    }\n}\nclass NumberValue extends Node {\n    constructor(value, before, source) {\n        super();\n        const num = parseFloat(value);\n        this.type = \"Number\";\n        this.value = num;\n        this.raws = {\n            before,\n            value: {\n                raw: value,\n                value: num,\n            },\n        };\n        this.source = source;\n    }\n}\nexports.NumberValue = NumberValue;\nclass NumWithUnitValue extends Node {\n    constructor(type, value, unit, before, source) {\n        super();\n        const num = parseFloat(value);\n        this.type = type;\n        this.value = num;\n        this.unit = unit;\n        this.raws = {\n            before,\n            value: {\n                raw: value,\n                value: num,\n            },\n        };\n        this.source = source;\n    }\n}\nclass LengthValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Length\", value, unit, before, source);\n    }\n}\nexports.LengthValue = LengthValue;\nclass AngleValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Angle\", value, unit, before, source);\n    }\n}\nexports.AngleValue = AngleValue;\nclass TimeValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Time\", value, unit, before, source);\n    }\n}\nexports.TimeValue = TimeValue;\nclass FrequencyValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Frequency\", value, unit, before, source);\n    }\n}\nexports.FrequencyValue = FrequencyValue;\nclass ResolutionValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Resolution\", value, unit, before, source);\n    }\n}\nexports.ResolutionValue = ResolutionValue;\nclass PercentageValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Percentage\", value, unit, before, source);\n    }\n}\nexports.PercentageValue = PercentageValue;\nclass FlexValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Flex\", value, unit, before, source);\n    }\n}\nexports.FlexValue = FlexValue;\nclass TokenValue extends Node {\n    constructor(type, value, before, source) {\n        super();\n        this.type = type;\n        this.value = value;\n        this.raws = {\n            before,\n        };\n        this.source = source;\n    }\n}\nclass Word extends TokenValue {\n    constructor(value, before, source) {\n        super(\"Word\", value, before, source);\n    }\n}\nexports.Word = Word;\nclass StringNode extends TokenValue {\n    constructor(value, before, source) {\n        super(\"String\", value, before, source);\n    }\n}\nexports.StringNode = StringNode;\nfunction defineAssessor(obj, name, setterProc) {\n    const localName = Symbol(`${name}`);\n    Object.defineProperties(obj, {\n        [localName]: { writable: true, enumerable: false },\n        [name]: {\n            get() {\n                return this[localName];\n            },\n            set(n) {\n                const o = this[localName];\n                this[localName] = setterProc(n, o);\n            },\n            enumerable: true,\n        },\n    });\n}\nclass MathExpression extends Node {\n    constructor(left, operator, right, before, source) {\n        super();\n        const ope = operator.value;\n        const between = operator.raws.before;\n        this.type = \"MathExpression\";\n        const setterProc = (n, o) => {\n            let e;\n            if (n.type === \"Root\") {\n                const { nodes } = n;\n                if (nodes.length === 1) {\n                    e = nodes[0];\n                }\n                else {\n                    throw new Error(\"The given Root node is illegal.\");\n                }\n            }\n            else {\n                e = n;\n            }\n            e.parent = this;\n            if (o) {\n                o.parent = null;\n            }\n            return e;\n        };\n        defineAssessor(this, \"left\", setterProc);\n        this.left = left;\n        this.operator = ope;\n        defineAssessor(this, \"right\", setterProc);\n        this.right = right;\n        this.raws = { before, between };\n        this.source = source;\n    }\n}\nexports.MathExpression = MathExpression;\nclass FunctionNode extends Container {\n    constructor(name, before, source) {\n        super();\n        this.type = \"Function\";\n        this.name = name;\n        this.nodes = [];\n        this.raws = { before };\n        this.source = source;\n    }\n}\nexports.FunctionNode = FunctionNode;\nclass Parentheses extends Container {\n    constructor(before, source) {\n        super();\n        this.type = \"Parentheses\";\n        this.nodes = [];\n        this.raws = { before };\n        this.source = source;\n    }\n}\nexports.Parentheses = Parentheses;\nclass Punctuator extends TokenValue {\n    constructor(value, before, source) {\n        super(\"Punctuator\", value, before, source);\n    }\n}\nexports.Punctuator = Punctuator;\nclass Root extends Container {\n    constructor(source) {\n        super();\n        this.type = \"Root\";\n        this.nodes = [];\n        this.tokens = [];\n        this.errors = [];\n        this.raws = { after: \"\" };\n        this.source = source;\n    }\n}\nexports.Root = Root;\nclass Operator extends TokenValue {\n    constructor(value, before, source) {\n        super(\"Operator\", value, before, source);\n    }\n}\nexports.Operator = Operator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EOF = -1;\nexports.NULL = 0x00;\nexports.TAB = 0x09;\nexports.CR = 0x0d;\nexports.LF = 0x0a;\nexports.FF = 0x0c;\nexports.SPACE = 0x20;\nexports.DQUOTE = 0x22;\nexports.SQUOTE = 0x27;\nexports.LPAREN = 0x28;\nexports.RPAREN = 0x29;\nexports.STAR = 0x2a;\nexports.PLUS = 0x2b;\nexports.COMMA = 0x2c;\nexports.MINUS = 0x2d;\nexports.DOT = 0x2e;\nexports.SLASH = 0x2f;\nexports.LBRACKET = 0x5b;\nexports.BACKSLASH = 0x5c;\nexports.RBRACKET = 0x5d;\nexports.LBRACE = 0x7b;\nexports.RBRACE = 0x7d;\nfunction isWhitespace(cc) {\n    return cc === exports.TAB || cc === exports.LF || cc === exports.FF || cc === exports.CR || cc === exports.SPACE;\n}\nexports.isWhitespace = isWhitespace;\nfunction isDigit(cc) {\n    return cc >= 0x30 && cc <= 0x39;\n}\nexports.isDigit = isDigit;\nfunction isLetter(cc) {\n    return ((cc >= 0x61 && cc <= 0x7a) ||\n        (cc >= 0x41 && cc <= 0x5a));\n}\nexports.isLetter = isLetter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isComma(node) {\n    return node.type === \"Punctuator\" && node.value === \",\";\n}\nexports.isComma = isComma;\nfunction getFunctionArguments(fn) {\n    const { nodes } = fn;\n    const first = nodes[0];\n    if (!first || isComma(first)) {\n        return null;\n    }\n    const result = [first];\n    const length = nodes.length;\n    for (let index = 1; index < length; index++) {\n        const comma = nodes[index++];\n        if (!isComma(comma)) {\n            return null;\n        }\n        const arg = nodes[index];\n        if (!arg || isComma(arg)) {\n            return null;\n        }\n        result.push(arg);\n    }\n    return result;\n}\nexports.getFunctionArguments = getFunctionArguments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AST = require(\"./types/ast\");\nexports.AST = AST;\nconst css_calc_1 = require(\"./css-calc\");\nexports.Parser = css_calc_1.Parser;\nexports.Tokenizer = css_calc_1.Tokenizer;\nexports.Stringifier = css_calc_1.Stringifier;\nexports.getResolvedType = css_calc_1.getResolvedType;\nexports.reduceExpression = css_calc_1.reduceExpression;\nexports.mathExpr = css_calc_1.newMathExpression;\nfunction parse(code, options) {\n    const tokenizer = new css_calc_1.Tokenizer(code, options);\n    return new css_calc_1.Parser(tokenizer, options).parse();\n}\nexports.parse = parse;\nfunction stringify(node, options) {\n    const stringifier = new css_calc_1.Stringifier(options);\n    return stringifier.stringify(node);\n}\nexports.stringify = stringify;\nexports.default = {\n    parse,\n    stringify,\n    getResolvedType: css_calc_1.getResolvedType,\n    reduceExpression: css_calc_1.reduceExpression,\n    mathExpr: css_calc_1.newMathExpression,\n    Parser: css_calc_1.Parser,\n    Tokenizer: css_calc_1.Tokenizer,\n    Stringifier: css_calc_1.Stringifier,\n    AST,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ParseError extends SyntaxError {\n    static fromCode(code, offset) {\n        return new ParseError(MESSAGES[code], code, offset);\n    }\n    constructor(message, code, offset) {\n        super(message);\n        this.code = code;\n        this.index = offset;\n    }\n}\nexports.ParseError = ParseError;\nconst MESSAGES = {\n    \"eof-in-string\": \"Unclosed string\",\n    \"eof-in-comment\": \"Unclosed comment\",\n    \"eof-in-bracket\": \"Unclosed bracket\",\n    \"unexpected-parenthesis\": \"Unexpected token\",\n    \"unexpected-calc-token\": \"Unexpected token\",\n};\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./errors\"));\n","var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var dotted = false;\n  var sciPos = -1;\n  var containsNumber = false;\n  var code;\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code >= 48 && code <= 57) {\n      containsNumber = true;\n    } else if (code === exp || code === EXP) {\n      if (sciPos > -1) {\n        break;\n      }\n      sciPos = pos;\n    } else if (code === dot) {\n      if (dotted) {\n        break;\n      }\n      dotted = true;\n    } else if (code === plus || code === minus) {\n      if (pos !== 0) {\n        break;\n      }\n    } else {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  if (sciPos + 1 === pos) pos--;\n\n  return containsNumber\n    ? {\n        number: value.slice(0, pos),\n        unit: value.slice(pos)\n      }\n    : false;\n};\n","/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isPlain = require('is-plain-object');\n\nfunction set(target, path, value, options) {\n  if (!isObject(target)) {\n    return target;\n  }\n\n  let opts = options || {};\n  const isArray = Array.isArray(path);\n  if (!isArray && typeof path !== 'string') {\n    return target;\n  }\n\n  let merge = opts.merge;\n  if (merge && typeof merge !== 'function') {\n    merge = Object.assign;\n  }\n\n  const keys = (isArray ? path : split(path, opts)).filter(isValidKey);\n  const len = keys.length;\n  const orig = target;\n\n  if (!options && keys.length === 1) {\n    result(target, keys[0], value, merge);\n    return target;\n  }\n\n  for (let i = 0; i < len; i++) {\n    let prop = keys[i];\n\n    if (!isObject(target[prop])) {\n      target[prop] = {};\n    }\n\n    if (i === len - 1) {\n      result(target, prop, value, merge);\n      break;\n    }\n\n    target = target[prop];\n  }\n\n  return orig;\n}\n\nfunction result(target, path, value, merge) {\n  if (merge && isPlain(target[path]) && isPlain(value)) {\n    target[path] = merge({}, target[path], value);\n  } else {\n    target[path] = value;\n  }\n}\n\nfunction split(path, options) {\n  const id = createKey(path, options);\n  if (set.memo[id]) return set.memo[id];\n\n  const char = (options && options.separator) ? options.separator : '.';\n  let keys = [];\n  let res = [];\n\n  if (options && typeof options.split === 'function') {\n    keys = options.split(path);\n  } else {\n    keys = path.split(char);\n  }\n\n  for (let i = 0; i < keys.length; i++) {\n    let prop = keys[i];\n    while (prop && prop.slice(-1) === '\\\\' && keys[i + 1] != null) {\n      prop = prop.slice(0, -1) + char + keys[++i];\n    }\n    res.push(prop);\n  }\n  set.memo[id] = res;\n  return res;\n}\n\nfunction createKey(pattern, options) {\n  let id = pattern;\n  if (typeof options === 'undefined') {\n    return id + '';\n  }\n  const keys = Object.keys(options);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    id += ';' + key + '=' + String(options[key]);\n  }\n  return id;\n}\n\nfunction isValidKey(key) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}\n\nfunction isObject(val) {\n  return val !== null && (typeof val === 'object' || typeof val === 'function');\n}\n\nset.memo = {};\nmodule.exports = set;\n","import transform from '../../src/utils/transform'\n\n// import {default as nest_2} from '../mocks/nest_2.json'\n// import {default as nest_5} from '../mocks/nest_5.json'\n// import {default as nest_10} from '../mocks/nest_10.json'\n// import {default as nest_20} from '../mocks/nest_20.json'\n// import {default as nest_50} from '../mocks/nest_50.json'\n// import {default as nest_100} from '../mocks/nest_100.json'\n// import {default as nest_500} from '../mocks/nest_500.json'\n\n// import {default as tokens} from '../mocks/tokens.json'\n\n// import abcdef from '../mocks/abcdefmock10.json'\n\n// export const parseDefaultTokens = () => {\n//     const parsedTokens = parseTokenValues(testTokens);\n// }    \n\n// export const parseNestedTokens = () => {\n//     const parsed_2 = parseTokenValues(nest_2)\n//     const parsed_5 = parseTokenValues(nest_5)\n//     const parsed_10 = parseTokenValues(nest_10)\n//     const parsed_20 = parseTokenValues(nest_20)\n//     const parsed_50 = parseTokenValues(nest_50)\n//     const parsed_100 = parseTokenValues(nest_100)\n//     const parsed_500 = parseTokenValues(nest_500)\n// }\n\n\n// export const parseMergeResolveTokens = () => {\n//     const parsedTokens = parseTokenValues(tokens)\n//     const merged = mergeTokenGroups(parsedTokens, ['Foundations', 'Light', 'Dark'])\n//     const resolved = resolveTokenValues(merged)\n// }\n\nconst abcdef = {\n  \"index_0\": {\n    \"value\": \"10px\",\n    \"type\": \"dimension\"\n  },\n  \"index_1\": {\n    \"value\": \"{index_0} * {index_0}\",\n    \"type\": \"dimension\"\n  },\n  \"index_2\": {\n    \"value\": \"{index_1} * {index_1}\",\n    \"type\": \"dimension\"\n  },\n  \"index_3\": {\n    \"value\": \"{index_2} * {index_2}\",\n    \"type\": \"dimension\"\n  },\n  \"index_4\": {\n    \"value\": \"{index_3} * {index_3}\",\n    \"type\": \"dimension\"\n  },\n  \"index_5\": {\n    \"value\": \"{index_4} * {index_4}\",\n    \"type\": \"dimension\"\n  },\n  \"index_6\": {\n    \"value\": \"{index_5} * {index_5}\",\n    \"type\": \"dimension\"\n  },\n  \"index_7\": {\n    \"value\": \"{index_6} * {index_6}\",\n    \"type\": \"dimension\"\n  },\n  \"index_8\": {\n    \"value\": \"{index_7} * {index_7}\",\n    \"type\": \"dimension\"\n  },\n  \"index_9\": {\n    \"value\": \"{index_8} * {index_8}\",\n    \"type\": \"dimension\"\n  },\n  \"index_10\": {\n    \"value\": \"{index_9} * {index_9}\",\n    \"type\": \"dimension\"\n  }\n}\n\nexport const parseAbcefTokens = () => {\n // @ts-ignore\nlet reversed = Object.fromEntries(Object.entries(abcdef).reverse())\nconst t0 = performance.now()\n// @ts-ignore\ntransform({core: reversed}, ['core'], [], {\n  expandTypography: true,\n  expandShadow: false,\n  expandComposition: true,\n  preserveRawValue: false,\n  throwErrorWhenNotResolved: false,\n  resolveReferences: true,\n  expandBorder: false,\n})\nconst t1 = performance.now()\n// @ts-ignore\ntransform({core: abcdef}, ['core'], [], {\n  expandTypography: true,\n  expandShadow: false,\n  expandComposition: true,\n  preserveRawValue: false,\n  throwErrorWhenNotResolved: false,\n  resolveReferences: true,\n  expandBorder: false,\n})\nconst t2 = performance.now()\nconsole.log('reversed', t1 - t0)\nconsole.log('normal', t2 - t1)\n\n}","import set from 'set-value';\nimport extend from 'just-extend';\nimport tokenTypes from '../../config/tokenType.defs.json';\nimport { DeepKeyTokenMap, SingleToken, TokenTypeSchema } from '@/types/tokens';\nimport { TokenTypes } from '@/constants/TokenTypes';\n\ntype CreateTokensObjectResult = Partial<Record<TokenTypes, {\n  values: DeepKeyTokenMap\n}>>;\n\nexport function transformName(name: string): TokenTypes {\n  switch (name) {\n    case 'color':\n    case 'colors':\n      return TokenTypes.COLOR;\n    case 'space':\n    case 'spacing':\n      return TokenTypes.SPACING;\n    case 'size':\n    case 'sizing':\n      return TokenTypes.SIZING;\n    case 'boxShadow':\n      return TokenTypes.BOX_SHADOW;\n    case 'borderRadius':\n      return TokenTypes.BORDER_RADIUS;\n    case 'borderWidth':\n      return TokenTypes.BORDER_WIDTH;\n    case 'opacity':\n      return TokenTypes.OPACITY;\n    case 'fontFamilies':\n      return TokenTypes.FONT_FAMILIES;\n    case 'fontWeights':\n      return TokenTypes.FONT_WEIGHTS;\n    case 'fontSizes':\n      return TokenTypes.FONT_SIZES;\n    case 'lineHeights':\n      return TokenTypes.LINE_HEIGHTS;\n    case 'typography':\n      return TokenTypes.TYPOGRAPHY;\n    case 'letterSpacing':\n      return TokenTypes.LETTER_SPACING;\n    case 'paragraphSpacing':\n      return TokenTypes.PARAGRAPH_SPACING;\n    case 'composition':\n      return TokenTypes.COMPOSITION;\n    case 'border':\n      return TokenTypes.BORDER;\n    case 'asset':\n      return TokenTypes.ASSET;\n    default:\n      return TokenTypes.OTHER;\n  }\n}\n\nexport function appendTypeToToken(token: Omit<SingleToken, 'type'> & { type?: TokenTypes; }): SingleToken {\n  const typeToSet = token.type ? token.type : transformName(token.name.split('.').slice(0, 1).toString());\n  return {\n    ...token,\n    type: typeToSet,\n  } as SingleToken;\n}\n\n// Creates a tokens object so that tokens are displayed in groups in the UI.\nexport function createTokensObject(tokens: (Omit<SingleToken, 'type'> & { type?: TokenTypes; })[], tokenFilter = '') {\n  if (tokens.length > 0) {\n    const obj = tokens.reduce<CreateTokensObjectResult>((acc, cur) => {\n      if (tokenFilter === '' || cur.name?.toLowerCase().search(tokenFilter?.toLowerCase()) >= 0) {\n        const propToSet = cur.type ? cur.type : transformName(cur.name.split('.').slice(0, 1).toString());\n\n        if (!acc[propToSet]?.values) {\n          acc[propToSet] = { values: {} };\n        }\n\n        // we can use ! here because in the previous block we are ensuring\n        // the values object exists\n        set(acc[propToSet]!.values, cur.name, extend(true, {}, cur) as SingleToken);\n      }\n      return acc;\n    }, {});\n    return obj;\n  }\n  return {};\n}\n\n// Takes an array of tokens, transforms them into\n// an object and merges that with values we require for the UI\nexport function mappedTokens(tokens: SingleToken[], tokenFilter: string) {\n  const tokenObj = extend(true, {}, tokenTypes) as Record<\n  TokenTypes,\n  TokenTypeSchema & { values: DeepKeyTokenMap }\n  >;\n  const tokenObjects = createTokensObject(tokens, tokenFilter);\n\n  Object.entries(tokenObjects).forEach(([key, group]) => {\n    tokenObj[key as TokenTypes] = {\n      ...(tokenObj[key as TokenTypes] ?? {}),\n      values: group.values,\n    };\n  });\n\n  return Object.entries(tokenObj);\n}\n","// evaluates start of alias tokens such as $foo or {foo\nexport const checkAliasStartRegex = /(\\$[^\\s,]+\\w)|({([^]*))/g;\n\n// evaluates tokens such as $foo or {foo}\nexport const AliasRegex = /(?:\\$([^\\s,]+\\w))|(?:{([^}]*)})/g;\n\nexport const AliasDollarRegex = /(?:\\$([^\\s,]+\\w))/g;\n","export enum BoxShadowTypes {\n  DROP_SHADOW = 'dropShadow',\n  INNER_SHADOW = 'innerShadow',\n}\n","export enum ColorModifierTypes {\n  LIGHTEN = 'lighten',\n  DARKEN = 'darken',\n  MIX = 'mix',\n  ALPHA = 'alpha',\n}\n","export enum ColorSpaceTypes {\n  LCH = 'lch',\n  SRGB = 'srgb',\n  P3 = 'p3',\n  HSL = 'hsl',\n}\n","export enum Properties {\n  sizing = 'sizing',\n  height = 'height',\n  width = 'width',\n  spacing = 'spacing',\n  verticalPadding = 'verticalPadding',\n  horizontalPadding = 'horizontalPadding',\n  paddingTop = 'paddingTop',\n  paddingRight = 'paddingRight',\n  paddingBottom = 'paddingBottom',\n  paddingLeft = 'paddingLeft',\n  itemSpacing = 'itemSpacing',\n  fill = 'fill',\n  backgroundBlur = 'backgroundBlur',\n  border = 'border',\n  borderTop = 'borderTop',\n  borderRight = 'borderRight',\n  borderBottom = 'borderBottom',\n  borderLeft = 'borderLeft',\n  borderColor = 'borderColor',\n  borderRadius = 'borderRadius',\n  borderRadiusTopLeft = 'borderRadiusTopLeft',\n  borderRadiusTopRight = 'borderRadiusTopRight',\n  borderRadiusBottomRight = 'borderRadiusBottomRight',\n  borderRadiusBottomLeft = 'borderRadiusBottomLeft',\n  borderWidth = 'borderWidth',\n  borderWidthTop = 'borderWidthTop',\n  borderWidthRight = 'borderWidthRight',\n  borderWidthBottom = 'borderWidthBottom',\n  borderWidthLeft = 'borderWidthLeft',\n  boxShadow = 'boxShadow',\n  opacity = 'opacity',\n  fontFamilies = 'fontFamilies',\n  fontWeights = 'fontWeights',\n  fontSizes = 'fontSizes',\n  lineHeights = 'lineHeights',\n  typography = 'typography',\n  composition = 'composition',\n  letterSpacing = 'letterSpacing',\n  paragraphSpacing = 'paragraphSpacing',\n  textCase = 'textCase',\n  dimension = 'dimension',\n  textDecoration = 'textDecoration',\n  asset = 'asset',\n  visibility = 'visibility',\n  text = 'text',\n  number = 'number',\n  tokenValue = 'tokenValue',\n  value = 'value',\n  tokenName = 'tokenName',\n  description = 'description',\n}\n","export enum StorageProviderType {\n  LOCAL = 'local',\n  GENERIC_VERSIONED_STORAGE = 'genericVersionedStorage',\n  JSONBIN = 'jsonbin',\n  GITHUB = 'github',\n  GITLAB = 'gitlab',\n  SUPERNOVA = 'supernova',\n  ADO = 'ado',\n  URL = 'url',\n  BITBUCKET = 'bitbucket',\n}\n","export enum TokenSetStatus {\n  DISABLED = 'disabled', // @README this means the token set is completely disabled\n  SOURCE = 'source', // @README this means the token set will be used to resolve references, but will be excluded from styles creation\n  ENABLED = 'enabled', // @README this means the token set is fully enabled and will affect style creation\n}\n","export enum TokenTypes {\n  OTHER = 'other',\n  COLOR = 'color',\n  BORDER_RADIUS = 'borderRadius',\n  SIZING = 'sizing',\n  SPACING = 'spacing',\n  TEXT = 'text',\n  TYPOGRAPHY = 'typography',\n  OPACITY = 'opacity',\n  BORDER_WIDTH = 'borderWidth',\n  BOX_SHADOW = 'boxShadow',\n  FONT_FAMILIES = 'fontFamilies',\n  FONT_WEIGHTS = 'fontWeights',\n  LINE_HEIGHTS = 'lineHeights',\n  FONT_SIZES = 'fontSizes',\n  LETTER_SPACING = 'letterSpacing',\n  PARAGRAPH_SPACING = 'paragraphSpacing',\n  PARAGRAPH_INDENT = 'paragraphIndent',\n  TEXT_DECORATION = 'textDecoration',\n  TEXT_CASE = 'textCase',\n  COMPOSITION = 'composition',\n  DIMENSION = 'dimension',\n  BORDER = 'border',\n  ASSET = 'asset',\n  BOOLEAN = 'boolean',\n  NUMBER = 'number',\n}\n","export default function convertOpacityToFigma(value: string) {\n  // Matches 50%, 100%, etc.\n  const matched = value.match(/(\\d+%)/);\n  if (matched) {\n    return Number(matched[0].slice(0, -1)) / 100;\n  }\n  return Number(value);\n}\n","import omit from 'just-omit';\nimport { appendTypeToToken } from '@/app/components/createTokenObj';\nimport { SingleToken } from '@/types/tokens';\nimport { checkIfAlias, checkIfContainsAlias, getAliasValue } from '@/utils/alias';\nimport { isSingleToken } from '@/utils/is';\nimport { TokenTypes } from '@/constants/TokenTypes';\nimport { UsedTokenSetsMap } from '@/types';\nimport { TokenSetStatus } from '@/constants/TokenSetStatus';\nimport { TokenBoxshadowValue } from '@/types/values';\nimport { CompositionTokenProperty, CompositionTokenValue } from '@/types/CompositionTokenProperty';\n\n\n\nexport type ResolveTokenValuesResult = SingleToken<true, {\n  failedToResolve?: boolean\n}>;\n\nexport function findAllAliases(tokens: (SingleToken | string)[]) {\n  return tokens.filter((token) => (\n    checkIfAlias(token, tokens.filter(isSingleToken))\n  ));\n}\n\nexport function resolveTokenValues(tokens: SingleToken[], previousCount: number = 0): ResolveTokenValuesResult[] {\n  const aliases = findAllAliases(tokens);\n  let returnedTokens: ResolveTokenValuesResult[] = tokens;\n  returnedTokens = tokens.map((t, _, tokensInProgress) => {\n    let returnValue:\n    Record<string, ReturnType<typeof getAliasValue>>[] |\n    Record<string, ReturnType<typeof getAliasValue>> |\n    ReturnType<typeof getAliasValue>;\n\n    let failedToResolve = false;\n    // Iterate over Typography and boxShadow Object to get resolved values\n    if (t.type === TokenTypes.TYPOGRAPHY || t.type === TokenTypes.BOX_SHADOW || t.type === TokenTypes.BORDER) {\n      // If value is alias\n      if (typeof t.value === 'string') {\n        returnValue = getAliasValue(t.value, tokensInProgress, false, previousCount);\n        failedToResolve = returnValue === null || checkIfContainsAlias(typeof returnValue === 'string' ? returnValue : '');\n      } else if (Array.isArray(t.value)) {\n        // If we're dealing with an array, iterate over each item and then key\n        returnValue = t.value.map((item) => (\n          Object.entries(item).reduce<Record<string, ReturnType<typeof getAliasValue>>>((acc, [key, value]) => {\n            acc[key] = getAliasValue(value, tokensInProgress, false, previousCount);\n            const itemFailedToResolve = acc[key] === null || checkIfContainsAlias(typeof acc[key] === 'string' ? acc[key] as string : '');\n            if (itemFailedToResolve) {\n              failedToResolve = true;\n            }\n            return acc;\n          }, {})\n        ));\n        // If not, iterate over each key\n      } else {\n        returnValue = Object.entries(t.value).reduce<Record<string, ReturnType<typeof getAliasValue>>>((acc, [key, value]) => {\n          acc[key] = getAliasValue(value, tokensInProgress, false, previousCount);\n          const itemFailedToResolve = acc[key] === null || checkIfContainsAlias(typeof acc[key] === 'string' ? acc[key] as string : '');\n          if (itemFailedToResolve) {\n            failedToResolve = true;\n          }\n          return acc;\n        }, {});\n      }\n    } else if (t.type === TokenTypes.COMPOSITION) {\n      let itemFailedToResolve = false;\n      const compositionReturnValue: CompositionTokenValue = {};\n      Object.entries(t.value).forEach(([property, value]) => {\n        if (Array.isArray(value)) {\n          const resolvedValue = value.map((item) => (\n            Object.entries(item as TokenBoxshadowValue).reduce<Record<string, ReturnType<typeof getAliasValue>>>((acc, [key, value]) => {\n              acc[key] = getAliasValue(value, tokensInProgress, false, previousCount);\n              itemFailedToResolve = acc[key] === null || checkIfContainsAlias(acc[key]);\n              if (itemFailedToResolve) {\n                failedToResolve = true;\n              }\n              return acc;\n            }, {}) as TokenBoxshadowValue\n          ));\n          compositionReturnValue[property as CompositionTokenProperty] = resolvedValue;\n        } else if (typeof value === 'object') {\n          const resolvedValue = Object.entries(value).reduce<Record<string, ReturnType<typeof getAliasValue>>>((acc, [key, value]) => {\n            acc[key] = getAliasValue(value, tokensInProgress, false, previousCount);\n            itemFailedToResolve = acc[key] === null || checkIfContainsAlias(acc[key]);\n            if (itemFailedToResolve) {\n              failedToResolve = true;\n            }\n            return acc;\n          }, {});\n          compositionReturnValue[property as CompositionTokenProperty] = resolvedValue;\n        } else {\n          const resolvedValue = getAliasValue(value, tokensInProgress, false, previousCount);\n          if (resolvedValue !== null) {\n            compositionReturnValue[property as CompositionTokenProperty] = resolvedValue;\n          }\n          itemFailedToResolve = resolvedValue === null || checkIfContainsAlias(resolvedValue);\n          if (itemFailedToResolve) {\n            failedToResolve = true;\n          }\n        }\n      });\n      returnValue = compositionReturnValue;\n    } else {\n      // If we're not dealing with special tokens, just return resolved value\n      returnValue = getAliasValue(t, tokensInProgress, false, previousCount);\n      failedToResolve = returnValue === null || checkIfContainsAlias(typeof returnValue === 'string' ? returnValue : '');\n    }\n    const returnObject = {\n      ...omit(t, 'failedToResolve'),\n      value: returnValue,\n      rawValue: t.rawValue || t.value,\n      ...(failedToResolve ? { failedToResolve } : {}),\n    } as ResolveTokenValuesResult;\n    return returnObject;\n  });\n\n  if (aliases.length > 0 && (previousCount > aliases.length || !previousCount)) {\n    return resolveTokenValues(returnedTokens, aliases.length);\n  }\n\n  return returnedTokens;\n}\n\nexport function mergeTokenGroups(tokens: Record<string, SingleToken[]>, usedSets: UsedTokenSetsMap = {}): SingleToken[] {\n  const mergedTokens: SingleToken[] = [];\n  // @README we will use both ENABLED and SOURCE sets\n  // we only need to ignore the SOURCE sets when creating styles\n  const tokenSetsToMerge = Object.entries(usedSets)\n    .filter(([, status]) => status === TokenSetStatus.ENABLED || status === TokenSetStatus.SOURCE)\n    .map(([tokenSet]) => tokenSet);\n\n  const tokenSetOrder = tokens?.$metadata?.map(({ value }) => value);\n\n  const tokenEntries = tokenSetOrder ? Object.entries(tokens)\n    .sort((a, b) => tokenSetOrder.indexOf(a[0]) - tokenSetOrder.indexOf(b[0])) : Object.entries(tokens);\n\n  // Reverse token set order (right-most win) and check for duplicates\n  tokenEntries\n    .reverse()\n    .forEach((tokenGroup: [string, SingleToken[]]) => {\n      if (tokenSetsToMerge.length === 0 || tokenSetsToMerge.includes(tokenGroup[0])) {\n        tokenGroup[1].forEach((token) => {\n          const mergedTokenIndex = mergedTokens.findIndex((t) => t.name === token.name);\n          const mergedToken = mergedTokens[mergedTokenIndex];\n          if (mergedTokenIndex < 0) {\n            mergedTokens.push({\n              ...appendTypeToToken(token),\n              internal__Parent: tokenGroup[0],\n            } as SingleToken);\n          }\n          if (mergedTokenIndex > -1 && typeof mergedToken.value === 'object' && typeof token.value === 'object') {\n            mergedTokens.splice(mergedTokenIndex, 1, {\n              ...mergedToken,\n              value: {\n                ...token.value,\n                ...mergedToken.value,\n              },\n            } as SingleToken);\n          }\n        });\n      }\n    });\n  return mergedTokens;\n}\n","import { AliasRegex } from '@/constants/AliasRegex';\nimport { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleToken } from '@/types/tokens';\nimport { getAliasValue } from './getAliasValue';\n\n// @TODO -- removed string type logic for now\n// Checks if token is an alias token and if it has a valid reference\nexport function checkIfAlias(token: SingleToken | string, allTokens: SingleToken[] = []): boolean {\n  try {\n    let aliasToken = false;\n    if (typeof token === 'string') {\n      aliasToken = Boolean(token.match(AliasRegex));\n    } else if (token.type === TokenTypes.TYPOGRAPHY || token.type === TokenTypes.BOX_SHADOW || token.type === TokenTypes.BORDER) {\n      if (typeof token.value === 'string') { aliasToken = Boolean(String(token.value).match(AliasRegex)); } else {\n        const arrayValue = Array.isArray(token.value) ? token.value : [token.value];\n        aliasToken = arrayValue.some((value) => (\n          Object.values(value).some((singleValue) => (\n            Boolean(singleValue?.toString().match(AliasRegex))\n          ))\n        ));\n      }\n    } else if (token.type === TokenTypes.COMPOSITION) {\n      return true;\n    } else {\n      aliasToken = Boolean(token.value.toString().match(AliasRegex));\n    }\n\n    // Check if alias is found\n    if (aliasToken) {\n      const aliasValue = getAliasValue(token, allTokens);\n      return aliasValue != null;\n    }\n  } catch (e) {\n    console.log(`Error checking alias of token ${typeof token === 'object' ? token.name : token}`, token, allTokens, e);\n  }\n  return false;\n}\n","import { checkAliasStartRegex } from '@/constants/AliasRegex';\nimport { SingleToken } from '@/types/tokens';\n\nexport function checkIfContainsAlias(token?: SingleToken['value'] | number | null) {\n  if (!token) return false;\n  return Boolean(token.toString().match(checkAliasStartRegex));\n}\n","import { getRootReferences, findReferences } from '../findReferences';\nimport { ColorModifierTypes } from '@/constants/ColorModifierTypes';\nimport { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleToken } from '@/types/tokens';\nimport { TokenBorderValue, TokenBoxshadowValue, TokenTypographyValue } from '@/types/values';\nimport { convertToRgb } from '../color';\nimport { convertModifiedColorToHex } from '../convertModifiedColorToHex';\n\nimport { isSingleTokenValueObject } from '../is';\nimport { checkAndEvaluateMath } from '../math';\n// eslint-disable-next-line import/no-cycle\nimport { checkIfAlias } from './checkIfAlias';\n\ntype TokenNameNodeType = string | undefined;\n\nfunction getReturnedValue(token: SingleToken | string | number) {\n  if (typeof token === 'object' && typeof token.value === 'object' && (token?.type === TokenTypes.BOX_SHADOW || token?.type === TokenTypes.TYPOGRAPHY || token?.type === TokenTypes.BORDER)) {\n    return token.value;\n  }\n  if (isSingleTokenValueObject(token)) {\n    return token.value.toString();\n  }\n  return token.toString();\n}\n\nfunction replaceAliasWithResolvedReference(\n  token: string | TokenTypographyValue | TokenBoxshadowValue | TokenBoxshadowValue[] | TokenBorderValue | null,\n  reference: string,\n  resolvedReference: string | number | TokenBoxshadowValue | TokenBoxshadowValue[] | Record<string, unknown> | null,\n) {\n  if (typeof resolvedReference === 'object') {\n    return resolvedReference;\n  }\n  if (token && (typeof token === 'string' || typeof token === 'number')) {\n    const stringValue = String(resolvedReference);\n    const resolved = checkAndEvaluateMath(stringValue);\n    return token.replace(reference, String(resolved));\n  }\n  return token;\n}\n\n// @TODO This function logic needs to be explained to improve it. It is unclear at this time which cases it needs to handle and how\n// when isResolved is true, we don't calculate the modifiers because it has been already resolved. previousCount prevents the multiple calculation of modifier\nexport function getAliasValue(token: SingleToken | string | number, tokens: SingleToken[] = [], isResolved: boolean = true, previousCount: number = 0): string | number | TokenTypographyValue | TokenBoxshadowValue | TokenBorderValue | Array<TokenBoxshadowValue> | null {\n  // @TODO not sure how this will handle typography and boxShadow values. I don't believe it works.\n  // The logic was copied from the original function in aliases.tsx\n  let returnedValue: ReturnType<typeof getReturnedValue> | null = getReturnedValue(token);\n  try {\n    const tokenReferences = typeof returnedValue === 'string' ? getRootReferences(returnedValue) : null;\n\n    if (tokenReferences?.length) {\n      const resolvedReferences = Array.from(tokenReferences).map((ref) => {\n        if (ref.length > 1) {\n          let nameToLookFor: string;\n          if (ref.startsWith('{')) {\n            nameToLookFor = ref.slice(1, ref.length - 1);\n          } else { nameToLookFor = ref.substring(1); }\n          if (\n            (typeof token === 'object' && nameToLookFor === token.name)\n            || nameToLookFor === token\n          ) {\n            return isSingleTokenValueObject(token) ? token.value.toString() : token.toString();\n          }\n          const nameToLookForReferences = getRootReferences(nameToLookFor);\n          if (nameToLookForReferences?.length) {\n            nameToLookFor = String(getAliasValue(nameToLookFor, tokens, isResolved, previousCount));\n          }\n\n          const tokenAliasSplitted = nameToLookFor.split('.');\n          const tokenAliasSplittedLast: TokenNameNodeType = tokenAliasSplitted.pop();\n          const tokenAliasLastExcluded = tokenAliasSplitted.join('.');\n          const tokenAliasSplittedLastPrevious: number = Number(tokenAliasSplitted.pop());\n          const tokenAliasLastPreviousExcluded = tokenAliasSplitted.join('.');\n          const foundToken = tokens.find((t) => t.name === nameToLookFor || t.name === tokenAliasLastExcluded || t.name === tokenAliasLastPreviousExcluded);\n\n          if (foundToken?.name === nameToLookFor) {\n            return getAliasValue(foundToken, tokens, isResolved, previousCount);\n          }\n\n          if (\n            !!tokenAliasSplittedLast\n            && foundToken?.name === tokenAliasLastExcluded\n            && foundToken.value?.hasOwnProperty(tokenAliasSplittedLast)\n          ) {\n            const { value } = foundToken;\n            if (typeof value === 'object' && !Array.isArray(value)) {\n              const resolvedValue = value[tokenAliasSplittedLast as keyof typeof value] as string | number;\n              return getAliasValue(resolvedValue, tokens, isResolved, previousCount);\n            }\n          }\n\n          if (\n            tokenAliasSplittedLastPrevious !== undefined\n            && !!tokenAliasSplittedLast\n            && foundToken?.name === tokenAliasLastPreviousExcluded\n            && Array.isArray(foundToken?.rawValue)\n            && !!foundToken?.rawValue[tokenAliasSplittedLastPrevious]\n            && foundToken?.rawValue[tokenAliasSplittedLastPrevious].hasOwnProperty(tokenAliasSplittedLast)\n          ) {\n            const rawValueEntry = foundToken?.rawValue[tokenAliasSplittedLastPrevious];\n            return getAliasValue(rawValueEntry[tokenAliasSplittedLast as keyof typeof rawValueEntry] || tokenAliasSplittedLastPrevious, tokens, isResolved, previousCount);\n          }\n        }\n        return ref;\n      });\n\n      tokenReferences.forEach((reference, index) => {\n        const resolvedReference = resolvedReferences[index];\n        returnedValue = replaceAliasWithResolvedReference(returnedValue, reference, resolvedReference);\n      });\n\n      if (returnedValue === 'null') {\n        returnedValue = null;\n      }\n    }\n    if (returnedValue && typeof returnedValue === 'string') {\n      const remainingReferences = findReferences(returnedValue);\n      if (!remainingReferences) {\n        const couldBeNumberValue = checkAndEvaluateMath(returnedValue);\n        if (typeof couldBeNumberValue === 'number') return couldBeNumberValue;\n        const rgbColor = convertToRgb(couldBeNumberValue);\n        if (typeof token !== 'string' && typeof token !== 'number' && token?.$extensions?.['studio.tokens']?.modify && rgbColor && !isResolved && previousCount === 0) {\n          if (token?.$extensions?.['studio.tokens']?.modify?.type === ColorModifierTypes.MIX && checkIfAlias(token?.$extensions?.['studio.tokens']?.modify?.color)) {\n            return convertModifiedColorToHex(rgbColor, { ...token.$extensions?.['studio.tokens']?.modify, value: String(getAliasValue(token?.$extensions?.['studio.tokens']?.modify?.value, tokens)), color: String(getAliasValue(token?.$extensions?.['studio.tokens']?.modify?.color, tokens, isResolved, previousCount)) ?? '' });\n          }\n          return convertModifiedColorToHex(rgbColor, { ...token.$extensions?.['studio.tokens']?.modify, value: String(getAliasValue(token?.$extensions?.['studio.tokens']?.modify?.value, tokens, isResolved, previousCount)) });\n        }\n        return rgbColor;\n      }\n    }\n  } catch (err) {\n    console.log(`Error getting alias value of ${JSON.stringify(token, null, 2)}`, tokens);\n    return null;\n  }\n\n  if (returnedValue && typeof returnedValue === 'string') {\n    return checkAndEvaluateMath(returnedValue);\n  }\n  return returnedValue;\n}\n","export * from './getAliasValue';\nexport * from './checkIfAlias';\nexport * from './checkIfContainsAlias';\n","import { parseToRgba, toHex } from 'color2k';\nimport convertOpacityToFigma from '@/plugin/figmaTransforms/opacity';\n\n// Convert non-conform colors to RGB value that can be used throughout the plugin\nexport function convertToRgb(color: string): string | null {\n  try {\n    if (typeof color !== 'string') {\n      return color;\n    }\n    const hexRegex = /#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/g;\n    const hslaRegex = /(hsla?\\(.*?\\))/g;\n    const rgbaRegex = /(rgba?\\(.*?\\))/g;\n    let returnedColor = color;\n\n    try {\n      const matchesRgba = Array.from(returnedColor.matchAll(rgbaRegex), (m) => m[0]);\n      const matchesHsla = Array.from(returnedColor.matchAll(hslaRegex), (m) => m[0]);\n      if (matchesHsla.length > 0) {\n        matchesHsla.forEach((match) => {\n          returnedColor = returnedColor.replace(match, toHex(match));\n        });\n      }\n      if (matchesRgba.length > 0) {\n        matchesRgba.forEach((match) => {\n          const matchedString = match;\n          const matchedColor = match.replace(/rgba?\\(/g, '').replace(')', '');\n          const matchesHexInsideRgba = matchedColor.match(hexRegex);\n          let r;\n          let g;\n          let b;\n          let alpha = '1';\n          if (matchesHexInsideRgba) {\n            [r, g, b] = parseToRgba(matchesHexInsideRgba[0]);\n            alpha = matchedColor.split(',').pop()?.trim() ?? '0';\n          } else {\n            [r, g, b, alpha = '1'] = matchedColor.split(',').map((n) => n.trim());\n          }\n          const a = convertOpacityToFigma(alpha);\n          returnedColor = returnedColor.split(matchedString).join(toHex(`rgba(${r}, ${g}, ${b}, ${a})`));\n        });\n      }\n    } catch (e) {\n      console.log('error', e, color);\n    }\n    return returnedColor;\n  } catch (e) {\n    console.error(e);\n  }\n\n  return null;\n}\n","import Color from 'colorjs.io';\nimport { ColorSpaceTypes } from '@/constants/ColorSpaceTypes';\n\nexport function darken(color: Color, colorSpace: ColorSpaceTypes, amount: number) {\n  switch (colorSpace) {\n    case ColorSpaceTypes.LCH: {\n      const lightness = color.lch.l;\n      const difference = lightness;\n      const newChroma = Math.max(0, color.lch.c - amount * color.lch.c);\n      const newLightness = Math.max(0, lightness - difference * amount);\n      color.set('lch.l', newLightness);\n      color.set('lch.c', newChroma);\n      return color;\n    }\n    case ColorSpaceTypes.HSL: {\n      const lightness = color.hsl.l;\n      const difference = lightness;\n      const newLightness = Math.max(0, lightness - difference * amount);\n      color.set('hsl.l', newLightness);\n      return color;\n    }\n    case ColorSpaceTypes.P3: {\n      const colorInP3 = color.to('p3');\n      const newRed = Math.max(0, colorInP3.p3.r - amount * colorInP3.p3.r);\n      const newGreen = Math.max(0, colorInP3.p3.g - amount * colorInP3.p3.g);\n      const newBlue = Math.max(0, colorInP3.p3.b - amount * colorInP3.p3.b);\n      colorInP3.set('p3.r', newRed);\n      colorInP3.set('p3.g', newGreen);\n      colorInP3.set('p3.b', newBlue);\n      return colorInP3;\n    }\n\n    case ColorSpaceTypes.SRGB: {\n      const newRed = Math.max(0, color.srgb.r - amount * color.srgb.r);\n      const newGreen = Math.max(0, color.srgb.g - amount * color.srgb.g);\n      const newBlue = Math.max(0, color.srgb.b - amount * color.srgb.b);\n      color.set('srgb.r', newRed);\n      color.set('srgb.g', newGreen);\n      color.set('srgb.b', newBlue);\n      return color;\n    }\n\n    default: {\n      return color.darken(amount);\n    }\n  }\n}\n","export * from './convertToRgb';\nexport * from './isLightOrDark';\n","import { readableColorIsBlack } from 'color2k';\n\n// Light or dark check for Token Buttons: If color is very bright e.g. white we show a different style\nexport function lightOrDark(color: string) {\n  if (typeof color !== 'string') {\n    return 'light';\n  }\n  try {\n    return readableColorIsBlack(color) ? 'light' : 'dark';\n  } catch (e) {\n    return 'light';\n  }\n}\n","import Color from 'colorjs.io';\nimport { ColorSpaceTypes } from '@/constants/ColorSpaceTypes';\n\nexport function lighten(color: Color, colorSpace: ColorSpaceTypes, amount: number) {\n  switch (colorSpace) {\n    case ColorSpaceTypes.LCH: {\n      const lightness = color.lch.l;\n      const difference = 100 - lightness;\n      const newChroma = Math.max(0, color.lch.c - amount * color.lch.c);\n      const newLightness = Math.min(100, lightness + difference * amount);\n      color.set('lch.l', newLightness);\n      color.set('lch.c', newChroma);\n      return color;\n    }\n    case ColorSpaceTypes.HSL: {\n      const lightness = color.hsl.l;\n      const difference = 100 - lightness;\n      const newLightness = Math.min(100, lightness + difference * amount);\n      color.set('hsl.l', newLightness);\n      return color;\n    }\n    case ColorSpaceTypes.P3: {\n      const colorInP3 = color.to('p3');\n      const newRed = Math.min(1, colorInP3.p3.r + amount * (1 - colorInP3.p3.r));\n      const newGreen = Math.min(1, colorInP3.p3.g + amount * (1 - colorInP3.p3.g));\n      const newBlue = Math.min(1, colorInP3.p3.b + amount * (1 - colorInP3.p3.b));\n      colorInP3.set('p3.r', newRed);\n      colorInP3.set('p3.g', newGreen);\n      colorInP3.set('p3.b', newBlue);\n      return colorInP3;\n    }\n    case ColorSpaceTypes.SRGB: {\n      const newRed = Math.min(1, color.srgb.r + amount * (1 - color.srgb.r));\n      const newGreen = Math.min(1, color.srgb.g + amount * (1 - color.srgb.g));\n      const newBlue = Math.min(1, color.srgb.b + amount * (1 - color.srgb.b));\n      color.set('srgb.r', newRed);\n      color.set('srgb.g', newGreen);\n      color.set('srgb.b', newBlue);\n      return color;\n    }\n    default: {\n      return color.lighten(amount);\n    }\n  }\n}\n","import Color from 'colorjs.io';\nimport { ColorSpaceTypes } from '@/constants/ColorSpaceTypes';\n\nexport function mix(color: Color, colorSpace: ColorSpaceTypes, amount: number, mixColor: Color) {\n  const mixValue = Math.max(0, Math.min(1, Number(amount)));\n\n  return new Color(color.mix(mixColor, mixValue).toString());\n}\n","import Color from 'colorjs.io';\n\nexport function transparentize(color: Color, amount: number) {\n  color.alpha = Math.max(0, Math.min(1, Number(amount)));\n  return color;\n}\n","import Color from 'colorjs.io';\nimport { ColorModifier } from '@/types/Modifier';\nimport { modifyColor } from './modifyColor';\n\nexport function convertModifiedColorToHex(baseColor: string, modifier: ColorModifier) {\n  let returnedColor = baseColor;\n  try {\n    returnedColor = modifyColor(baseColor, modifier);\n    const returnedColorInSpace = new Color(returnedColor);\n    return returnedColorInSpace.to('srgb').toString({ format: 'hex' });\n  } catch (e) {\n    return baseColor;\n  }\n}\n","import { Properties } from '@/constants/Properties';\n\nexport function convertToDefaultProperty(property: string): string {\n  let type: string = '';\n  switch (property) {\n    case Properties.width:\n    case Properties.height:\n    case Properties.sizing:\n    case Properties.itemSpacing:\n    case Properties.verticalPadding:\n    case Properties.horizontalPadding:\n    case Properties.paddingTop:\n    case Properties.paddingLeft:\n    case Properties.paddingBottom:\n    case Properties.paddingRight:\n      type = Properties.dimension;\n      break;\n    case Properties.borderRadiusTopLeft:\n    case Properties.borderRadiusTopRight:\n    case Properties.borderRadiusBottomLeft:\n    case Properties.borderRadiusBottomRight:\n      type = Properties.borderRadius;\n      break;\n    case Properties.borderColor:\n      type = Properties.fill;\n      break;\n    case Properties.borderWidthTop:\n    case Properties.borderWidthLeft:\n    case Properties.borderWidthRight:\n    case Properties.borderWidthBottom:\n      type = Properties.borderWidth;\n      break;\n    case 'fontFamily':\n      type = Properties.fontFamilies;\n      break;\n    case 'fontSize':\n      type = Properties.fontSizes;\n      break;\n    case 'fontWeight':\n      type = Properties.fontWeights;\n      break;\n    case 'lineHeights':\n    case 'lineHeight':\n      type = Properties.lineHeights;\n      break;\n    case 'style':\n      type = 'strokeStyle';\n      break;\n    default:\n      type = property;\n      break;\n  }\n  return type;\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { AnyTokenList, SingleToken } from '@/types/tokens';\nimport {\n  isSingleBorderToken, isSingleBoxShadowToken, isSingleCompositionToken, isSingleTokenValueObject, isSingleTypographyToken,\n} from './is';\nimport { isTokenGroupWithType } from './is/isTokenGroupWithType';\n\ntype Tokens = AnyTokenList | Partial<Record<string, Partial<Record<TokenTypes, Record<string, SingleToken<false>>>>> | { type: string } | { inheritType: string }>;\n\n// @TODO fix typings\nfunction checkForTokens({\n  obj,\n  token,\n  root = null,\n  returnValuesOnly = false,\n  expandTypography = false,\n  expandShadow = false,\n  expandComposition = false,\n  expandBorder = false,\n  inheritType,\n  groupLevel = 0,\n  currentTypeLevel = 0,\n}: {\n  obj: SingleToken<true>[]\n  token: Tokens\n  root: string | null\n  returnValuesOnly?: boolean\n  expandTypography?: boolean\n  expandShadow?: boolean\n  expandComposition?: boolean\n  expandBorder?: boolean\n  inheritType?: string\n  groupLevel?: number;\n  currentTypeLevel?: number;\n}): [SingleToken[], SingleToken | undefined] {\n  // replaces / in token name\n  let returnValue: Pick<SingleToken<false>, 'name' | 'value'> | {\n    type: TokenTypes;\n    value: Record<string, SingleToken['value']>;\n    description?: string;\n  } | undefined;\n  const shouldExpandTypography = (expandTypography && typeof token === 'object' && 'value' in token) ? isSingleTypographyToken(token.value) : false;\n  const shouldExpandShadow = (expandShadow && typeof token === 'object' && 'value' in token) ? isSingleBoxShadowToken(token.value) : false;\n  const shouldExpandComposition = (expandComposition && typeof token === 'object' && 'value' in token) ? isSingleCompositionToken(token.value) : false;\n  const shouldExpandBorder = (expandBorder && typeof token === 'object' && 'value' in token) ? isSingleBorderToken(token.value) : false;\n  if (isSingleTokenValueObject(token) && !shouldExpandTypography && !shouldExpandShadow && !shouldExpandComposition && !shouldExpandBorder) {\n    returnValue = {\n      ...token,\n      ...((!('type' in token) && inheritType) ? { type: inheritType, inheritTypeLevel: currentTypeLevel } : { }),\n    };\n  } else if (\n    (isSingleTypographyToken(token) && !expandTypography)\n    || (isSingleBoxShadowToken(token) && !expandShadow)\n    || (isSingleCompositionToken(token) && !expandComposition)\n    || (isSingleBorderToken(token) && !expandBorder)\n  ) {\n    returnValue = {\n      type: token.type,\n      value: Object.entries(token).reduce<Record<string, SingleToken['value']>>((acc, [key, val]) => {\n        acc[key] = isSingleTokenValueObject(val) && returnValuesOnly ? val.value : val;\n        return acc;\n      }, {}),\n    };\n\n    if (token.description) {\n      delete returnValue.value.description;\n      returnValue.description = token.description;\n    }\n  } else if (typeof token === 'object') {\n    let tokenToCheck = token;\n    if (!isSingleTokenValueObject(token)) {\n      groupLevel += 1;\n    }\n    if (isTokenGroupWithType(token)) {\n      const { type, ...tokenValues } = token;\n      inheritType = token.type;\n      currentTypeLevel = groupLevel;\n      tokenToCheck = tokenValues as Tokens;\n    }\n    if (isSingleTokenValueObject(token) && typeof token.value !== 'string') {\n      tokenToCheck = token.value as typeof tokenToCheck;\n    }\n    Object.entries(tokenToCheck).forEach(([key, value]) => {\n      const [, result] = checkForTokens({\n        obj,\n        token: value,\n        root: [root, key].filter((n) => n).join('.'),\n        returnValuesOnly,\n        expandTypography,\n        expandShadow,\n        expandComposition,\n        expandBorder,\n        inheritType,\n        groupLevel,\n        currentTypeLevel,\n      });\n      if (root && result) {\n        obj.push({ ...result, name: [root, key].join('.') });\n      } else if (result) {\n        obj.push({ ...result, name: key });\n      }\n    });\n  } else {\n    returnValue = {\n      value: token,\n    };\n  }\n\n  if (typeof returnValue === 'object' && 'name' in returnValue && returnValue?.name) {\n    returnValue.name = returnValue.name.split('/').join('.');\n  }\n\n  return [obj, returnValue as SingleToken | undefined];\n}\n\nexport default function convertToTokenArray({\n  tokens, returnValuesOnly = false, expandTypography = false, expandShadow = false, expandComposition = false, expandBorder = false,\n}: {\n  tokens: Tokens\n  returnValuesOnly?: boolean\n  expandTypography?: boolean\n  expandShadow?: boolean\n  expandComposition?: boolean\n  expandBorder?: boolean\n}) {\n  const [result] = checkForTokens({\n    obj: [], root: null, token: tokens, returnValuesOnly, expandTypography, expandShadow, expandComposition, expandBorder,\n  });\n  return Object.values(result);\n}\n","import { mergeTokenGroups, resolveTokenValues } from '@/plugin/tokenHelpers';\nimport { TransformerOptions } from './types';\nimport convertTokensToGroupedObject from './convertTokensToGroupedObject';\nimport parseTokenValues from './parseTokenValues';\nimport { SetTokenDataPayload } from '@/types/payloads';\nimport { TokenSetStatus } from '@/constants/TokenSetStatus';\n\n// Takes Figma Tokens input, resolves all aliases while respecting user's theme choice and outputs an object with resolved tokens, ready to be consumed by style dictionary.\nexport default function convertTokensObjectToResolved(\n  tokens: SetTokenDataPayload['values'],\n  usedSets: string[] = [],\n  excludedSets: string[] = [],\n  options: TransformerOptions = {\n    expandTypography: false,\n    expandShadow: false,\n    expandComposition: false,\n    expandBorder: false,\n    preserveRawValue: false,\n    resolveReferences: true,\n  },\n) {\n  // Parse tokens into array structure\n  const parsed = parseTokenValues(tokens);\n  // Merge to one giant array\n  const merged = mergeTokenGroups(\n    parsed,\n    // @README this function is only used in the utils/transform file\n    // which in turn is only used for a local script -- in which case for now we do not\n    // need to fully support the SOURCE state\n    Object.fromEntries(usedSets.map((tokenSet) => ([tokenSet, TokenSetStatus.ENABLED]))),\n  );\n  // Resolve aliases\n  const resolved = resolveTokenValues(merged);\n  // Group back into one object\n  const object = convertTokensToGroupedObject(resolved, excludedSets, options);\n  return object;\n}\n","import set from 'set-value';\nimport { appendTypeToToken } from '@/app/components/createTokenObj';\nimport { TransformerOptions } from './types';\nimport { expand } from '@/utils/expand';\nimport { getValueWithReferences } from '@/utils/getValueWithReferences';\nimport { ResolveTokenValuesResult } from '@/plugin/tokenHelpers';\nimport { SingleToken } from '@/types/tokens';\nimport { TokenTypes } from '@/constants/TokenTypes';\n\n// @TODO fix tokenObj\nexport default function convertTokensToGroupedObject(\n  tokens: ResolveTokenValuesResult[],\n  excludedSets: string[],\n  options: TransformerOptions,\n) {\n  let tokenObj = {};\n  tokenObj = tokens.reduce((acc, token) => {\n    if (options.throwErrorWhenNotResolved && token.failedToResolve) {\n      throw new Error(`ERROR: failed to resolve token \"${token.name}\"`);\n    }\n    if (token.internal__Parent && excludedSets.includes(token.internal__Parent)) {\n      return acc;\n    }\n    const obj = acc || {};\n    const tokenWithType = appendTypeToToken(token) as SingleToken<false>;\n    delete tokenWithType.name;\n    if (options.resolveReferences !== true) {\n      tokenWithType.value = getValueWithReferences(tokenWithType as SingleToken, options);\n    } else {\n      delete tokenWithType.$extensions;\n    }\n\n    if (!options.preserveRawValue) {\n      delete tokenWithType.rawValue;\n    }\n    delete tokenWithType.internal__Parent;\n    if (\n      (!!options.expandTypography && tokenWithType.type === TokenTypes.TYPOGRAPHY)\n      || (!!options.expandShadow && tokenWithType.type === TokenTypes.BOX_SHADOW)\n      || (!!options.expandComposition && tokenWithType.type === TokenTypes.COMPOSITION)\n      || (!!options.expandBorder && tokenWithType.type === TokenTypes.BORDER)\n    ) {\n      const expanded = expand(tokenWithType.value);\n      set(obj, token.name, { ...expanded });\n    } else {\n      set(obj, token.name, tokenWithType);\n    }\n    return acc;\n  }, {});\n\n  return tokenObj;\n}\n","import { SingleToken } from '@/types/tokens';\nimport { convertToDefaultProperty } from './convertToDefaultProperty';\n\ninterface Result {\n  [K: string]: {\n    type: string;\n    value: string | number\n  } | Result\n}\n\nexport function expand(token: SingleToken['value']) {\n  return Object.entries(token).reduce<Result>((acc, [key, val]) => {\n    if (typeof val === 'string' || typeof val === 'number') {\n      acc[key] = {\n        value: val,\n        type: convertToDefaultProperty(key),\n      };\n    } else {\n      acc[key] = expand(val);\n    }\n\n    return acc;\n  }, {});\n}\n","import { AliasDollarRegex, AliasRegex } from '@/constants/AliasRegex';\n\nconst OPENING_BRACE = '{';\nconst CLOSING_BRACE = '}';\n\nexport const findReferences = (tokenValue: string) => {\n  const matches = tokenValue?.toString().match(AliasRegex);\n  if (matches) {\n    return matches.map((item) => {\n      if (item.startsWith('{')) {\n        return item.slice(1, item.length - 1);\n      }\n      return item.substring(1);\n    });\n  }\n  return null;\n};\n\nexport const findDollarReferences = (tokenValue: string) => tokenValue?.toString().match(AliasDollarRegex);\n\nexport const findMatchingReferences = (tokenValue: string, valueToLookFor: string) => {\n  const references = findReferences(tokenValue);\n\n  if (references) {\n    return references.filter((ref) => {\n      if (ref === valueToLookFor) return ref;\n      return false;\n    });\n  }\n  return [];\n};\n\nexport const replaceReferences = (tokenValue: string, oldName: string, newName: string) => {\n  try {\n    if (tokenValue.includes(oldName)) {\n      const references = findMatchingReferences(tokenValue, oldName);\n      let newValue = tokenValue;\n      references.forEach((reference) => {\n        newValue = newValue.replace(reference, newName);\n      });\n      return newValue;\n    }\n  } catch (e) {\n    console.log('Error replacing reference', tokenValue, oldName, newName, e);\n  }\n\n  return tokenValue;\n};\n\nexport const getRootReferences = (tokenValue: string) => {\n  const array = [];\n  let depth = 0;\n  let startIndex = 0;\n  for (let i = 0; i < tokenValue.length; i += 1) {\n    if (tokenValue[i] === OPENING_BRACE) {\n      if (depth === 0) {\n        startIndex = i;\n      }\n      depth += 1;\n    }\n    if (tokenValue[i] === CLOSING_BRACE && depth > 0) {\n      depth -= 1;\n      if (depth === 0) {\n        array.push(tokenValue.substring(startIndex, i + 1));\n      }\n    }\n  }\n\n  return array.concat(findDollarReferences(tokenValue) || []);\n};\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleToken } from '@/types/tokens';\nimport { TokenBoxshadowValue, TokenTypographyValue } from '@/types/values';\nimport { TransformerOptions } from './types';\n\nfunction getSimpleValue(resolvedValue: SingleToken['value'], rawValue: SingleToken['value'], options: TransformerOptions) {\n  let value = resolvedValue;\n  /*\n   * ***************************************************************************\n   * TOKEN EXAMPLES WHEN USING --resolveReferences='math'\n   * ***************************************************************************\n   * {spacing.xs} * 2                 =>  MATH EXPRESSION       => RESOLVE\n   * {spacing.xs} * {spacing.scale}   =>  MATH EXPRESSION       => RESOLVE\n   *\n   * {spacing.xs}                     =>  SINGLE TOKEN          => DON'T RESOLVE\n   * {spacing.xs}rem                  =>  SINGLE TOKEN + UNIT   => DON'T RESOLVE\n   * {spacing.xs}{spacing.unit}       =>  MULTIPLE TOKENS       => DON'T RESOLVE\n   *\n   * rgba(255, 0, 0, {opacity.low})   =>  CSS FUNCTION          => DON'T RESOLVE\n   * calc({spacing.xl} * 2)           =>  CSS FUNCTION          => DON'T RESOLVE\n   * 20% {border-radius.smooth}       =>  CSS LIST VALUE        => DON'T RESOLVE\n   * ***************************************************************************\n   */\n\n  if (typeof rawValue === 'string' && resolvedValue.toString() !== rawValue) {\n    if (options.resolveReferences === false) {\n      value = rawValue;\n    }\n    if (options.resolveReferences === 'math') {\n      const singleAliasRegEx = /^{[^}]*}$|^\\$[^$]*$/;\n      const oneOrMoreAliasRegEx = /{[^}]*}|\\$[\\w.-]*/g;\n      const aliasRegEx = typeof resolvedValue === 'number' ? singleAliasRegEx : oneOrMoreAliasRegEx;\n      if (aliasRegEx.test(rawValue)) {\n        value = rawValue;\n      }\n    }\n  }\n  return value as string; // TODO: remove `as string` when SingleGenericToken supports value as `string|number`\n}\n\nfunction getComplexValue<T extends SingleToken['value']>(\n  resolvedValue: T,\n  rawValue: T,\n  options: TransformerOptions,\n) {\n  type IndexedValueType = Record<string, string | number>;\n  return Object.entries(resolvedValue).reduce((acc, [key, val]) => {\n    const rawVal = (rawValue as IndexedValueType)[key];\n    // TODO: Remove as SingleToken[\"value\"]\n    acc[key] = getSimpleValue(val as SingleToken['value'], rawVal as SingleToken['value'], options);\n    return acc;\n  }, {} as IndexedValueType) as T;\n}\n\nexport function getValueWithReferences(token: SingleToken, options: TransformerOptions) {\n  if (token.rawValue === undefined) {\n    return token.value;\n  }\n\n  if (token.type === TokenTypes.TYPOGRAPHY || token.type === TokenTypes.BOX_SHADOW || token.type === TokenTypes.COMPOSITION || token.type === TokenTypes.BORDER) {\n    if (Array.isArray(token.value)) {\n      const rawValue = token.rawValue as TokenBoxshadowValue[];\n      return token.value.map((shadow, index) => getComplexValue(shadow, rawValue[index], options));\n    }\n    return getComplexValue(token.value, token.rawValue as TokenTypographyValue | TokenBoxshadowValue, options);\n  }\n\n  return getSimpleValue(token.value, token.rawValue, options);\n}\n","export * from './isSingleTokenValueObject';\nexport * from './isSingleTypographyToken';\nexport * from './isSingleCompositionToken';\nexport * from './isSingleToken';\nexport * from './isPropertyType';\nexport * from './isSingleBoxShadowToken';\nexport * from './isTokenType';\nexport * from './isGitProvider';\nexport * from './isPrimitiveValue';\nexport * from './isSingleBoxShadowValue';\nexport * from './isSingleTypographyValue';\nexport * from './isMatchingStyle';\nexport * from './isSingleBorderToken';\n","import { StorageProviderType } from '@/constants/StorageProviderType';\nimport { StorageType, StorageTypeCredentials, StorageTypeFormValues } from '@/types/StorageType';\n\nexport function isGitProvider<\n  T extends StorageType | StorageTypeCredentials | StorageTypeFormValues<false> | StorageTypeFormValues<true>,\n>(\n  provider: T,\n): provider is\n  | Extract<T, { provider: StorageProviderType.ADO }>\n  | Extract<T, { provider: StorageProviderType.GITHUB | StorageProviderType.GITLAB }>\n  | Extract<T, { provider: StorageProviderType.BITBUCKET }> {\n  return (\n    provider.provider === StorageProviderType.ADO\n    || provider.provider === StorageProviderType.GITHUB\n    || provider.provider === StorageProviderType.GITLAB\n    || provider.provider === StorageProviderType.BITBUCKET\n  );\n}\n","export function isMatchingStyle(\n  tokenPath: string,\n  style: EffectStyle | PaintStyle | TextStyle,\n) {\n  const splitName = style.name.split('/').map((name) => name.trim());\n  const trimmedName = splitName.join('/');\n\n  return trimmedName === tokenPath;\n}\n","export function isPrimitiveValue<V>(value: V): value is Extract<V, boolean | number | string> {\n  return (\n    typeof value === 'string'\n    || typeof value === 'boolean'\n    || typeof value === 'number'\n  );\n}\n","import { Properties } from '@/constants/Properties';\n\nexport function isPropertyType(input: string | Properties): input is Properties {\n  return Object.values<string>(Properties).includes(input);\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleBorderToken, SingleToken } from '@/types/tokens';\n\nexport function isSingleBorderToken(token: SingleToken | any): token is SingleBorderToken {\n  if (typeof token !== 'object') return false;\n  return token.type === TokenTypes.BORDER\n  && (typeof token.value === 'string' || (typeof token.value === 'object' && !('value' in token.value)));\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleToken, SingleBoxShadowToken } from '@/types/tokens';\n\nexport function isSingleBoxShadowToken(token: SingleToken | any): token is SingleBoxShadowToken {\n  if (typeof token !== 'object') return false;\n  return token.type === TokenTypes.BOX_SHADOW\n    && (typeof token.value === 'string' || Array.isArray(token.value) || (typeof token.value === 'object' && !('value' in token.value)));\n}\n","import { BoxShadowTypes } from '@/constants/BoxShadowTypes';\nimport type { MapValuesToTokensResult } from '@/types';\nimport type { SingleBoxShadowToken } from '@/types/tokens';\nimport type { TokenBoxshadowValue } from '@/types/values';\n\nexport function isSingleBoxShadowValue(value: MapValuesToTokensResult[string]): value is SingleBoxShadowToken['value'] {\n  return Boolean(\n    value\n    && (\n      typeof value === 'string'\n      || ((Array.isArray(value) ? value : [value]) as (\n        (TokenBoxshadowValue | Extract<MapValuesToTokensResult[string], { property: string }[]>[number])[]\n      )).every((v) => (\n        v && typeof v === 'object'\n        && ('type' in v && 'color' in v)\n        && (\n          v.type === BoxShadowTypes.DROP_SHADOW\n          || v.type === BoxShadowTypes.INNER_SHADOW\n        )\n      ))\n    ),\n  );\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleToken, SingleCompositionToken } from '@/types/tokens';\n\nexport function isSingleCompositionToken(token: SingleToken | any): token is SingleCompositionToken {\n  if (typeof token !== 'object') return false;\n  return token.type === TokenTypes.COMPOSITION && typeof token.value === 'object' && !('value' in token.value);\n}\n","import { SingleToken } from '@/types/tokens';\n\nexport function isSingleToken(token: SingleToken | any): token is SingleToken {\n  return !!(\n    token\n    && typeof token === 'object'\n    && 'value' in token\n    && 'name' in token\n  );\n}\n","import { SingleToken } from '@/types/tokens';\n\ntype SingleTokenValueObject = Pick<SingleToken, 'value'>;\n\nexport function isSingleTokenValueObject(token: SingleTokenValueObject | any): token is SingleTokenValueObject {\n  return !!(\n    token\n    && typeof token === 'object'\n    && 'value' in token\n    && (\n      typeof token.value !== 'undefined'\n      && token.value !== null\n      && !(typeof token?.value === 'object' && (token && 'value' in token.value))\n    )\n  );\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleToken, SingleTypographyToken } from '@/types/tokens';\n\nexport function isSingleTypographyToken(token: SingleToken | any): token is SingleTypographyToken {\n  if (typeof token !== 'object') return false;\n  return token.type === TokenTypes.TYPOGRAPHY\n  && (typeof token.value === 'string' || (typeof token.value === 'object' && !('value' in token.value)));\n}\n","import type { MapValuesToTokensResult } from '@/types';\nimport type { SingleTypographyToken } from '@/types/tokens';\nimport type { TokenTypographyValue } from '@/types/values';\n\nexport function isSingleTypographyValue(value: MapValuesToTokensResult[string]): value is SingleTypographyToken['value'] {\n  return Boolean(\n    value\n    && (\n      typeof value === 'string'\n      || ((Array.isArray(value) ? value : [value]) as (\n        (TokenTypographyValue | Extract<MapValuesToTokensResult[string], { property: string }[]>[number])[]\n      )).every((v) => (\n        v && typeof v === 'object'\n        && (\n          'fontFamily' in v\n          || 'fontWeight' in v\n          || 'fontSize' in v\n          || 'lineHeight' in v\n          || 'letterSpacing' in v\n          || 'paragraphSpacing' in v\n          || 'paragraphIndent' in v\n          || 'textCase' in v\n          || 'textDecoration' in v\n        )\n      ))\n    ),\n  );\n}\n","import { SingleToken } from '@/types/tokens';\n\ntype SingleTokenValueObject = Pick<SingleToken, 'value'>;\ntype TokenGroupWithType = Pick<SingleToken, 'value'> & { type: string };\n\nexport function isTokenGroupWithType(token: SingleTokenValueObject | any): token is TokenGroupWithType {\n  return !!(\n    token\n    && typeof token === 'object'\n    && (!('value' in token) || ('value' in token && typeof token.value === 'object' && 'value' in token.value))\n    && 'type' in token\n    && (\n      typeof token.type === 'string'\n    )\n  );\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\n\nexport function isTokenType(input: string | TokenTypes): input is TokenTypes {\n  return Object.values<string>(TokenTypes).includes(input);\n}\n","import { Parser } from 'expr-eval';\nimport calcAstParser from 'postcss-calc-ast-parser';\nimport { Root } from 'postcss-calc-ast-parser/dist/types/ast';\n\nconst parser = new Parser();\n\n/**\n * Clamps the value of x between min and max\n * @param x\n * @param min\n * @param max\n * @returns\n */\nparser.functions.clamped = (x: number, min: number, max: number): number => Math.max(Math.min(x, max), min);\n\n/**\n * One dimensional linear interpolation\n * @param x Normalized value between 0 and 1\n * @param min\n * @param max\n * @returns\n */\nparser.functions.lerp = (x: number, start: number, end: number): number => start + (end - start) * x;\n\n/**\n * Returns a normalized value between 0 - 1.\n * @param x\n * @param start\n * @param end\n * @returns\n */\nparser.functions.norm = (x: number, start: number, end: number): number => (x - start) / (end - start);\n\n/**\n * Creates a one dimensional cubicBezier\n * @remarks We have to do a significant overhaul to the system to support multidimensional functions. Seems like expr-eval can support neither array or property accessors\n * @param x1\n * @param x2\n * @returns\n */\nparser.functions.cubicBezier1D = (x1: number, x2: number) => {\n  const xx = [0, x1, x2, 1];\n\n  return (t: number) => {\n    const coeffs = [(1 - t) ** 3, 3 * (1 - t) ** 2 * t, 3 * (1 - t) * t ** 2, t ** 3];\n    const x = coeffs.reduce((acc, c, i) => acc + c * xx[i], 0);\n    return x;\n  };\n};\n\n// eslint-disable-next-line\nparser.functions.sample = (func: Function, ...args: any[]) => {\n  return func(...args);\n};\n\nexport function checkAndEvaluateMath(expr: string) {\n  let calcParsed: Root;\n\n  try {\n    calcParsed = calcAstParser.parse(expr);\n  } catch (ex) {\n    return expr;\n  }\n\n  const calcReduced = calcAstParser.reduceExpression(calcParsed);\n\n  let unitlessExpr = expr;\n  let unit;\n\n  if (calcReduced && calcReduced.type !== 'Number') {\n    unitlessExpr = expr.replace(new RegExp(calcReduced.unit, 'ig'), '');\n    unit = calcReduced.unit;\n  }\n\n  let evaluated: number;\n\n  try {\n    evaluated = parser.evaluate(`${unitlessExpr}`);\n  } catch (ex) {\n    return expr;\n  }\n  try {\n    return unit ? `${evaluated}${unit}` : Number.parseFloat(evaluated.toFixed(3));\n  } catch (ex) {\n    return expr;\n  }\n}\n","export * from './checkAndEvaluateMath';\n","import Color from 'colorjs.io';\nimport { ColorModifierTypes } from '@/constants/ColorModifierTypes';\nimport { ColorModifier } from '@/types/Modifier';\nimport { transparentize } from './color/transparentize';\nimport { mix } from './color/mix';\nimport { darken } from './color/darken';\nimport { lighten } from './color/lighten';\n\nexport function modifyColor(baseColor: string, modifier: ColorModifier) {\n  const color = new Color(baseColor);\n  let returnedColor = color;\n  try {\n    switch (modifier.type) {\n      case ColorModifierTypes.LIGHTEN:\n        returnedColor = lighten(color, modifier.space, Number(modifier.value));\n        break;\n      case ColorModifierTypes.DARKEN:\n        returnedColor = darken(color, modifier.space, Number(modifier.value));\n        break;\n      case ColorModifierTypes.MIX:\n        returnedColor = mix(color, modifier.space, Number(modifier.value), new Color(modifier.color));\n        break;\n      case ColorModifierTypes.ALPHA: {\n        returnedColor = transparentize(color, Number(modifier.value));\n        break;\n      }\n      default:\n        returnedColor = color;\n        break;\n    }\n    returnedColor = returnedColor.to(modifier.space);\n    return returnedColor.toString({ inGamut: true, precision: 3 });\n  } catch (e) {\n    return baseColor;\n  }\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SetTokenDataPayload } from '@/types/payloads';\nimport { AnyTokenList, SingleToken, TokenStore } from '@/types/tokens';\nimport convertToTokenArray from './convertTokens';\n\nexport default function parseTokenValues(tokens: SetTokenDataPayload['values']): TokenStore['values'] {\n  // If we receive an array of tokens, move them all to the global set\n  if (Array.isArray(tokens)) {\n    return {\n      global: tokens,\n    };\n  }\n\n  // For a regular token-schema go through each and convert their values to a token array\n  // reducing them down to a entries list which can be picked up using Object.fromEntries\n  type TokenEntry = [string, AnyTokenList | Record<string, Partial<Record<TokenTypes, Record<string, SingleToken<false>>>>>];\n  const reducedTokens = Object.entries(tokens).reduce<[string, AnyTokenList][]>((prev, group: TokenEntry) => {\n    const parsedGroup = group[1];\n\n    if (Array.isArray(parsedGroup)) {\n      prev.push([group[0], parsedGroup]);\n      return prev;\n    }\n\n    if (typeof parsedGroup === 'object') {\n      const convertedToArray = convertToTokenArray({ tokens: parsedGroup });\n      prev.push([group[0], convertedToArray]);\n      return prev;\n    }\n\n    return prev;\n  }, []);\n\n  return Object.fromEntries(reducedTokens);\n}\n","import { SetTokenDataPayload } from '@/types/payloads';\nimport convertTokensObjectToResolved from './convertTokensObjectToResolved';\nimport { TransformerOptions } from './types';\n\ntype Input = SetTokenDataPayload['values'];\n\nfunction transform(input: Input, sets: string[], excludes: string[], options: TransformerOptions) {\n  return convertTokensObjectToResolved(input, sets, excludes, options);\n}\n\nexport default transform;\n","/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low, high, value) {\n  return Math.min(Math.max(low, value), high);\n}\n\nclass ColorError extends Error {\n  constructor(color) {\n    super(`Failed to parse color: \"${color}\"`);\n  }\n}\nvar ColorError$1 = ColorError;\n\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\nfunction parseToRgba(color) {\n  if (typeof color !== 'string') throw new ColorError$1(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n  let normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n  const reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n  if (reducedHexMatch) {\n    const arr = Array.from(reducedHexMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(r(x, 2), 16)), parseInt(r(arr[3] || 'f', 2), 16) / 255];\n  }\n  const hexMatch = hexRegex.exec(normalizedColor);\n  if (hexMatch) {\n    const arr = Array.from(hexMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(x, 16)), parseInt(arr[3] || 'ff', 16) / 255];\n  }\n  const rgbaMatch = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatch) {\n    const arr = Array.from(rgbaMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(x, 10)), parseFloat(arr[3] || '1')];\n  }\n  const hslaMatch = hslaRegex.exec(normalizedColor);\n  if (hslaMatch) {\n    const [h, s, l, a] = Array.from(hslaMatch).slice(1).map(parseFloat);\n    if (guard(0, 100, s) !== s) throw new ColorError$1(color);\n    if (guard(0, 100, l) !== l) throw new ColorError$1(color);\n    return [...hslToRgb(h, s, l), Number.isNaN(a) ? 1 : a];\n  }\n  throw new ColorError$1(color);\n}\nfunction hash(str) {\n  let hash = 5381;\n  let i = str.length;\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return (hash >>> 0) % 2341;\n}\nconst colorToInt = x => parseInt(x.replace(/_/g, ''), 36);\nconst compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'.split(' ').reduce((acc, next) => {\n  const key = colorToInt(next.substring(0, 3));\n  const hex = colorToInt(next.substring(3)).toString(16);\n\n  // NOTE: padStart could be used here but it breaks Node 6 compat\n  // https://github.com/ricokahler/color2k/issues/351\n  let prefix = '';\n  for (let i = 0; i < 6 - hex.length; i++) {\n    prefix += '0';\n  }\n  acc[key] = `${prefix}${hex}`;\n  return acc;\n}, {});\n\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\nfunction nameToHex(color) {\n  const normalizedColorName = color.toLowerCase().trim();\n  const result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError$1(color);\n  return `#${result}`;\n}\nconst r = (str, amount) => Array.from(Array(amount)).map(() => str).join('');\nconst reducedHexRegex = new RegExp(`^#${r('([a-f0-9])', 3)}([a-f0-9])?$`, 'i');\nconst hexRegex = new RegExp(`^#${r('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i');\nconst rgbaRegex = new RegExp(`^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*${r(',\\\\s*(\\\\d+)\\\\s*', 2)}(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$`, 'i');\nconst hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nconst namedColorRegex = /^[a-z]+$/i;\nconst roundColor = color => {\n  return Math.round(color * 255);\n};\nconst hslToRgb = (hue, saturation, lightness) => {\n  let l = lightness / 100;\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor);\n  }\n\n  // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n  const huePrime = (hue % 360 + 360) % 360 / 60;\n  const chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  const secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n  const lightnessModification = l - chroma / 2;\n  const finalRed = red + lightnessModification;\n  const finalGreen = green + lightnessModification;\n  const finalBlue = blue + lightnessModification;\n  return [finalRed, finalGreen, finalBlue].map(roundColor);\n};\n\n// taken from:\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\nfunction parseToHsla(color) {\n  const [red, green, blue, alpha] = parseToRgba(color).map((value, index) =>\n  // 3rd index is alpha channel which is already normalized\n  index === 3 ? value : value / 255);\n  const max = Math.max(red, green, blue);\n  const min = Math.min(red, green, blue);\n  const lightness = (max + min) / 2;\n\n  // achromatic\n  if (max === min) return [0, 0, lightness, alpha];\n  const delta = max - min;\n  const saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n  const hue = 60 * (red === max ? (green - blue) / delta + (green < blue ? 6 : 0) : green === max ? (blue - red) / delta + 2 : (red - green) / delta + 4);\n  return [hue, saturation, lightness, alpha];\n}\n\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction hsla(hue, saturation, lightness, alpha) {\n  return `hsla(${(hue % 360).toFixed()}, ${guard(0, 100, saturation * 100).toFixed()}%, ${guard(0, 100, lightness * 100).toFixed()}%, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;\n}\n\n/**\n * Adjusts the current hue of the color by the given degrees. Wraps around when\n * over 360.\n *\n * @param color input color\n * @param degrees degrees to adjust the input color, accepts degree integers\n * (0 - 360) and wraps around on overflow\n */\nfunction adjustHue(color, degrees) {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h + degrees, s, l, a);\n}\n\n/**\n * Darkens using lightness. This is equivalent to subtracting the lightness\n * from the L in HSL.\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction darken(color, amount) {\n  const [hue, saturation, lightness, alpha] = parseToHsla(color);\n  return hsla(hue, saturation, lightness - amount, alpha);\n}\n\n/**\n * Desaturates the input color by the given amount via subtracting from the `s`\n * in `hsla`.\n *\n * @param amount The amount to desaturate, given as a decimal between 0 and 1\n */\nfunction desaturate(color, amount) {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h, s - amount, l, a);\n}\n\n// taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getLuminance.js\n\n/**\n * Returns a number (float) representing the luminance of a color.\n */\nfunction getLuminance(color) {\n  if (color === 'transparent') return 0;\n  function f(x) {\n    const channel = x / 255;\n    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }\n  const [r, g, b] = parseToRgba(color);\n  return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n}\n\n// taken from:\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n */\nfunction getContrast(color1, color2) {\n  const luminance1 = getLuminance(color1);\n  const luminance2 = getLuminance(color2);\n  return luminance1 > luminance2 ? (luminance1 + 0.05) / (luminance2 + 0.05) : (luminance2 + 0.05) / (luminance1 + 0.05);\n}\n\n/**\n * Takes in rgba parts and returns an rgba string\n *\n * @param red The amount of red in the red channel, given in a number between 0 and 255 inclusive\n * @param green The amount of green in the red channel, given in a number between 0 and 255 inclusive\n * @param blue The amount of blue in the red channel, given in a number between 0 and 255 inclusive\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction rgba(red, green, blue, alpha) {\n  return `rgba(${guard(0, 255, red).toFixed()}, ${guard(0, 255, green).toFixed()}, ${guard(0, 255, blue).toFixed()}, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;\n}\n\n/**\n * Mixes two colors together. Taken from sass's implementation.\n */\nfunction mix(color1, color2, weight) {\n  const normalize = (n, index) =>\n  // 3rd index is alpha channel which is already normalized\n  index === 3 ? n : n / 255;\n  const [r1, g1, b1, a1] = parseToRgba(color1).map(normalize);\n  const [r2, g2, b2, a2] = parseToRgba(color2).map(normalize);\n\n  // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n  const alphaDelta = a2 - a1;\n  const normalizedWeight = weight * 2 - 1;\n  const combinedWeight = normalizedWeight * alphaDelta === -1 ? normalizedWeight : normalizedWeight + alphaDelta / (1 + normalizedWeight * alphaDelta);\n  const weight2 = (combinedWeight + 1) / 2;\n  const weight1 = 1 - weight2;\n  const r = (r1 * weight1 + r2 * weight2) * 255;\n  const g = (g1 * weight1 + g2 * weight2) * 255;\n  const b = (b1 * weight1 + b2 * weight2) * 255;\n  const a = a2 * weight + a1 * (1 - weight);\n  return rgba(r, g, b, a);\n}\n\n/**\n * Given a series colors, this function will return a `scale(x)` function that\n * accepts a percentage as a decimal between 0 and 1 and returns the color at\n * that percentage in the scale.\n *\n * ```js\n * const scale = getScale('red', 'yellow', 'green');\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(0.5)); // rgba(255, 255, 0, 1)\n * console.log(scale(1)); // rgba(0, 128, 0, 1)\n * ```\n *\n * If you'd like to limit the domain and range like chroma-js, we recommend\n * wrapping scale again.\n *\n * ```js\n * const _scale = getScale('red', 'yellow', 'green');\n * const scale = x => _scale(x / 100);\n *\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(50)); // rgba(255, 255, 0, 1)\n * console.log(scale(100)); // rgba(0, 128, 0, 1)\n * ```\n */\nfunction getScale(...colors) {\n  return n => {\n    const lastIndex = colors.length - 1;\n    const lowIndex = guard(0, lastIndex, Math.floor(n * lastIndex));\n    const highIndex = guard(0, lastIndex, Math.ceil(n * lastIndex));\n    const color1 = colors[lowIndex];\n    const color2 = colors[highIndex];\n    const unit = 1 / lastIndex;\n    const weight = (n - unit * lowIndex) / unit;\n    return mix(color1, color2, weight);\n  };\n}\n\nconst guidelines = {\n  decorative: 1.5,\n  readable: 3,\n  aa: 4.5,\n  aaa: 7\n};\n\n/**\n * Returns whether or not a color has bad contrast against a background\n * according to a given standard.\n */\nfunction hasBadContrast(color, standard = 'aa', background = '#fff') {\n  return getContrast(color, background) < guidelines[standard];\n}\n\n/**\n * Lightens a color by a given amount. This is equivalent to\n * `darken(color, -amount)`\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction lighten(color, amount) {\n  return darken(color, -amount);\n}\n\n/**\n * Takes in a color and makes it more transparent by convert to `rgba` and\n * decreasing the amount in the alpha channel.\n *\n * @param amount The amount to increase the transparency by, given as a decimal between 0 and 1\n */\nfunction transparentize(color, amount) {\n  const [r, g, b, a] = parseToRgba(color);\n  return rgba(r, g, b, a - amount);\n}\n\n/**\n * Takes a color and un-transparentizes it. Equivalent to\n * `transparentize(color, -amount)`\n *\n * @param amount The amount to increase the opacity by, given as a decimal between 0 and 1\n */\nfunction opacify(color, amount) {\n  return transparentize(color, -amount);\n}\n\n/**\n * An alternative function to `readableColor`. Returns whether or not the \n * readable color (i.e. the color to be place on top the input color) should be\n * black.\n */\nfunction readableColorIsBlack(color) {\n  return getLuminance(color) > 0.179;\n}\n\n/**\n * Returns black or white for best contrast depending on the luminosity of the\n * given color.\n */\nfunction readableColor(color) {\n  return readableColorIsBlack(color) ? '#000' : '#fff';\n}\n\n/**\n * Saturates a color by converting it to `hsl` and increasing the saturation\n * amount. Equivalent to `desaturate(color, -amount)`\n * \n * @param color Input color\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction saturate(color, amount) {\n  return desaturate(color, -amount);\n}\n\n/**\n * Takes in any color and returns it as a hex code.\n */\nfunction toHex(color) {\n  const [r, g, b, a] = parseToRgba(color);\n  let hex = x => {\n    const h = guard(0, 255, x).toString(16);\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    return h.length === 1 ? `0${h}` : h;\n  };\n  return `#${hex(r)}${hex(g)}${hex(b)}${a < 1 ? hex(Math.round(a * 255)) : ''}`;\n}\n\n/**\n * Takes in any color and returns it as an rgba string.\n */\nfunction toRgba(color) {\n  return rgba(...parseToRgba(color));\n}\n\n/**\n * Takes in any color and returns it as an hsla string.\n */\nfunction toHsla(color) {\n  return hsla(...parseToHsla(color));\n}\n\nexport { ColorError$1 as ColorError, adjustHue, darken, desaturate, getContrast, getLuminance, getScale, guard, hasBadContrast, hsla, lighten, mix, opacify, parseToHsla, parseToRgba, readableColor, readableColorIsBlack, rgba, saturate, toHex, toHsla, toRgba, transparentize };\n//# sourceMappingURL=index.exports.import.es.mjs.map\n","var INUMBER = 'INUMBER';\nvar IOP1 = 'IOP1';\nvar IOP2 = 'IOP2';\nvar IOP3 = 'IOP3';\nvar IVAR = 'IVAR';\nvar IVARNAME = 'IVARNAME';\nvar IFUNCALL = 'IFUNCALL';\nvar IFUNDEF = 'IFUNDEF';\nvar IEXPR = 'IEXPR';\nvar IEXPREVAL = 'IEXPREVAL';\nvar IMEMBER = 'IMEMBER';\nvar IENDSTATEMENT = 'IENDSTATEMENT';\nvar IARRAY = 'IARRAY';\n\nfunction Instruction(type, value) {\n  this.type = type;\n  this.value = (value !== undefined && value !== null) ? value : 0;\n}\n\nInstruction.prototype.toString = function () {\n  switch (this.type) {\n    case INUMBER:\n    case IOP1:\n    case IOP2:\n    case IOP3:\n    case IVAR:\n    case IVARNAME:\n    case IENDSTATEMENT:\n      return this.value;\n    case IFUNCALL:\n      return 'CALL ' + this.value;\n    case IFUNDEF:\n      return 'DEF ' + this.value;\n    case IARRAY:\n      return 'ARRAY ' + this.value;\n    case IMEMBER:\n      return '.' + this.value;\n    default:\n      return 'Invalid Instruction';\n  }\n};\n\nfunction unaryInstruction(value) {\n  return new Instruction(IOP1, value);\n}\n\nfunction binaryInstruction(value) {\n  return new Instruction(IOP2, value);\n}\n\nfunction ternaryInstruction(value) {\n  return new Instruction(IOP3, value);\n}\n\nfunction simplify(tokens, unaryOps, binaryOps, ternaryOps, values) {\n  var nstack = [];\n  var newexpression = [];\n  var n1, n2, n3;\n  var f;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER || type === IVARNAME) {\n      if (Array.isArray(item.value)) {\n        nstack.push.apply(nstack, simplify(item.value.map(function (x) {\n          return new Instruction(INUMBER, x);\n        }).concat(new Instruction(IARRAY, item.value.length)), unaryOps, binaryOps, ternaryOps, values));\n      } else {\n        nstack.push(item);\n      }\n    } else if (type === IVAR && values.hasOwnProperty(item.value)) {\n      item = new Instruction(INUMBER, values[item.value]);\n      nstack.push(item);\n    } else if (type === IOP2 && nstack.length > 1) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = binaryOps[item.value];\n      item = new Instruction(INUMBER, f(n1.value, n2.value));\n      nstack.push(item);\n    } else if (type === IOP3 && nstack.length > 2) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === '?') {\n        nstack.push(n1.value ? n2.value : n3.value);\n      } else {\n        f = ternaryOps[item.value];\n        item = new Instruction(INUMBER, f(n1.value, n2.value, n3.value));\n        nstack.push(item);\n      }\n    } else if (type === IOP1 && nstack.length > 0) {\n      n1 = nstack.pop();\n      f = unaryOps[item.value];\n      item = new Instruction(INUMBER, f(n1.value));\n      nstack.push(item);\n    } else if (type === IEXPR) {\n      while (nstack.length > 0) {\n        newexpression.push(nstack.shift());\n      }\n      newexpression.push(new Instruction(IEXPR, simplify(item.value, unaryOps, binaryOps, ternaryOps, values)));\n    } else if (type === IMEMBER && nstack.length > 0) {\n      n1 = nstack.pop();\n      nstack.push(new Instruction(INUMBER, n1.value[item.value]));\n    } /* else if (type === IARRAY && nstack.length >= item.value) {\n      var length = item.value;\n      while (length-- > 0) {\n        newexpression.push(nstack.pop());\n      }\n      newexpression.push(new Instruction(IARRAY, item.value));\n    } */ else {\n      while (nstack.length > 0) {\n        newexpression.push(nstack.shift());\n      }\n      newexpression.push(item);\n    }\n  }\n  while (nstack.length > 0) {\n    newexpression.push(nstack.shift());\n  }\n  return newexpression;\n}\n\nfunction substitute(tokens, variable, expr) {\n  var newexpression = [];\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === IVAR && item.value === variable) {\n      for (var j = 0; j < expr.tokens.length; j++) {\n        var expritem = expr.tokens[j];\n        var replitem;\n        if (expritem.type === IOP1) {\n          replitem = unaryInstruction(expritem.value);\n        } else if (expritem.type === IOP2) {\n          replitem = binaryInstruction(expritem.value);\n        } else if (expritem.type === IOP3) {\n          replitem = ternaryInstruction(expritem.value);\n        } else {\n          replitem = new Instruction(expritem.type, expritem.value);\n        }\n        newexpression.push(replitem);\n      }\n    } else if (type === IEXPR) {\n      newexpression.push(new Instruction(IEXPR, substitute(item.value, variable, expr)));\n    } else {\n      newexpression.push(item);\n    }\n  }\n  return newexpression;\n}\n\nfunction evaluate(tokens, expr, values) {\n  var nstack = [];\n  var n1, n2, n3;\n  var f, args, argCount;\n\n  if (isExpressionEvaluator(tokens)) {\n    return resolveExpression(tokens, values);\n  }\n\n  var numTokens = tokens.length;\n\n  for (var i = 0; i < numTokens; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER || type === IVARNAME) {\n      nstack.push(item.value);\n    } else if (type === IOP2) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === 'and') {\n        nstack.push(n1 ? !!evaluate(n2, expr, values) : false);\n      } else if (item.value === 'or') {\n        nstack.push(n1 ? true : !!evaluate(n2, expr, values));\n      } else if (item.value === '=') {\n        f = expr.binaryOps[item.value];\n        nstack.push(f(n1, evaluate(n2, expr, values), values));\n      } else {\n        f = expr.binaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values)));\n      }\n    } else if (type === IOP3) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === '?') {\n        nstack.push(evaluate(n1 ? n2 : n3, expr, values));\n      } else {\n        f = expr.ternaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values), resolveExpression(n3, values)));\n      }\n    } else if (type === IVAR) {\n      if (item.value in expr.functions) {\n        nstack.push(expr.functions[item.value]);\n      } else if (item.value in expr.unaryOps && expr.parser.isOperatorEnabled(item.value)) {\n        nstack.push(expr.unaryOps[item.value]);\n      } else {\n        var v = values[item.value];\n        if (v !== undefined) {\n          nstack.push(v);\n        } else {\n          throw new Error('undefined variable: ' + item.value);\n        }\n      }\n    } else if (type === IOP1) {\n      n1 = nstack.pop();\n      f = expr.unaryOps[item.value];\n      nstack.push(f(resolveExpression(n1, values)));\n    } else if (type === IFUNCALL) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(resolveExpression(nstack.pop(), values));\n      }\n      f = nstack.pop();\n      if (f.apply && f.call) {\n        nstack.push(f.apply(undefined, args));\n      } else {\n        throw new Error(f + ' is not a function');\n      }\n    } else if (type === IFUNDEF) {\n      // Create closure to keep references to arguments and expression\n      nstack.push((function () {\n        var n2 = nstack.pop();\n        var args = [];\n        var argCount = item.value;\n        while (argCount-- > 0) {\n          args.unshift(nstack.pop());\n        }\n        var n1 = nstack.pop();\n        var f = function () {\n          var scope = Object.assign({}, values);\n          for (var i = 0, len = args.length; i < len; i++) {\n            scope[args[i]] = arguments[i];\n          }\n          return evaluate(n2, expr, scope);\n        };\n        // f.name = n1\n        Object.defineProperty(f, 'name', {\n          value: n1,\n          writable: false\n        });\n        values[n1] = f;\n        return f;\n      })());\n    } else if (type === IEXPR) {\n      nstack.push(createExpressionEvaluator(item, expr));\n    } else if (type === IEXPREVAL) {\n      nstack.push(item);\n    } else if (type === IMEMBER) {\n      n1 = nstack.pop();\n      nstack.push(n1[item.value]);\n    } else if (type === IENDSTATEMENT) {\n      nstack.pop();\n    } else if (type === IARRAY) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      nstack.push(args);\n    } else {\n      throw new Error('invalid Expression');\n    }\n  }\n  if (nstack.length > 1) {\n    throw new Error('invalid Expression (parity)');\n  }\n  // Explicitly return zero to avoid test issues caused by -0\n  return nstack[0] === 0 ? 0 : resolveExpression(nstack[0], values);\n}\n\nfunction createExpressionEvaluator(token, expr, values) {\n  if (isExpressionEvaluator(token)) return token;\n  return {\n    type: IEXPREVAL,\n    value: function (scope) {\n      return evaluate(token.value, expr, scope);\n    }\n  };\n}\n\nfunction isExpressionEvaluator(n) {\n  return n && n.type === IEXPREVAL;\n}\n\nfunction resolveExpression(n, values) {\n  return isExpressionEvaluator(n) ? n.value(values) : n;\n}\n\nfunction expressionToString(tokens, toJS) {\n  var nstack = [];\n  var n1, n2, n3;\n  var f, args, argCount;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER) {\n      if (typeof item.value === 'number' && item.value < 0) {\n        nstack.push('(' + item.value + ')');\n      } else if (Array.isArray(item.value)) {\n        nstack.push('[' + item.value.map(escapeValue).join(', ') + ']');\n      } else {\n        nstack.push(escapeValue(item.value));\n      }\n    } else if (type === IOP2) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = item.value;\n      if (toJS) {\n        if (f === '^') {\n          nstack.push('Math.pow(' + n1 + ', ' + n2 + ')');\n        } else if (f === 'and') {\n          nstack.push('(!!' + n1 + ' && !!' + n2 + ')');\n        } else if (f === 'or') {\n          nstack.push('(!!' + n1 + ' || !!' + n2 + ')');\n        } else if (f === '||') {\n          nstack.push('(function(a,b){ return Array.isArray(a) && Array.isArray(b) ? a.concat(b) : String(a) + String(b); }((' + n1 + '),(' + n2 + ')))');\n        } else if (f === '==') {\n          nstack.push('(' + n1 + ' === ' + n2 + ')');\n        } else if (f === '!=') {\n          nstack.push('(' + n1 + ' !== ' + n2 + ')');\n        } else if (f === '[') {\n          nstack.push(n1 + '[(' + n2 + ') | 0]');\n        } else {\n          nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n        }\n      } else {\n        if (f === '[') {\n          nstack.push(n1 + '[' + n2 + ']');\n        } else {\n          nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n        }\n      }\n    } else if (type === IOP3) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = item.value;\n      if (f === '?') {\n        nstack.push('(' + n1 + ' ? ' + n2 + ' : ' + n3 + ')');\n      } else {\n        throw new Error('invalid Expression');\n      }\n    } else if (type === IVAR || type === IVARNAME) {\n      nstack.push(item.value);\n    } else if (type === IOP1) {\n      n1 = nstack.pop();\n      f = item.value;\n      if (f === '-' || f === '+') {\n        nstack.push('(' + f + n1 + ')');\n      } else if (toJS) {\n        if (f === 'not') {\n          nstack.push('(' + '!' + n1 + ')');\n        } else if (f === '!') {\n          nstack.push('fac(' + n1 + ')');\n        } else {\n          nstack.push(f + '(' + n1 + ')');\n        }\n      } else if (f === '!') {\n        nstack.push('(' + n1 + '!)');\n      } else {\n        nstack.push('(' + f + ' ' + n1 + ')');\n      }\n    } else if (type === IFUNCALL) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      f = nstack.pop();\n      nstack.push(f + '(' + args.join(', ') + ')');\n    } else if (type === IFUNDEF) {\n      n2 = nstack.pop();\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      n1 = nstack.pop();\n      if (toJS) {\n        nstack.push('(' + n1 + ' = function(' + args.join(', ') + ') { return ' + n2 + ' })');\n      } else {\n        nstack.push('(' + n1 + '(' + args.join(', ') + ') = ' + n2 + ')');\n      }\n    } else if (type === IMEMBER) {\n      n1 = nstack.pop();\n      nstack.push(n1 + '.' + item.value);\n    } else if (type === IARRAY) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      nstack.push('[' + args.join(', ') + ']');\n    } else if (type === IEXPR) {\n      nstack.push('(' + expressionToString(item.value, toJS) + ')');\n    } else if (type === IENDSTATEMENT) ; else {\n      throw new Error('invalid Expression');\n    }\n  }\n  if (nstack.length > 1) {\n    if (toJS) {\n      nstack = [ nstack.join(',') ];\n    } else {\n      nstack = [ nstack.join(';') ];\n    }\n  }\n  return String(nstack[0]);\n}\n\nfunction escapeValue(v) {\n  if (typeof v === 'string') {\n    return JSON.stringify(v).replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n  }\n  return v;\n}\n\nfunction contains(array, obj) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getSymbols(tokens, symbols, options) {\n  options = options || {};\n  var withMembers = !!options.withMembers;\n  var prevVar = null;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    if (item.type === IVAR || item.type === IVARNAME) {\n      if (!withMembers && !contains(symbols, item.value)) {\n        symbols.push(item.value);\n      } else if (prevVar !== null) {\n        if (!contains(symbols, prevVar)) {\n          symbols.push(prevVar);\n        }\n        prevVar = item.value;\n      } else {\n        prevVar = item.value;\n      }\n    } else if (item.type === IMEMBER && withMembers && prevVar !== null) {\n      prevVar += '.' + item.value;\n    } else if (item.type === IEXPR) {\n      getSymbols(item.value, symbols, options);\n    } else if (prevVar !== null) {\n      if (!contains(symbols, prevVar)) {\n        symbols.push(prevVar);\n      }\n      prevVar = null;\n    }\n  }\n\n  if (prevVar !== null && !contains(symbols, prevVar)) {\n    symbols.push(prevVar);\n  }\n}\n\nfunction Expression(tokens, parser) {\n  this.tokens = tokens;\n  this.parser = parser;\n  this.unaryOps = parser.unaryOps;\n  this.binaryOps = parser.binaryOps;\n  this.ternaryOps = parser.ternaryOps;\n  this.functions = parser.functions;\n}\n\nExpression.prototype.simplify = function (values) {\n  values = values || {};\n  return new Expression(simplify(this.tokens, this.unaryOps, this.binaryOps, this.ternaryOps, values), this.parser);\n};\n\nExpression.prototype.substitute = function (variable, expr) {\n  if (!(expr instanceof Expression)) {\n    expr = this.parser.parse(String(expr));\n  }\n\n  return new Expression(substitute(this.tokens, variable, expr), this.parser);\n};\n\nExpression.prototype.evaluate = function (values) {\n  values = values || {};\n  return evaluate(this.tokens, this, values);\n};\n\nExpression.prototype.toString = function () {\n  return expressionToString(this.tokens, false);\n};\n\nExpression.prototype.symbols = function (options) {\n  options = options || {};\n  var vars = [];\n  getSymbols(this.tokens, vars, options);\n  return vars;\n};\n\nExpression.prototype.variables = function (options) {\n  options = options || {};\n  var vars = [];\n  getSymbols(this.tokens, vars, options);\n  var functions = this.functions;\n  return vars.filter(function (name) {\n    return !(name in functions);\n  });\n};\n\nExpression.prototype.toJSFunction = function (param, variables) {\n  var expr = this;\n  var f = new Function(param, 'with(this.functions) with (this.ternaryOps) with (this.binaryOps) with (this.unaryOps) { return ' + expressionToString(this.simplify(variables).tokens, true) + '; }'); // eslint-disable-line no-new-func\n  return function () {\n    return f.apply(expr, arguments);\n  };\n};\n\nvar TEOF = 'TEOF';\nvar TOP = 'TOP';\nvar TNUMBER = 'TNUMBER';\nvar TSTRING = 'TSTRING';\nvar TPAREN = 'TPAREN';\nvar TBRACKET = 'TBRACKET';\nvar TCOMMA = 'TCOMMA';\nvar TNAME = 'TNAME';\nvar TSEMICOLON = 'TSEMICOLON';\n\nfunction Token(type, value, index) {\n  this.type = type;\n  this.value = value;\n  this.index = index;\n}\n\nToken.prototype.toString = function () {\n  return this.type + ': ' + this.value;\n};\n\nfunction TokenStream(parser, expression) {\n  this.pos = 0;\n  this.current = null;\n  this.unaryOps = parser.unaryOps;\n  this.binaryOps = parser.binaryOps;\n  this.ternaryOps = parser.ternaryOps;\n  this.consts = parser.consts;\n  this.expression = expression;\n  this.savedPosition = 0;\n  this.savedCurrent = null;\n  this.options = parser.options;\n  this.parser = parser;\n}\n\nTokenStream.prototype.newToken = function (type, value, pos) {\n  return new Token(type, value, pos != null ? pos : this.pos);\n};\n\nTokenStream.prototype.save = function () {\n  this.savedPosition = this.pos;\n  this.savedCurrent = this.current;\n};\n\nTokenStream.prototype.restore = function () {\n  this.pos = this.savedPosition;\n  this.current = this.savedCurrent;\n};\n\nTokenStream.prototype.next = function () {\n  if (this.pos >= this.expression.length) {\n    return this.newToken(TEOF, 'EOF');\n  }\n\n  if (this.isWhitespace() || this.isComment()) {\n    return this.next();\n  } else if (this.isRadixInteger() ||\n      this.isNumber() ||\n      this.isOperator() ||\n      this.isString() ||\n      this.isParen() ||\n      this.isBracket() ||\n      this.isComma() ||\n      this.isSemicolon() ||\n      this.isNamedOp() ||\n      this.isConst() ||\n      this.isName()) {\n    return this.current;\n  } else {\n    this.parseError('Unknown character \"' + this.expression.charAt(this.pos) + '\"');\n  }\n};\n\nTokenStream.prototype.isString = function () {\n  var r = false;\n  var startPos = this.pos;\n  var quote = this.expression.charAt(startPos);\n\n  if (quote === '\\'' || quote === '\"') {\n    var index = this.expression.indexOf(quote, startPos + 1);\n    while (index >= 0 && this.pos < this.expression.length) {\n      this.pos = index + 1;\n      if (this.expression.charAt(index - 1) !== '\\\\') {\n        var rawString = this.expression.substring(startPos + 1, index);\n        this.current = this.newToken(TSTRING, this.unescape(rawString), startPos);\n        r = true;\n        break;\n      }\n      index = this.expression.indexOf(quote, index + 1);\n    }\n  }\n  return r;\n};\n\nTokenStream.prototype.isParen = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === '(' || c === ')') {\n    this.current = this.newToken(TPAREN, c);\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isBracket = function () {\n  var c = this.expression.charAt(this.pos);\n  if ((c === '[' || c === ']') && this.isOperatorEnabled('[')) {\n    this.current = this.newToken(TBRACKET, c);\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isComma = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === ',') {\n    this.current = this.newToken(TCOMMA, ',');\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isSemicolon = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === ';') {\n    this.current = this.newToken(TSEMICOLON, ';');\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isConst = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos || (c !== '_' && c !== '.' && (c < '0' || c > '9'))) {\n        break;\n      }\n    }\n  }\n  if (i > startPos) {\n    var str = this.expression.substring(startPos, i);\n    if (str in this.consts) {\n      this.current = this.newToken(TNUMBER, this.consts[str]);\n      this.pos += str.length;\n      return true;\n    }\n  }\n  return false;\n};\n\nTokenStream.prototype.isNamedOp = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos || (c !== '_' && (c < '0' || c > '9'))) {\n        break;\n      }\n    }\n  }\n  if (i > startPos) {\n    var str = this.expression.substring(startPos, i);\n    if (this.isOperatorEnabled(str) && (str in this.binaryOps || str in this.unaryOps || str in this.ternaryOps)) {\n      this.current = this.newToken(TOP, str);\n      this.pos += str.length;\n      return true;\n    }\n  }\n  return false;\n};\n\nTokenStream.prototype.isName = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  var hasLetter = false;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos && (c === '$' || c === '_')) {\n        if (c === '_') {\n          hasLetter = true;\n        }\n        continue;\n      } else if (i === this.pos || !hasLetter || (c !== '_' && (c < '0' || c > '9'))) {\n        break;\n      }\n    } else {\n      hasLetter = true;\n    }\n  }\n  if (hasLetter) {\n    var str = this.expression.substring(startPos, i);\n    this.current = this.newToken(TNAME, str);\n    this.pos += str.length;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isWhitespace = function () {\n  var r = false;\n  var c = this.expression.charAt(this.pos);\n  while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {\n    r = true;\n    this.pos++;\n    if (this.pos >= this.expression.length) {\n      break;\n    }\n    c = this.expression.charAt(this.pos);\n  }\n  return r;\n};\n\nvar codePointPattern = /^[0-9a-f]{4}$/i;\n\nTokenStream.prototype.unescape = function (v) {\n  var index = v.indexOf('\\\\');\n  if (index < 0) {\n    return v;\n  }\n\n  var buffer = v.substring(0, index);\n  while (index >= 0) {\n    var c = v.charAt(++index);\n    switch (c) {\n      case '\\'':\n        buffer += '\\'';\n        break;\n      case '\"':\n        buffer += '\"';\n        break;\n      case '\\\\':\n        buffer += '\\\\';\n        break;\n      case '/':\n        buffer += '/';\n        break;\n      case 'b':\n        buffer += '\\b';\n        break;\n      case 'f':\n        buffer += '\\f';\n        break;\n      case 'n':\n        buffer += '\\n';\n        break;\n      case 'r':\n        buffer += '\\r';\n        break;\n      case 't':\n        buffer += '\\t';\n        break;\n      case 'u':\n        // interpret the following 4 characters as the hex of the unicode code point\n        var codePoint = v.substring(index + 1, index + 5);\n        if (!codePointPattern.test(codePoint)) {\n          this.parseError('Illegal escape sequence: \\\\u' + codePoint);\n        }\n        buffer += String.fromCharCode(parseInt(codePoint, 16));\n        index += 4;\n        break;\n      default:\n        throw this.parseError('Illegal escape sequence: \"\\\\' + c + '\"');\n    }\n    ++index;\n    var backslash = v.indexOf('\\\\', index);\n    buffer += v.substring(index, backslash < 0 ? v.length : backslash);\n    index = backslash;\n  }\n\n  return buffer;\n};\n\nTokenStream.prototype.isComment = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === '/' && this.expression.charAt(this.pos + 1) === '*') {\n    this.pos = this.expression.indexOf('*/', this.pos) + 2;\n    if (this.pos === 1) {\n      this.pos = this.expression.length;\n    }\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isRadixInteger = function () {\n  var pos = this.pos;\n\n  if (pos >= this.expression.length - 2 || this.expression.charAt(pos) !== '0') {\n    return false;\n  }\n  ++pos;\n\n  var radix;\n  var validDigit;\n  if (this.expression.charAt(pos) === 'x') {\n    radix = 16;\n    validDigit = /^[0-9a-f]$/i;\n    ++pos;\n  } else if (this.expression.charAt(pos) === 'b') {\n    radix = 2;\n    validDigit = /^[01]$/i;\n    ++pos;\n  } else {\n    return false;\n  }\n\n  var valid = false;\n  var startPos = pos;\n\n  while (pos < this.expression.length) {\n    var c = this.expression.charAt(pos);\n    if (validDigit.test(c)) {\n      pos++;\n      valid = true;\n    } else {\n      break;\n    }\n  }\n\n  if (valid) {\n    this.current = this.newToken(TNUMBER, parseInt(this.expression.substring(startPos, pos), radix));\n    this.pos = pos;\n  }\n  return valid;\n};\n\nTokenStream.prototype.isNumber = function () {\n  var valid = false;\n  var pos = this.pos;\n  var startPos = pos;\n  var resetPos = pos;\n  var foundDot = false;\n  var foundDigits = false;\n  var c;\n\n  while (pos < this.expression.length) {\n    c = this.expression.charAt(pos);\n    if ((c >= '0' && c <= '9') || (!foundDot && c === '.')) {\n      if (c === '.') {\n        foundDot = true;\n      } else {\n        foundDigits = true;\n      }\n      pos++;\n      valid = foundDigits;\n    } else {\n      break;\n    }\n  }\n\n  if (valid) {\n    resetPos = pos;\n  }\n\n  if (c === 'e' || c === 'E') {\n    pos++;\n    var acceptSign = true;\n    var validExponent = false;\n    while (pos < this.expression.length) {\n      c = this.expression.charAt(pos);\n      if (acceptSign && (c === '+' || c === '-')) {\n        acceptSign = false;\n      } else if (c >= '0' && c <= '9') {\n        validExponent = true;\n        acceptSign = false;\n      } else {\n        break;\n      }\n      pos++;\n    }\n\n    if (!validExponent) {\n      pos = resetPos;\n    }\n  }\n\n  if (valid) {\n    this.current = this.newToken(TNUMBER, parseFloat(this.expression.substring(startPos, pos)));\n    this.pos = pos;\n  } else {\n    this.pos = resetPos;\n  }\n  return valid;\n};\n\nTokenStream.prototype.isOperator = function () {\n  var startPos = this.pos;\n  var c = this.expression.charAt(this.pos);\n\n  if (c === '+' || c === '-' || c === '*' || c === '/' || c === '%' || c === '^' || c === '?' || c === ':' || c === '.') {\n    this.current = this.newToken(TOP, c);\n  } else if (c === '∙' || c === '•') {\n    this.current = this.newToken(TOP, '*');\n  } else if (c === '>') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '>=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, '>');\n    }\n  } else if (c === '<') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '<=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, '<');\n    }\n  } else if (c === '|') {\n    if (this.expression.charAt(this.pos + 1) === '|') {\n      this.current = this.newToken(TOP, '||');\n      this.pos++;\n    } else {\n      return false;\n    }\n  } else if (c === '=') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '==');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, c);\n    }\n  } else if (c === '!') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '!=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, c);\n    }\n  } else {\n    return false;\n  }\n  this.pos++;\n\n  if (this.isOperatorEnabled(this.current.value)) {\n    return true;\n  } else {\n    this.pos = startPos;\n    return false;\n  }\n};\n\nTokenStream.prototype.isOperatorEnabled = function (op) {\n  return this.parser.isOperatorEnabled(op);\n};\n\nTokenStream.prototype.getCoordinates = function () {\n  var line = 0;\n  var column;\n  var newline = -1;\n  do {\n    line++;\n    column = this.pos - newline;\n    newline = this.expression.indexOf('\\n', newline + 1);\n  } while (newline >= 0 && newline < this.pos);\n\n  return {\n    line: line,\n    column: column\n  };\n};\n\nTokenStream.prototype.parseError = function (msg) {\n  var coords = this.getCoordinates();\n  throw new Error('parse error [' + coords.line + ':' + coords.column + ']: ' + msg);\n};\n\nfunction ParserState(parser, tokenStream, options) {\n  this.parser = parser;\n  this.tokens = tokenStream;\n  this.current = null;\n  this.nextToken = null;\n  this.next();\n  this.savedCurrent = null;\n  this.savedNextToken = null;\n  this.allowMemberAccess = options.allowMemberAccess !== false;\n}\n\nParserState.prototype.next = function () {\n  this.current = this.nextToken;\n  return (this.nextToken = this.tokens.next());\n};\n\nParserState.prototype.tokenMatches = function (token, value) {\n  if (typeof value === 'undefined') {\n    return true;\n  } else if (Array.isArray(value)) {\n    return contains(value, token.value);\n  } else if (typeof value === 'function') {\n    return value(token);\n  } else {\n    return token.value === value;\n  }\n};\n\nParserState.prototype.save = function () {\n  this.savedCurrent = this.current;\n  this.savedNextToken = this.nextToken;\n  this.tokens.save();\n};\n\nParserState.prototype.restore = function () {\n  this.tokens.restore();\n  this.current = this.savedCurrent;\n  this.nextToken = this.savedNextToken;\n};\n\nParserState.prototype.accept = function (type, value) {\n  if (this.nextToken.type === type && this.tokenMatches(this.nextToken, value)) {\n    this.next();\n    return true;\n  }\n  return false;\n};\n\nParserState.prototype.expect = function (type, value) {\n  if (!this.accept(type, value)) {\n    var coords = this.tokens.getCoordinates();\n    throw new Error('parse error [' + coords.line + ':' + coords.column + ']: Expected ' + (value || type));\n  }\n};\n\nParserState.prototype.parseAtom = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  if (this.accept(TNAME) || this.accept(TOP, isPrefixOperator)) {\n    instr.push(new Instruction(IVAR, this.current.value));\n  } else if (this.accept(TNUMBER)) {\n    instr.push(new Instruction(INUMBER, this.current.value));\n  } else if (this.accept(TSTRING)) {\n    instr.push(new Instruction(INUMBER, this.current.value));\n  } else if (this.accept(TPAREN, '(')) {\n    this.parseExpression(instr);\n    this.expect(TPAREN, ')');\n  } else if (this.accept(TBRACKET, '[')) {\n    if (this.accept(TBRACKET, ']')) {\n      instr.push(new Instruction(IARRAY, 0));\n    } else {\n      var argCount = this.parseArrayList(instr);\n      instr.push(new Instruction(IARRAY, argCount));\n    }\n  } else {\n    throw new Error('unexpected ' + this.nextToken);\n  }\n};\n\nParserState.prototype.parseExpression = function (instr) {\n  var exprInstr = [];\n  if (this.parseUntilEndStatement(instr, exprInstr)) {\n    return;\n  }\n  this.parseVariableAssignmentExpression(exprInstr);\n  if (this.parseUntilEndStatement(instr, exprInstr)) {\n    return;\n  }\n  this.pushExpression(instr, exprInstr);\n};\n\nParserState.prototype.pushExpression = function (instr, exprInstr) {\n  for (var i = 0, len = exprInstr.length; i < len; i++) {\n    instr.push(exprInstr[i]);\n  }\n};\n\nParserState.prototype.parseUntilEndStatement = function (instr, exprInstr) {\n  if (!this.accept(TSEMICOLON)) return false;\n  if (this.nextToken && this.nextToken.type !== TEOF && !(this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n    exprInstr.push(new Instruction(IENDSTATEMENT));\n  }\n  if (this.nextToken.type !== TEOF) {\n    this.parseExpression(exprInstr);\n  }\n  instr.push(new Instruction(IEXPR, exprInstr));\n  return true;\n};\n\nParserState.prototype.parseArrayList = function (instr) {\n  var argCount = 0;\n\n  while (!this.accept(TBRACKET, ']')) {\n    this.parseExpression(instr);\n    ++argCount;\n    while (this.accept(TCOMMA)) {\n      this.parseExpression(instr);\n      ++argCount;\n    }\n  }\n\n  return argCount;\n};\n\nParserState.prototype.parseVariableAssignmentExpression = function (instr) {\n  this.parseConditionalExpression(instr);\n  while (this.accept(TOP, '=')) {\n    var varName = instr.pop();\n    var varValue = [];\n    var lastInstrIndex = instr.length - 1;\n    if (varName.type === IFUNCALL) {\n      if (!this.tokens.isOperatorEnabled('()=')) {\n        throw new Error('function definition is not permitted');\n      }\n      for (var i = 0, len = varName.value + 1; i < len; i++) {\n        var index = lastInstrIndex - i;\n        if (instr[index].type === IVAR) {\n          instr[index] = new Instruction(IVARNAME, instr[index].value);\n        }\n      }\n      this.parseVariableAssignmentExpression(varValue);\n      instr.push(new Instruction(IEXPR, varValue));\n      instr.push(new Instruction(IFUNDEF, varName.value));\n      continue;\n    }\n    if (varName.type !== IVAR && varName.type !== IMEMBER) {\n      throw new Error('expected variable for assignment');\n    }\n    this.parseVariableAssignmentExpression(varValue);\n    instr.push(new Instruction(IVARNAME, varName.value));\n    instr.push(new Instruction(IEXPR, varValue));\n    instr.push(binaryInstruction('='));\n  }\n};\n\nParserState.prototype.parseConditionalExpression = function (instr) {\n  this.parseOrExpression(instr);\n  while (this.accept(TOP, '?')) {\n    var trueBranch = [];\n    var falseBranch = [];\n    this.parseConditionalExpression(trueBranch);\n    this.expect(TOP, ':');\n    this.parseConditionalExpression(falseBranch);\n    instr.push(new Instruction(IEXPR, trueBranch));\n    instr.push(new Instruction(IEXPR, falseBranch));\n    instr.push(ternaryInstruction('?'));\n  }\n};\n\nParserState.prototype.parseOrExpression = function (instr) {\n  this.parseAndExpression(instr);\n  while (this.accept(TOP, 'or')) {\n    var falseBranch = [];\n    this.parseAndExpression(falseBranch);\n    instr.push(new Instruction(IEXPR, falseBranch));\n    instr.push(binaryInstruction('or'));\n  }\n};\n\nParserState.prototype.parseAndExpression = function (instr) {\n  this.parseComparison(instr);\n  while (this.accept(TOP, 'and')) {\n    var trueBranch = [];\n    this.parseComparison(trueBranch);\n    instr.push(new Instruction(IEXPR, trueBranch));\n    instr.push(binaryInstruction('and'));\n  }\n};\n\nvar COMPARISON_OPERATORS = ['==', '!=', '<', '<=', '>=', '>', 'in'];\n\nParserState.prototype.parseComparison = function (instr) {\n  this.parseAddSub(instr);\n  while (this.accept(TOP, COMPARISON_OPERATORS)) {\n    var op = this.current;\n    this.parseAddSub(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nvar ADD_SUB_OPERATORS = ['+', '-', '||'];\n\nParserState.prototype.parseAddSub = function (instr) {\n  this.parseTerm(instr);\n  while (this.accept(TOP, ADD_SUB_OPERATORS)) {\n    var op = this.current;\n    this.parseTerm(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nvar TERM_OPERATORS = ['*', '/', '%'];\n\nParserState.prototype.parseTerm = function (instr) {\n  this.parseFactor(instr);\n  while (this.accept(TOP, TERM_OPERATORS)) {\n    var op = this.current;\n    this.parseFactor(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nParserState.prototype.parseFactor = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  this.save();\n  if (this.accept(TOP, isPrefixOperator)) {\n    if (this.current.value !== '-' && this.current.value !== '+') {\n      if (this.nextToken.type === TPAREN && this.nextToken.value === '(') {\n        this.restore();\n        this.parseExponential(instr);\n        return;\n      } else if (this.nextToken.type === TSEMICOLON || this.nextToken.type === TCOMMA || this.nextToken.type === TEOF || (this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n        this.restore();\n        this.parseAtom(instr);\n        return;\n      }\n    }\n\n    var op = this.current;\n    this.parseFactor(instr);\n    instr.push(unaryInstruction(op.value));\n  } else {\n    this.parseExponential(instr);\n  }\n};\n\nParserState.prototype.parseExponential = function (instr) {\n  this.parsePostfixExpression(instr);\n  while (this.accept(TOP, '^')) {\n    this.parseFactor(instr);\n    instr.push(binaryInstruction('^'));\n  }\n};\n\nParserState.prototype.parsePostfixExpression = function (instr) {\n  this.parseFunctionCall(instr);\n  while (this.accept(TOP, '!')) {\n    instr.push(unaryInstruction('!'));\n  }\n};\n\nParserState.prototype.parseFunctionCall = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  if (this.accept(TOP, isPrefixOperator)) {\n    var op = this.current;\n    this.parseAtom(instr);\n    instr.push(unaryInstruction(op.value));\n  } else {\n    this.parseMemberExpression(instr);\n    while (this.accept(TPAREN, '(')) {\n      if (this.accept(TPAREN, ')')) {\n        instr.push(new Instruction(IFUNCALL, 0));\n      } else {\n        var argCount = this.parseArgumentList(instr);\n        instr.push(new Instruction(IFUNCALL, argCount));\n      }\n    }\n  }\n};\n\nParserState.prototype.parseArgumentList = function (instr) {\n  var argCount = 0;\n\n  while (!this.accept(TPAREN, ')')) {\n    this.parseExpression(instr);\n    ++argCount;\n    while (this.accept(TCOMMA)) {\n      this.parseExpression(instr);\n      ++argCount;\n    }\n  }\n\n  return argCount;\n};\n\nParserState.prototype.parseMemberExpression = function (instr) {\n  this.parseAtom(instr);\n  while (this.accept(TOP, '.') || this.accept(TBRACKET, '[')) {\n    var op = this.current;\n\n    if (op.value === '.') {\n      if (!this.allowMemberAccess) {\n        throw new Error('unexpected \".\", member access is not permitted');\n      }\n\n      this.expect(TNAME);\n      instr.push(new Instruction(IMEMBER, this.current.value));\n    } else if (op.value === '[') {\n      if (!this.tokens.isOperatorEnabled('[')) {\n        throw new Error('unexpected \"[]\", arrays are disabled');\n      }\n\n      this.parseExpression(instr);\n      this.expect(TBRACKET, ']');\n      instr.push(binaryInstruction('['));\n    } else {\n      throw new Error('unexpected symbol: ' + op.value);\n    }\n  }\n};\n\nfunction add(a, b) {\n  return Number(a) + Number(b);\n}\n\nfunction sub(a, b) {\n  return a - b;\n}\n\nfunction mul(a, b) {\n  return a * b;\n}\n\nfunction div(a, b) {\n  return a / b;\n}\n\nfunction mod(a, b) {\n  return a % b;\n}\n\nfunction concat(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.concat(b);\n  }\n  return '' + a + b;\n}\n\nfunction equal(a, b) {\n  return a === b;\n}\n\nfunction notEqual(a, b) {\n  return a !== b;\n}\n\nfunction greaterThan(a, b) {\n  return a > b;\n}\n\nfunction lessThan(a, b) {\n  return a < b;\n}\n\nfunction greaterThanEqual(a, b) {\n  return a >= b;\n}\n\nfunction lessThanEqual(a, b) {\n  return a <= b;\n}\n\nfunction andOperator(a, b) {\n  return Boolean(a && b);\n}\n\nfunction orOperator(a, b) {\n  return Boolean(a || b);\n}\n\nfunction inOperator(a, b) {\n  return contains(b, a);\n}\n\nfunction sinh(a) {\n  return ((Math.exp(a) - Math.exp(-a)) / 2);\n}\n\nfunction cosh(a) {\n  return ((Math.exp(a) + Math.exp(-a)) / 2);\n}\n\nfunction tanh(a) {\n  if (a === Infinity) return 1;\n  if (a === -Infinity) return -1;\n  return (Math.exp(a) - Math.exp(-a)) / (Math.exp(a) + Math.exp(-a));\n}\n\nfunction asinh(a) {\n  if (a === -Infinity) return a;\n  return Math.log(a + Math.sqrt((a * a) + 1));\n}\n\nfunction acosh(a) {\n  return Math.log(a + Math.sqrt((a * a) - 1));\n}\n\nfunction atanh(a) {\n  return (Math.log((1 + a) / (1 - a)) / 2);\n}\n\nfunction log10(a) {\n  return Math.log(a) * Math.LOG10E;\n}\n\nfunction neg(a) {\n  return -a;\n}\n\nfunction not(a) {\n  return !a;\n}\n\nfunction trunc(a) {\n  return a < 0 ? Math.ceil(a) : Math.floor(a);\n}\n\nfunction random(a) {\n  return Math.random() * (a || 1);\n}\n\nfunction factorial(a) { // a!\n  return gamma(a + 1);\n}\n\nfunction isInteger(value) {\n  return isFinite(value) && (value === Math.round(value));\n}\n\nvar GAMMA_G = 4.7421875;\nvar GAMMA_P = [\n  0.99999999999999709182,\n  57.156235665862923517, -59.597960355475491248,\n  14.136097974741747174, -0.49191381609762019978,\n  0.33994649984811888699e-4,\n  0.46523628927048575665e-4, -0.98374475304879564677e-4,\n  0.15808870322491248884e-3, -0.21026444172410488319e-3,\n  0.21743961811521264320e-3, -0.16431810653676389022e-3,\n  0.84418223983852743293e-4, -0.26190838401581408670e-4,\n  0.36899182659531622704e-5\n];\n\n// Gamma function from math.js\nfunction gamma(n) {\n  var t, x;\n\n  if (isInteger(n)) {\n    if (n <= 0) {\n      return isFinite(n) ? Infinity : NaN;\n    }\n\n    if (n > 171) {\n      return Infinity; // Will overflow\n    }\n\n    var value = n - 2;\n    var res = n - 1;\n    while (value > 1) {\n      res *= value;\n      value--;\n    }\n\n    if (res === 0) {\n      res = 1; // 0! is per definition 1\n    }\n\n    return res;\n  }\n\n  if (n < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * n) * gamma(1 - n));\n  }\n\n  if (n >= 171.35) {\n    return Infinity; // will overflow\n  }\n\n  if (n > 85.0) { // Extended Stirling Approx\n    var twoN = n * n;\n    var threeN = twoN * n;\n    var fourN = threeN * n;\n    var fiveN = fourN * n;\n    return Math.sqrt(2 * Math.PI / n) * Math.pow((n / Math.E), n) *\n      (1 + (1 / (12 * n)) + (1 / (288 * twoN)) - (139 / (51840 * threeN)) -\n      (571 / (2488320 * fourN)) + (163879 / (209018880 * fiveN)) +\n      (5246819 / (75246796800 * fiveN * n)));\n  }\n\n  --n;\n  x = GAMMA_P[0];\n  for (var i = 1; i < GAMMA_P.length; ++i) {\n    x += GAMMA_P[i] / (n + i);\n  }\n\n  t = n + GAMMA_G + 0.5;\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;\n}\n\nfunction stringOrArrayLength(s) {\n  if (Array.isArray(s)) {\n    return s.length;\n  }\n  return String(s).length;\n}\n\nfunction hypot() {\n  var sum = 0;\n  var larg = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = Math.abs(arguments[i]);\n    var div;\n    if (larg < arg) {\n      div = larg / arg;\n      sum = (sum * div * div) + 1;\n      larg = arg;\n    } else if (arg > 0) {\n      div = arg / larg;\n      sum += div * div;\n    } else {\n      sum += arg;\n    }\n  }\n  return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n}\n\nfunction condition(cond, yep, nope) {\n  return cond ? yep : nope;\n}\n\n/**\n* Decimal adjustment of a number.\n* From @escopecz.\n*\n* @param {Number} value The number.\n* @param {Integer} exp  The exponent (the 10 logarithm of the adjustment base).\n* @return {Number} The adjusted value.\n*/\nfunction roundTo(value, exp) {\n  // If the exp is undefined or zero...\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math.round(value);\n  }\n  value = +value;\n  exp = -(+exp);\n  // If the value is not a number or the exp is not an integer...\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Shift\n  value = value.toString().split('e');\n  value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n  // Shift back\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n}\n\nfunction setVar(name, value, variables) {\n  if (variables) variables[name] = value;\n  return value;\n}\n\nfunction arrayIndex(array, index) {\n  return array[index | 0];\n}\n\nfunction max(array) {\n  if (arguments.length === 1 && Array.isArray(array)) {\n    return Math.max.apply(Math, array);\n  } else {\n    return Math.max.apply(Math, arguments);\n  }\n}\n\nfunction min(array) {\n  if (arguments.length === 1 && Array.isArray(array)) {\n    return Math.min.apply(Math, array);\n  } else {\n    return Math.min.apply(Math, arguments);\n  }\n}\n\nfunction arrayMap(f, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to map is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to map is not an array');\n  }\n  return a.map(function (x, i) {\n    return f(x, i);\n  });\n}\n\nfunction arrayFold(f, init, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to fold is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to fold is not an array');\n  }\n  return a.reduce(function (acc, x, i) {\n    return f(acc, x, i);\n  }, init);\n}\n\nfunction arrayFilter(f, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to filter is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to filter is not an array');\n  }\n  return a.filter(function (x, i) {\n    return f(x, i);\n  });\n}\n\nfunction stringOrArrayIndexOf(target, s) {\n  if (!(Array.isArray(s) || typeof s === 'string')) {\n    throw new Error('Second argument to indexOf is not a string or array');\n  }\n\n  return s.indexOf(target);\n}\n\nfunction arrayJoin(sep, a) {\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to join is not an array');\n  }\n\n  return a.join(sep);\n}\n\nfunction sign(x) {\n  return ((x > 0) - (x < 0)) || +x;\n}\n\nvar ONE_THIRD = 1/3;\nfunction cbrt(x) {\n  return x < 0 ? -Math.pow(-x, ONE_THIRD) : Math.pow(x, ONE_THIRD);\n}\n\nfunction expm1(x) {\n  return Math.exp(x) - 1;\n}\n\nfunction log1p(x) {\n  return Math.log(1 + x);\n}\n\nfunction log2(x) {\n  return Math.log(x) / Math.LN2;\n}\n\nfunction Parser(options) {\n  this.options = options || {};\n  this.unaryOps = {\n    sin: Math.sin,\n    cos: Math.cos,\n    tan: Math.tan,\n    asin: Math.asin,\n    acos: Math.acos,\n    atan: Math.atan,\n    sinh: Math.sinh || sinh,\n    cosh: Math.cosh || cosh,\n    tanh: Math.tanh || tanh,\n    asinh: Math.asinh || asinh,\n    acosh: Math.acosh || acosh,\n    atanh: Math.atanh || atanh,\n    sqrt: Math.sqrt,\n    cbrt: Math.cbrt || cbrt,\n    log: Math.log,\n    log2: Math.log2 || log2,\n    ln: Math.log,\n    lg: Math.log10 || log10,\n    log10: Math.log10 || log10,\n    expm1: Math.expm1 || expm1,\n    log1p: Math.log1p || log1p,\n    abs: Math.abs,\n    ceil: Math.ceil,\n    floor: Math.floor,\n    round: Math.round,\n    trunc: Math.trunc || trunc,\n    '-': neg,\n    '+': Number,\n    exp: Math.exp,\n    not: not,\n    length: stringOrArrayLength,\n    '!': factorial,\n    sign: Math.sign || sign\n  };\n\n  this.binaryOps = {\n    '+': add,\n    '-': sub,\n    '*': mul,\n    '/': div,\n    '%': mod,\n    '^': Math.pow,\n    '||': concat,\n    '==': equal,\n    '!=': notEqual,\n    '>': greaterThan,\n    '<': lessThan,\n    '>=': greaterThanEqual,\n    '<=': lessThanEqual,\n    and: andOperator,\n    or: orOperator,\n    'in': inOperator,\n    '=': setVar,\n    '[': arrayIndex\n  };\n\n  this.ternaryOps = {\n    '?': condition\n  };\n\n  this.functions = {\n    random: random,\n    fac: factorial,\n    min: min,\n    max: max,\n    hypot: Math.hypot || hypot,\n    pyt: Math.hypot || hypot, // backward compat\n    pow: Math.pow,\n    atan2: Math.atan2,\n    'if': condition,\n    gamma: gamma,\n    roundTo: roundTo,\n    map: arrayMap,\n    fold: arrayFold,\n    filter: arrayFilter,\n    indexOf: stringOrArrayIndexOf,\n    join: arrayJoin\n  };\n\n  this.consts = {\n    E: Math.E,\n    PI: Math.PI,\n    'true': true,\n    'false': false\n  };\n}\n\nParser.prototype.parse = function (expr) {\n  var instr = [];\n  var parserState = new ParserState(\n    this,\n    new TokenStream(this, expr),\n    { allowMemberAccess: this.options.allowMemberAccess }\n  );\n\n  parserState.parseExpression(instr);\n  parserState.expect(TEOF, 'EOF');\n\n  return new Expression(instr, this);\n};\n\nParser.prototype.evaluate = function (expr, variables) {\n  return this.parse(expr).evaluate(variables);\n};\n\nvar sharedParser = new Parser();\n\nParser.parse = function (expr) {\n  return sharedParser.parse(expr);\n};\n\nParser.evaluate = function (expr, variables) {\n  return sharedParser.parse(expr).evaluate(variables);\n};\n\nvar optionNameMap = {\n  '+': 'add',\n  '-': 'subtract',\n  '*': 'multiply',\n  '/': 'divide',\n  '%': 'remainder',\n  '^': 'power',\n  '!': 'factorial',\n  '<': 'comparison',\n  '>': 'comparison',\n  '<=': 'comparison',\n  '>=': 'comparison',\n  '==': 'comparison',\n  '!=': 'comparison',\n  '||': 'concatenate',\n  'and': 'logical',\n  'or': 'logical',\n  'not': 'logical',\n  '?': 'conditional',\n  ':': 'conditional',\n  '=': 'assignment',\n  '[': 'array',\n  '()=': 'fndef'\n};\n\nfunction getOptionName(op) {\n  return optionNameMap.hasOwnProperty(op) ? optionNameMap[op] : op;\n}\n\nParser.prototype.isOperatorEnabled = function (op) {\n  var optionName = getOptionName(op);\n  var operators = this.options.operators || {};\n\n  return !(optionName in operators) || !!operators[optionName];\n};\n\n/*!\n Based on ndef.parser, by Raphael Graf(r@undefined.ch)\n http://www.undefined.ch/mparser/index.html\n\n Ported to JavaScript and modified by Matthew Crumley (email@matthewcrumley.com, http://silentmatt.com/)\n\n You are free to use and modify this code in anyway you find useful. Please leave this comment in the code\n to acknowledge its original source. If you feel like it, I enjoy hearing about projects that use my code,\n but don't feel like you have to let me know or ask permission.\n*/\n\n// Backwards compatibility\nvar index = {\n  Parser: Parser,\n  Expression: Expression\n};\n\nexport default index;\nexport { Expression, Parser };\n","var objectExtend = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (isUnextendable(result)) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (Object.prototype.hasOwnProperty.call(extender, key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(\n            true,\n            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n              ? result[key]\n              : base,\n            value\n          );\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n\nfunction isUnextendable(val) {\n  return !val || (typeof val != 'object' && typeof val != 'function');\n}\n\nexport {objectExtend as default};\n","var objectOmit = omit;\n\n/*\n  var obj = {a: 3, b: 5, c: 9};\n  omit(obj, ['a', 'c']); // {b: 5}\n  omit(obj, a, c); // {b: 5}\n  omit(obj, ['a', 'b', 'd']); // {c: 9}\n  omit(obj, ['a', 'a']); // {b: 5, c: 9}\n*/\n\nfunction omit(obj, remove) {\n  var result = {};\n  if (typeof remove === 'string') {\n    remove = [].slice.call(arguments, 1);\n  }\n  for (var prop in obj) {\n    if (!obj.hasOwnProperty || obj.hasOwnProperty(prop)) {\n      if (remove.indexOf(prop) === -1) {\n        result[prop] = obj[prop];\n      }\n    }\n  }\n  return result;\n}\n\nexport {objectOmit as default};\n","// A is m x n. B is n x p. product is m x p.\nfunction multiplyMatrices (A, B) {\n\tlet m = A.length;\n\n\tif (!Array.isArray(A[0])) {\n\t\t// A is vector, convert to [[a, b, c, ...]]\n\t\tA = [A];\n\t}\n\n\tif (!Array.isArray(B[0])) {\n\t\t// B is vector, convert to [[a], [b], [c], ...]]\n\t\tB = B.map(x => [x]);\n\t}\n\n\tlet p = B[0].length;\n\tlet B_cols = B[0].map((_, i) => B.map(x => x[i])); // transpose B\n\tlet product = A.map(row => B_cols.map(col => {\n\t\tlet ret = 0;\n\n\t\tif (!Array.isArray(row)) {\n\t\t\tfor (let c of col) {\n\t\t\t\tret += row * c;\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tfor (let i=0; i < row.length; i++) {\n\t\t\tret += row[i] * (col[i] || 0);\n\t\t}\n\n\t\treturn ret;\n\t}));\n\n\tif (m === 1) {\n\t\tproduct = product[0]; // Avoid [[a, b, c, ...]]\n\t}\n\n\tif (p === 1) {\n\t\treturn product.map(x => x[0]); // Avoid [[a], [b], [c], ...]]\n\t}\n\n\treturn product;\n}\n\n/**\n * Various utility functions\n */\n\n/**\n * Check if a value is a string (including a String object)\n * @param {*} str - Value to check\n * @returns {boolean}\n */\nfunction isString (str) {\n\treturn type(str) === \"string\";\n}\n\n/**\n * Determine the internal JavaScript [[Class]] of an object.\n * @param {*} o - Value to check\n * @returns {string}\n */\nfunction type (o) {\n\tlet str = Object.prototype.toString.call(o);\n\n\treturn (str.match(/^\\[object\\s+(.*?)\\]$/)[1] || \"\").toLowerCase();\n}\n\n/**\n * Round a number to a certain number of significant digits\n * @param {number} n - The number to round\n * @param {number} precision - Number of significant digits\n */\nfunction toPrecision (n, precision) {\n\tn = +n;\n\tprecision = +precision;\n\tlet integerLength = (Math.floor(n) + \"\").length;\n\n\tif (precision > integerLength) {\n\t\treturn +n.toFixed(precision - integerLength);\n\t}\n\telse {\n\t\tlet p10 = 10 ** (integerLength - precision);\n\t\treturn Math.round(n / p10) * p10;\n\t}\n}\n\n/**\n* Parse a CSS function, regardless of its name and arguments\n* @param String str String to parse\n* @return {{name, args, rawArgs}}\n*/\nfunction parseFunction (str) {\n\tif (!str) {\n\t\treturn;\n\t}\n\n\tstr = str.trim();\n\n\tconst isFunctionRegex = /^([a-z]+)\\((.+?)\\)$/i;\n\tconst isNumberRegex = /^-?[\\d.]+$/;\n\tlet parts = str.match(isFunctionRegex);\n\n\tif (parts) {\n\t\t// It is a function, parse args\n\t\tlet args = [];\n\t\tparts[2].replace(/\\/?\\s*([-\\w.]+(?:%|deg)?)/g, ($0, arg) => {\n\t\t\tif (/%$/.test(arg)) {\n\t\t\t\t// Convert percentages to 0-1 numbers\n\t\t\t\targ = new Number(arg.slice(0, -1) / 100);\n\t\t\t\targ.type = \"<percentage>\";\n\t\t\t}\n\t\t\telse if (/deg$/.test(arg)) {\n\t\t\t\t// Drop deg from degrees and convert to number\n\t\t\t\t// TODO handle other units too\n\t\t\t\targ = new Number(+arg.slice(0, -3));\n\t\t\t\targ.type = \"<angle>\";\n\t\t\t\targ.unit = \"deg\";\n\t\t\t}\n\t\t\telse if (isNumberRegex.test(arg)) {\n\t\t\t\t// Convert numerical args to numbers\n\t\t\t\targ = new Number(arg);\n\t\t\t\targ.type = \"<number>\";\n\t\t\t}\n\n\t\t\tif ($0.startsWith(\"/\")) {\n\t\t\t\t// It's alpha\n\t\t\t\targ = arg instanceof Number? arg : new Number(arg);\n\t\t\t\targ.alpha = true;\n\t\t\t}\n\n\t\t\targs.push(arg);\n\t\t});\n\n\t\treturn {\n\t\t\tname: parts[1].toLowerCase(),\n\t\t\trawName: parts[1],\n\t\t\trawArgs: parts[2],\n\t\t\t// An argument could be (as of css-color-4):\n\t\t\t// a number, percentage, degrees (hue), ident (in color())\n\t\t\targs\n\t\t};\n\t}\n}\n\nfunction last (arr) {\n\treturn arr[arr.length - 1];\n}\n\nfunction interpolate (start, end, p) {\n\tif (isNaN(start)) {\n\t\treturn end;\n\t}\n\n\tif (isNaN(end)) {\n\t\treturn start;\n\t}\n\n\treturn start + (end - start) * p;\n}\n\nfunction interpolateInv (start, end, value) {\n\treturn (value - start) / (end - start);\n}\n\nfunction mapRange (from, to, value) {\n\treturn interpolate(to[0], to[1], interpolateInv(from[0], from[1], value));\n}\n\nfunction parseCoordGrammar (coordGrammars) {\n\treturn coordGrammars.map(coordGrammar => {\n\t\treturn coordGrammar.split(\"|\").map(type => {\n\t\t\ttype = type.trim();\n\t\t\tlet range = type.match(/^(<[a-z]+>)\\[(-?[.\\d]+),\\s*(-?[.\\d]+)\\]?$/);\n\n\t\t\tif (range) {\n\t\t\t\tlet ret = new String(range[1]);\n\t\t\t\tret.range = [+range[2], +range[3]];\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn type;\n\t\t});\n\t});\n}\n\nvar util = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tisString: isString,\n\ttype: type,\n\ttoPrecision: toPrecision,\n\tparseFunction: parseFunction,\n\tlast: last,\n\tinterpolate: interpolate,\n\tinterpolateInv: interpolateInv,\n\tmapRange: mapRange,\n\tparseCoordGrammar: parseCoordGrammar,\n\tmultiplyMatrices: multiplyMatrices\n});\n\n/**\n * A class for adding deep extensibility to any piece of JS code\n */\nclass Hooks {\n\tadd (name, callback, first) {\n\t\tif (typeof arguments[0] != \"string\") {\n\t\t\t// Multiple hooks\n\t\t\tfor (var name in arguments[0]) {\n\t\t\t\tthis.add(name, arguments[0][name], arguments[1]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t(Array.isArray(name)? name : [name]).forEach(function (name) {\n\t\t\tthis[name] = this[name] || [];\n\n\t\t\tif (callback) {\n\t\t\t\tthis[name][first? \"unshift\" : \"push\"](callback);\n\t\t\t}\n\t\t}, this);\n\t}\n\n\trun (name, env) {\n\t\tthis[name] = this[name] || [];\n\t\tthis[name].forEach(function (callback) {\n\t\t\tcallback.call(env && env.context? env.context : env, env);\n\t\t});\n\t}\n}\n/**\n * The instance of {@link Hooks} used throughout Color.js\n */\nconst hooks = new Hooks();\n\n// Global defaults one may want to configure\n\nvar defaults = {\n\tgamut_mapping: \"lch.c\",\n\tprecision: 5,\n\tdeltaE: \"76\", // Default deltaE method\n};\n\nconst WHITES = {\n\t// for compatibility, the four-digit chromaticity-derived ones everyone else uses\n\tD50: [0.3457 / 0.3585, 1.00000, (1.0 - 0.3457 - 0.3585) / 0.3585],\n\tD65: [0.3127 / 0.3290, 1.00000, (1.0 - 0.3127 - 0.3290) / 0.3290],\n};\n\nfunction getWhite (name) {\n\tif (Array.isArray(name)) {\n\t\treturn name;\n\t}\n\n\treturn WHITES[name];\n}\n\n// Adapt XYZ from white point W1 to W2\nfunction adapt$1 (W1, W2, XYZ, options = {}) {\n\tW1 = getWhite(W1);\n\tW2 = getWhite(W2);\n\n\tif (!W1 || !W2) {\n\t\tthrow new TypeError(`Missing white point to convert ${!W1? \"from\" : \"\"}${!W1&&!W2? \"/\" : \"\"}${!W2? \"to\" : \"\"}`);\n\t}\n\n\tif (W1 === W2) {\n\t\t// Same whitepoints, no conversion needed\n\t\treturn XYZ;\n\t}\n\n\tlet env = {W1, W2, XYZ, options};\n\n\thooks.run(\"chromatic-adaptation-start\", env);\n\n\tif (!env.M) {\n\t\tif (env.W1 === WHITES.D65 && env.W2 === WHITES.D50) {\n\t\t\tenv.M = [\n\t\t\t\t[  1.0479298208405488,    0.022946793341019088,  -0.05019222954313557 ],\n\t\t\t\t[  0.029627815688159344,  0.990434484573249,     -0.01707382502938514 ],\n\t\t\t\t[ -0.009243058152591178,  0.015055144896577895,   0.7518742899580008  ]\n\t\t\t];\n\t\t}\n\t\telse if (env.W1 === WHITES.D50 && env.W2 === WHITES.D65) {\n\n\t\t\tenv.M = [\n\t\t\t\t[  0.9554734527042182,   -0.023098536874261423,  0.0632593086610217   ],\n\t\t\t\t[ -0.028369706963208136,  1.0099954580058226,    0.021041398966943008 ],\n\t\t\t\t[  0.012314001688319899, -0.020507696433477912,  1.3303659366080753   ]\n\t\t\t];\n\t\t}\n\t}\n\n\thooks.run(\"chromatic-adaptation-end\", env);\n\n\tif (env.M) {\n\t\treturn multiplyMatrices(env.M, env.XYZ);\n\t}\n\telse {\n\t\tthrow new TypeError(\"Only Bradford CAT with white points D50 and D65 supported for now.\");\n\t}\n}\n\nconst ε$4 = .000075;\n\n/**\n * Class to represent a color space\n */\nclass ColorSpace {\n\tconstructor (options) {\n\t\tthis.id = options.id;\n\t\tthis.name = options.name;\n\t\tthis.base = options.base ? ColorSpace.get(options.base) : null;\n\t\tthis.aliases = options.aliases;\n\n\t\tif (this.base) {\n\t\t\tthis.fromBase = options.fromBase;\n\t\t\tthis.toBase = options.toBase;\n\t\t}\n\n\t\t// Coordinate metadata\n\n\t\tlet coords = options.coords ?? this.base.coords;\n\t\tthis.coords = coords;\n\n\t\t// White point\n\n\t\tlet white = options.white ?? this.base.white ?? \"D65\";\n\t\tthis.white = getWhite(white);\n\n\t\t// Sort out formats\n\n\t\tthis.formats = options.formats ?? {};\n\n\t\tfor (let name in this.formats) {\n\t\t\tlet format = this.formats[name];\n\t\t\tformat.type ||= \"function\";\n\t\t\tformat.name ||= name;\n\t\t}\n\n\t\tif (options.cssId && !this.formats.functions?.color) {\n\t\t\tthis.formats.color = { id: options.cssId };\n\t\t\tObject.defineProperty(this, \"cssId\", {value: options.cssId});\n\t\t}\n\t\telse if (this.formats?.color && !this.formats?.color.id) {\n\t\t\tthis.formats.color.id = this.id;\n\t\t}\n\n\t\t// Other stuff\n\t\tthis.referred = options.referred;\n\n\t\t// Compute ancestors and store them, since they will never change\n\t\tthis.#path = this.#getPath().reverse();\n\n\t\thooks.run(\"colorspace-init-end\", this);\n\t}\n\n\tinGamut (coords, {epsilon = ε$4} = {}) {\n\t\tif (this.isPolar) {\n\t\t\t// Do not check gamut through polar coordinates\n\t\t\tcoords = this.toBase(coords);\n\n\t\t\treturn this.base.inGamut(coords, {epsilon});\n\t\t}\n\n\t\tlet coordMeta = Object.values(this.coords);\n\n\t\treturn coords.every((c, i) => {\n\t\t\tlet meta = coordMeta[i];\n\n\t\t\tif (meta.type !== \"angle\" && meta.range) {\n\t\t\t\tif (Number.isNaN(c)) {\n\t\t\t\t\t// NaN is always in gamut\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet [min, max] = meta.range;\n\t\t\t\treturn (min === undefined || c >= min - epsilon)\n\t\t\t\t    && (max === undefined || c <= max + epsilon);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tget cssId () {\n\t\treturn this.formats.functions?.color?.id || this.id;\n\t}\n\n\tget isPolar () {\n\t\tfor (let id in this.coords) {\n\t\t\tif (this.coords[id].type === \"angle\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#processFormat (format) {\n\t\tif (format.coords && !format.coordGrammar) {\n\t\t\tformat.type ||= \"function\";\n\t\t\tformat.name ||= \"color\";\n\n\t\t\t// Format has not been processed\n\t\t\tformat.coordGrammar = parseCoordGrammar(format.coords);\n\n\t\t\tlet coordFormats = Object.entries(this.coords).map(([id, coordMeta], i) => {\n\t\t\t\t// Preferred format for each coord is the first one\n\t\t\t\tlet outputType = format.coordGrammar[i][0];\n\n\t\t\t\tlet fromRange = coordMeta.range || coordMeta.refRange;\n\t\t\t\tlet toRange = outputType.range, suffix = \"\";\n\n\t\t\t\t// Non-strict equals intentional since outputType could be a string object\n\t\t\t\tif (outputType == \"<percentage>\") {\n\t\t\t\t\ttoRange = [0, 100];\n\t\t\t\t\tsuffix = \"%\";\n\t\t\t\t}\n\t\t\t\telse if (outputType == \"<angle>\") {\n\t\t\t\t\tsuffix = \"deg\";\n\t\t\t\t}\n\n\t\t\t\treturn  {fromRange, toRange, suffix};\n\t\t\t});\n\n\t\t\tformat.serializeCoords = (coords, precision) => {\n\t\t\t\treturn coords.map((c, i) => {\n\t\t\t\t\tlet {fromRange, toRange, suffix} = coordFormats[i];\n\n\t\t\t\t\tif (fromRange && toRange) {\n\t\t\t\t\t\tc = mapRange(fromRange, toRange, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tc = toPrecision(c, precision);\n\n\t\t\t\t\tif (suffix) {\n\t\t\t\t\t\tc += suffix;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn c;\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\treturn format;\n\t}\n\n\tgetFormat (format) {\n\t\tif (typeof format === \"object\") {\n\t\t\tformat = this.#processFormat(format);\n\t\t\treturn format;\n\t\t}\n\n\t\tlet ret;\n\t\tif (format === \"default\") {\n\t\t\t// Get first format\n\t\t\tret = Object.values(this.formats)[0];\n\t\t}\n\t\telse {\n\t\t\tret = this.formats[format];\n\t\t}\n\n\t\tif (ret) {\n\t\t\tret = this.#processFormat(ret);\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t#path;\n\n\t#getPath () {\n\t\tlet ret = [this];\n\n\t\tfor (let space = this; space = space.base;) {\n\t\t\tret.push(space);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tto (space, coords) {\n\t\tif (arguments.length === 1) {\n\t\t\t[space, coords] = [space.space, space.coords];\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tif (this === space) {\n\t\t\t// Same space, no change needed\n\t\t\treturn coords;\n\t\t}\n\n\t\t// Convert NaN to 0, which seems to be valid in every coordinate of every color space\n\t\tcoords = coords.map(c => Number.isNaN(c)? 0 : c);\n\n\t\t// Find connection space = lowest common ancestor in the base tree\n\t\tlet myPath = this.#path;\n\t\tlet otherPath = space.#path;\n\n\t\tlet connectionSpace, connectionSpaceIndex;\n\n\t\tfor (let i=0; i < myPath.length; i++) {\n\t\t\tif (myPath[i] === otherPath[i]) {\n\t\t\t\tconnectionSpace = myPath[i];\n\t\t\t\tconnectionSpaceIndex = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!connectionSpace) {\n\t\t\t// This should never happen\n\t\t\tthrow new Error(`Cannot convert between color spaces ${this} and ${space}: no connection space was found`);\n\t\t}\n\n\t\t// Go up from current space to connection space\n\t\tfor (let i = myPath.length - 1; i > connectionSpaceIndex; i--) {\n\t\t\tcoords = myPath[i].toBase(coords);\n\t\t}\n\n\t\t// Go down from connection space to target space\n\t\tfor (let i = connectionSpaceIndex + 1; i < otherPath.length; i++) {\n\t\t\tcoords = otherPath[i].fromBase(coords);\n\t\t}\n\n\t\treturn coords;\n\t}\n\n\tfrom (space, coords) {\n\t\tif (arguments.length === 1) {\n\t\t\t[space, coords] = [space.space, space.coords];\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\treturn space.to(this, coords);\n\t}\n\n\ttoString () {\n\t\treturn `${this.name} (${this.id})`;\n\t}\n\n\tgetMinCoords () {\n\t\tlet ret = [];\n\n\t\tfor (let id in this.coords) {\n\t\t\tlet meta = this.coords[id];\n\t\t\tlet range = meta.range || meta.refRange;\n\t\t\tret.push(range?.min ?? 0);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tstatic registry = {};\n\n\t// Returns array of unique color spaces\n\tstatic get all () {\n\t\treturn [...new Set(Object.values(ColorSpace.registry))];\n\t}\n\n\tstatic register (id, space) {\n\t\tif (arguments.length === 1) {\n\t\t\tspace = arguments[0];\n\t\t\tid = space.id;\n\t\t}\n\n\t\tspace = this.get(space);\n\n\t\tif (this.registry[id] && this.registry[id] !== space) {\n\t\t\tthrow new Error(`Duplicate color space registration: '${id}'`);\n\t\t}\n\t\tthis.registry[id] = space;\n\n\t\t// Register aliases when called without an explicit ID.\n\t\tif (arguments.length === 1 && space.aliases) {\n\t\t\tfor (let alias of space.aliases) {\n\t\t\t\tthis.register(alias, space);\n\t\t\t}\n\t\t}\n\n\t\treturn space;\n\t}\n\n\t/**\n\t * Lookup ColorSpace object by name\n\t * @param {ColorSpace | string} name\n\t */\n\tstatic get (space, ...alternatives) {\n\t\tif (!space || space instanceof ColorSpace) {\n\t\t\treturn space;\n\t\t}\n\n\t\tlet argType = type(space);\n\n\t\tif (argType === \"string\") {\n\t\t\t// It's a color space id\n\t\t\tlet ret = ColorSpace.registry[space.toLowerCase()];\n\n\t\t\tif (!ret) {\n\t\t\t\tthrow new TypeError(`No color space found with id = \"${space}\"`);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (alternatives.length) {\n\t\t\treturn ColorSpace.get(...alternatives);\n\t\t}\n\n\t\tthrow new TypeError(`${space} is not a valid color space`);\n\t}\n\n\t/**\n\t * Get metadata about a coordinate of a color space\n\t *\n\t * @static\n\t * @param {Array | string} ref\n\t * @param {ColorSpace | string} [workingSpace]\n\t * @return {Object}\n\t */\n\tstatic resolveCoord (ref, workingSpace) {\n\t\tlet coordType = type(ref);\n\t\tlet space, coord;\n\n\t\tif (coordType === \"string\") {\n\t\t\tif (ref.includes(\".\")) {\n\t\t\t\t// Absolute coordinate\n\t\t\t\t[space, coord] = ref.split(\".\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Relative coordinate\n\t\t\t\t[space, coord] = [, ref];\n\t\t\t}\n\t\t}\n\t\telse if (Array.isArray(ref)) {\n\t\t\t[space, coord] = ref;\n\t\t}\n\t\telse {\n\t\t\t// Object\n\t\t\tspace = ref.space;\n\t\t\tcoord = ref.coordId;\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tif (!space) {\n\t\t\tspace = workingSpace;\n\t\t}\n\n\t\tif (!space) {\n\t\t\tthrow new TypeError(`Cannot resolve coordinate reference ${ref}: No color space specified and relative references are not allowed here`);\n\t\t}\n\n\t\tcoordType = type(coord);\n\n\t\tif (coordType === \"number\" || coordType === \"string\" && coord >= 0) {\n\t\t\t// Resolve numerical coord\n\t\t\tlet meta = Object.entries(space.coords)[coord];\n\n\t\t\tif (meta) {\n\t\t\t\treturn {space, id: meta[0], index: coord, ...meta[1]};\n\t\t\t}\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tlet normalizedCoord = coord.toLowerCase();\n\n\t\tlet i = 0;\n\t\tfor (let id in space.coords) {\n\t\t\tlet meta = space.coords[id];\n\n\t\t\tif (id.toLowerCase() === normalizedCoord || meta.name?.toLowerCase() === normalizedCoord) {\n\t\t\t\treturn {space, id, index: i, ...meta};\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\tthrow new TypeError(`No \"${coord}\" coordinate found in ${space.name}. Its coordinates are: ${Object.keys(space.coords).join(\", \")}`);\n\t}\n\n\tstatic DEFAULT_FORMAT = {\n\t\ttype: \"functions\",\n\t\tname: \"color\",\n\t};\n}\n\nvar XYZ_D65 = new ColorSpace({\n\tid: \"xyz-d65\",\n\tname: \"XYZ D65\",\n\tcoords: {\n\t\tx: {name: \"X\"},\n\t\ty: {name: \"Y\"},\n\t\tz: {name: \"Z\"},\n\t},\n\twhite: \"D65\",\n\tformats: {\n\t\tcolor: {\n\t\t\tids: [\"xyz-d65\", \"xyz\"],\n\t\t}\n\t},\n\taliases: [\"xyz\"],\n});\n\n/**\n * Convenience class for RGB color spaces\n * @extends {ColorSpace}\n */\nclass RGBColorSpace extends ColorSpace {\n\t/**\n\t * Creates a new RGB ColorSpace.\n\t * If coords are not specified, they will use the default RGB coords.\n\t * Instead of `fromBase()` and `toBase()` functions,\n\t * you can specify to/from XYZ matrices and have `toBase()` and `fromBase()` automatically generated.\n\t * @param {*} options - Same options as {@link ColorSpace} plus:\n\t * @param {number[][]} options.toXYZ_M - Matrix to convert to XYZ\n\t * @param {number[][]} options.fromXYZ_M - Matrix to convert from XYZ\n\t */\n\tconstructor (options) {\n\t\tif (!options.coords) {\n\t\t\toptions.coords = {\n\t\t\t\tr: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Red\"\n\t\t\t\t},\n\t\t\t\tg: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Green\"\n\t\t\t\t},\n\t\t\t\tb: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Blue\"\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (!options.base) {\n\t\t\toptions.base = XYZ_D65;\n\t\t}\n\n\t\tif (options.toXYZ_M && options.fromXYZ_M) {\n\t\t\toptions.toBase ??= rgb => {\n\t\t\t\tlet xyz = multiplyMatrices(options.toXYZ_M, rgb);\n\n\t\t\t\tif (this.white !== this.base.white) {\n\t\t\t\t\t// Perform chromatic adaptation\n\t\t\t\t\txyz = adapt$1(this.white, this.base.white, xyz);\n\t\t\t\t}\n\n\t\t\t\treturn xyz;\n\t\t\t};\n\n\t\t\toptions.fromBase ??= xyz => {\n\t\t\t\txyz = adapt$1(this.base.white, this.white, xyz);\n\t\t\t\treturn multiplyMatrices(options.fromXYZ_M, xyz);\n\t\t\t};\n\t\t}\n\n\t\toptions.referred ??= \"display\";\n\n\t\tsuper(options);\n\t}\n}\n\n// CSS color to Color object\nfunction parse (str) {\n\tlet env = {\"str\": String(str)?.trim()};\n\thooks.run(\"parse-start\", env);\n\n\tif (env.color) {\n\t\treturn env.color;\n\t}\n\n\tenv.parsed = parseFunction(env.str);\n\n\tif (env.parsed) {\n\t\t// Is a functional syntax\n\t\tlet name = env.parsed.name;\n\n\t\tif (name === \"color\") {\n\t\t\t// color() function\n\t\t\tlet id = env.parsed.args.shift();\n\t\t\tlet alpha = env.parsed.rawArgs.indexOf(\"/\") > 0? env.parsed.args.pop() : 1;\n\n\t\t\tfor (let space of ColorSpace.all) {\n\t\t\t\tlet colorSpec = space.getFormat(\"color\");\n\n\t\t\t\tif (colorSpec) {\n\t\t\t\t\tif (id === colorSpec.id || colorSpec.ids?.includes(id)) {\n\t\t\t\t\t\t// From https://drafts.csswg.org/css-color-4/#color-function\n\t\t\t\t\t\t// If more <number>s or <percentage>s are provided than parameters that the colorspace takes, the excess <number>s at the end are ignored.\n\t\t\t\t\t\t// If less <number>s or <percentage>s are provided than parameters that the colorspace takes, the missing parameters default to 0. (This is particularly convenient for multichannel printers where the additional inks are spot colors or varnishes that most colors on the page won’t use.)\n\t\t\t\t\t\tlet argCount = Object.keys(space.coords).length;\n\t\t\t\t\t\tlet coords = Array(argCount).fill(0);\n\t\t\t\t\t\tcoords.forEach((_, i) => coords[i] = env.parsed.args[i] || 0);\n\n\t\t\t\t\t\treturn {spaceId: space.id, coords, alpha};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Not found\n\t\t\tlet didYouMean = \"\";\n\t\t\tif (id in ColorSpace.registry) {\n\t\t\t\t// Used color space id instead of color() id, these are often different\n\t\t\t\tlet cssId = ColorSpace.registry[id].formats?.functions?.color?.id;\n\n\t\t\t\tif (cssId) {\n\t\t\t\t\tdidYouMean = `Did you mean color(${cssId})?`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError(`Cannot parse color(${id}). ` + (didYouMean || \"Missing a plugin?\"));\n\t\t}\n\t\telse {\n\t\t\tfor (let space of ColorSpace.all) {\n\t\t\t\t// color space specific function\n\t\t\t\tlet format = space.getFormat(name);\n\t\t\t\tif (format && format.type === \"function\") {\n\t\t\t\t\tlet alpha = 1;\n\n\t\t\t\t\tif (format.lastAlpha || last(env.parsed.args).alpha) {\n\t\t\t\t\t\talpha = env.parsed.args.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\tlet coords = env.parsed.args;\n\n\t\t\t\t\tif (format.coordGrammar) {\n\t\t\t\t\t\tObject.entries(space.coords).forEach(([id, coordMeta], i) => {\n\t\t\t\t\t\t\tlet coordGrammar = format.coordGrammar[i];\n\t\t\t\t\t\t\tlet providedType = coords[i]?.type;\n\n\t\t\t\t\t\t\t// Find grammar alternative that matches the provided type\n\t\t\t\t\t\t\t// Non-strict equals is intentional because we are comparing w/ string objects\n\t\t\t\t\t\t\tcoordGrammar = coordGrammar.find(c => c == providedType);\n\n\t\t\t\t\t\t\t// Check that each coord conforms to its grammar\n\t\t\t\t\t\t\tif (!coordGrammar) {\n\t\t\t\t\t\t\t\t// Type does not exist in the grammar, throw\n\t\t\t\t\t\t\t\tlet coordName = coordMeta.name || id;\n\t\t\t\t\t\t\t\tthrow new TypeError(`${providedType} not allowed for ${coordName} in ${name}()`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet fromRange = coordGrammar.range;\n\n\t\t\t\t\t\t\tif (providedType === \"<percentage>\") {\n\t\t\t\t\t\t\t\tfromRange ||= [0, 1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet toRange = coordMeta.range || coordMeta.refRange;\n\n\t\t\t\t\t\t\tif (fromRange && toRange) {\n\n\t\t\t\t\t\t\t\tcoords[i] = mapRange(fromRange, toRange, coords[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tspaceId: space.id,\n\t\t\t\t\t\tcoords, alpha\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Custom, colorspace-specific format\n\t\tfor (let space of ColorSpace.all) {\n\n\t\t\tfor (let formatId in space.formats) {\n\t\t\t\tlet format = space.formats[formatId];\n\n\t\t\t\tif (format.type !== \"custom\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (format.test && !format.test(env.str)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet color = format.parse(env.str);\n\n\t\t\t\tif (color) {\n\t\t\t\t\tcolor.alpha ??= 1;\n\t\t\t\t\treturn color;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If we're here, we couldn't parse\n\tthrow new TypeError(`Could not parse ${str} as a color. Missing a plugin?`);\n}\n\n/**\n * Resolves a color reference (object or string) to a plain color object\n * @param {Color | {space, coords, alpha} | string} color\n * @returns {{space, coords, alpha}}\n */\nfunction getColor (color) {\n\tif (!color) {\n\t\tthrow new TypeError(\"Empty color reference\");\n\t}\n\n\tif (isString(color)) {\n\t\tcolor = parse(color);\n\t}\n\n\t// Object fixup\n\tlet space = color.space || color.spaceId;\n\n\tif (!(space instanceof ColorSpace)) {\n\t\t// Convert string id to color space object\n\t\tcolor.space = ColorSpace.get(space);\n\t}\n\n\tif (color.alpha === undefined) {\n\t\tcolor.alpha = 1;\n\t}\n\n\treturn color;\n}\n\n/**\n * Get the coordinates of a color in another color space\n *\n * @param {string | ColorSpace} space\n * @returns {number[]}\n */\nfunction getAll (color, space) {\n\tspace = ColorSpace.get(space);\n\treturn space.from(color);\n}\n\nfunction get (color, prop) {\n\tlet {space, index} = ColorSpace.resolveCoord(prop, color.space);\n\tlet coords = getAll(color, space);\n\treturn coords[index];\n}\n\nfunction setAll (color, space, coords) {\n\tspace = ColorSpace.get(space);\n\tcolor.coords = space.to(color.space, coords);\n\treturn color;\n}\n\n// Set properties and return current instance\nfunction set (color, prop, value) {\n\tcolor = getColor(color);\n\n\tif (arguments.length === 2 && type(arguments[1]) === \"object\") {\n\t\t// Argument is an object literal\n\t\tlet object = arguments[1];\n\t\tfor (let p in object) {\n\t\t\tset(color, p, object[p]);\n\t\t}\n\t}\n\telse {\n\t\tif (typeof value === \"function\") {\n\t\t\tvalue = value(get(color, prop));\n\t\t}\n\n\t\tlet {space, index} = ColorSpace.resolveCoord(prop, color.space);\n\t\tlet coords = getAll(color, space);\n\t\tcoords[index] = value;\n\t\tsetAll(color, space, coords);\n\t}\n\n\treturn color;\n}\n\nvar XYZ_D50 = new ColorSpace({\n\tid: \"xyz-d50\",\n\tname: \"XYZ D50\",\n\twhite: \"D50\",\n\tbase: XYZ_D65,\n\tfromBase: coords => adapt$1(XYZ_D65.white, \"D50\", coords),\n\ttoBase: coords => adapt$1(\"D50\", XYZ_D65.white, coords),\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\n// κ * ε  = 2^3 = 8\nconst ε$3 = 216/24389;  // 6^3/29^3 == (24/116)^3\nconst ε3$1 = 24/116;\nconst κ$1 = 24389/27;   // 29^3/3^3\n\nlet white$1 = WHITES.D50;\n\nvar lab = new ColorSpace({\n\tid: \"lab\",\n\tname: \"Lab\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"L\"\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-125, 125]\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-125, 125]\n\t\t}\n\t},\n\n\t// Assuming XYZ is relative to D50, convert to CIE Lab\n\t// from CIE standard, which now defines these as a rational fraction\n\twhite: white$1,\n\n\tbase: XYZ_D50,\n\t// Convert D50-adapted XYX to Lab\n\t//  CIE 15.3:2004 section 8.2.1.1\n\tfromBase (XYZ) {\n\t\t// compute xyz, which is XYZ scaled relative to reference white\n\t\tlet xyz = XYZ.map((value, i) => value / white$1[i]);\n\n\t\t// now compute f\n\t\tlet f = xyz.map(value => value > ε$3 ? Math.cbrt(value) : (κ$1 * value + 16)/116);\n\n\t\treturn [\n\t\t\t(116 * f[1]) - 16, \t // L\n\t\t\t500 * (f[0] - f[1]), // a\n\t\t\t200 * (f[1] - f[2])  // b\n\t\t];\n\t},\n\t// Convert Lab to D50-adapted XYZ\n\t// Same result as CIE 15.3:2004 Appendix D although the derivation is different\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\ttoBase (Lab) {\n\t\t// compute f, starting with the luminance-related term\n\t\tlet f = [];\n\t\tf[1] = (Lab[0] + 16)/116;\n\t\tf[0] = Lab[1]/500 + f[1];\n\t\tf[2] = f[1] - Lab[2]/200;\n\n\t\t// compute xyz\n\t\tlet xyz = [\n\t\t\tf[0]   > ε3$1  ?  Math.pow(f[0], 3)            : (116*f[0]-16)/κ$1,\n\t\t\tLab[0] > 8   ?  Math.pow((Lab[0]+16)/116, 3) : Lab[0]/κ$1,\n\t\t\tf[2]   > ε3$1  ?  Math.pow(f[2], 3)            : (116*f[2]-16)/κ$1\n\t\t];\n\n\t\t// Compute XYZ by scaling xyz by reference white\n\t\treturn xyz.map((value, i) => value * white$1[i]);\n\t},\n\n\tformats: {\n\t\t\"lab\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number>\", \"<number>\"],\n\t\t}\n\t}\n});\n\nfunction constrain (angle) {\n\treturn ((angle % 360) + 360) % 360;\n}\n\nfunction adjust (arc, angles) {\n\tif (arc === \"raw\") {\n\t\treturn angles;\n\t}\n\n\tlet [a1, a2] = angles.map(constrain);\n\n\tlet angleDiff = a2 - a1;\n\n\tif (arc === \"increasing\") {\n\t\tif (angleDiff < 0) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\telse if (arc === \"decreasing\") {\n\t\tif (angleDiff > 0) {\n\t\t\ta1 += 360;\n\t\t}\n\t}\n\telse if (arc === \"longer\") {\n\t\tif (-180 < angleDiff && angleDiff < 180) {\n\t\t\tif (angleDiff > 0) {\n\t\t\t\ta2 += 360;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ta1 += 360;\n\t\t\t}\n\t\t}\n\t}\n\telse if (arc === \"shorter\") {\n\t\tif (angleDiff > 180) {\n\t\t\ta1 += 360;\n\t\t}\n\t\telse if (angleDiff < -180) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\n\treturn [a1, a2];\n}\n\nvar lch = new ColorSpace({\n\tid: \"lch\",\n\tname: \"LCH\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Lightness\"\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 150],\n\t\t\tname: \"Chroma\"\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t}\n\t},\n\n\tbase: lab,\n\tfromBase (Lab) {\n\t\t// Convert to polar form\n\t\tlet [L, a, b] = Lab;\n\t\tlet hue;\n\t\tconst ε = 0.02;\n\n\t\tif (Math.abs(a) < ε && Math.abs(b) < ε) {\n\t\t\thue = NaN;\n\t\t}\n\t\telse {\n\t\t\thue = Math.atan2(b, a) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tL, // L is still L\n\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\tconstrain(hue) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\ttoBase (LCH) {\n\t\t// Convert from polar form\n\t\tlet [Lightness, Chroma, Hue] = LCH;\n\t\t// Clamp any negative Chroma\n\t\tif (Chroma < 0) {\n\t\t\tChroma = 0;\n\t\t}\t\t// Deal with NaN Hue\n\t\tif (isNaN(Hue)) {\n\t\t\tHue = 0;\n\t\t}\n\t\treturn [\n\t\t\tLightness, // L is still L\n\t\t\tChroma * Math.cos(Hue * Math.PI / 180), // a\n\t\t\tChroma * Math.sin(Hue * Math.PI / 180)  // b\n\t\t];\n\t},\n\n\tformats: {\n\t\t\"lch\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number>\", \"<number> | <angle>\"],\n\t\t}\n\t}\n});\n\n// deltaE2000 is a statistically significant improvement\n// and is recommended by the CIE and Idealliance\n// especially for color differences less than 10 deltaE76\n// but is wicked complicated\n// and many implementations have small errors!\n// DeltaE2000 is also discontinuous; in case this\n// matters to you, use deltaECMC instead.\n\nconst Gfactor = 25 ** 7;\nconst π$1 = Math.PI;\nconst r2d = 180 / π$1;\nconst d2r$1 = π$1 / 180;\n\nfunction deltaE2000 (color, sample, {kL = 1, kC = 1, kH = 1} = {}) {\n\t// Given this color as the reference\n\t// and the function parameter as the sample,\n\t// calculate deltaE 2000.\n\n\t// This implementation assumes the parametric\n\t// weighting factors kL, kC and kH\n\t// for the influence of viewing conditions\n\t// are all 1, as sadly seems typical.\n\t// kL should be increased for lightness texture or noise\n\t// and kC increased for chroma noise\n\n\tlet [L1, a1, b1] = lab.from(color);\n\tlet C1 = lch.from(lab, [L1, a1, b1])[1];\n\tlet [L2, a2, b2] = lab.from(sample);\n\tlet C2 = lch.from(lab, [L2, a2, b2])[1];\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\tlet Cbar = (C1 + C2)/2; // mean Chroma\n\n\t// calculate a-axis asymmetry factor from mean Chroma\n\t// this turns JND ellipses for near-neutral colors back into circles\n\tlet C7 = Cbar ** 7;\n\n\tlet G = 0.5 * (1 - Math.sqrt(C7/(C7 + Gfactor)));\n\n\t// scale a axes by asymmetry factor\n\t// this by the way is why there is no Lab2000 colorspace\n\tlet adash1 = (1 + G) * a1;\n\tlet adash2 = (1 + G) * a2;\n\n\t// calculate new Chroma from scaled a and original b axes\n\tlet Cdash1 = Math.sqrt(adash1 ** 2 + b1 ** 2);\n\tlet Cdash2 = Math.sqrt(adash2 ** 2 + b2 ** 2);\n\n\t// calculate new hues, with zero hue for true neutrals\n\t// and in degrees, not radians\n\n\tlet h1 = (adash1 === 0 && b1 === 0)? 0: Math.atan2(b1, adash1);\n\tlet h2 = (adash2 === 0 && b2 === 0)? 0: Math.atan2(b2, adash2);\n\n\tif (h1 < 0) {\n\t\th1 += 2 * π$1;\n\t}\n\tif (h2 < 0) {\n\t\th2 += 2 * π$1;\n\t}\n\n\th1 *= r2d;\n\th2 *= r2d;\n\n\t// Lightness and Chroma differences; sign matters\n\tlet ΔL = L2 - L1;\n\tlet ΔC = Cdash2 - Cdash1;\n\n\t// Hue difference, getting the sign correct\n\tlet hdiff = h2 - h1;\n\tlet hsum = h1 + h2;\n\tlet habs = Math.abs(hdiff);\n\tlet Δh;\n\n\tif (Cdash1 * Cdash2 === 0) {\n\t\tΔh = 0;\n\t}\n\telse if (habs <= 180) {\n\t\tΔh = hdiff;\n\t}\n\telse if (hdiff > 180) {\n\t\tΔh = hdiff - 360;\n\t}\n\telse if (hdiff < -180) {\n\t\tΔh = hdiff + 360;\n\t}\n\telse {\n\t\tconsole.log(\"the unthinkable has happened\");\n\t}\n\n\t// weighted Hue difference, more for larger Chroma\n\tlet ΔH = 2 * Math.sqrt(Cdash2 * Cdash1) * Math.sin(Δh * d2r$1 / 2);\n\n\t// calculate mean Lightness and Chroma\n\tlet Ldash = (L1 + L2)/2;\n\tlet Cdash = (Cdash1 + Cdash2)/2;\n\tlet Cdash7 = Math.pow(Cdash, 7);\n\n\t// Compensate for non-linearity in the blue region of Lab.\n\t// Four possibilities for hue weighting factor,\n\t// depending on the angles, to get the correct sign\n\tlet hdash;\n\tif (Cdash1 * Cdash2 === 0) {\n\t\thdash = hsum;   // which should be zero\n\t}\n\telse if (habs <= 180) {\n\t\thdash = hsum / 2;\n\t}\n\telse if (hsum < 360) {\n\t\thdash = (hsum + 360) / 2;\n\t}\n\telse {\n\t\thdash = (hsum - 360) / 2;\n\t}\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor\n\t// a background with L=50 is assumed\n\tlet lsq = (Ldash - 50) ** 2;\n\tlet SL = 1 + ((0.015 * lsq) / Math.sqrt(20 + lsq));\n\n\t// SC Chroma factor, similar to those in CMC and deltaE 94 formulae\n\tlet SC = 1 + 0.045 * Cdash;\n\n\t// Cross term T for blue non-linearity\n\tlet T = 1;\n\tT -= (0.17 * Math.cos((     hdash - 30)  * d2r$1));\n\tT += (0.24 * Math.cos(  2 * hdash        * d2r$1));\n\tT += (0.32 * Math.cos(((3 * hdash) + 6)  * d2r$1));\n\tT -= (0.20 * Math.cos(((4 * hdash) - 63) * d2r$1));\n\n\t// SH Hue factor depends on Chroma,\n\t// as well as adjusted hue angle like deltaE94.\n\tlet SH = 1 + 0.015 * Cdash * T;\n\n\t// RT Hue rotation term compensates for rotation of JND ellipses\n\t// and Munsell constant hue lines\n\t// in the medium-high Chroma blue region\n\t// (Hue 225 to 315)\n\tlet Δθ = 30 * Math.exp(-1 * (((hdash - 275)/25) ** 2));\n\tlet RC = 2 * Math.sqrt(Cdash7/(Cdash7 + Gfactor));\n\tlet RT = -1 * Math.sin(2 * Δθ * d2r$1) * RC;\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ΔL / (kL * SL)) ** 2;\n\tdE += (ΔC / (kC * SC)) ** 2;\n\tdE += (ΔH / (kH * SH)) ** 2;\n\tdE += RT * (ΔC / (kC * SC)) * (ΔH / (kH * SH));\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n}\n\nconst ε$2 = .000075;\n\n/**\n * Check if a color is in gamut of either its own or another color space\n * @return {Boolean} Is the color in gamut?\n */\nfunction inGamut (color, space = color.space, {epsilon = ε$2} = {}) {\n\tcolor = getColor(color);\n\tspace = ColorSpace.get(space);\n\tlet coords = color.coords;\n\n\tif (space !== color.space) {\n\t\tcoords = space.from(color);\n\t}\n\n\treturn space.inGamut(coords, {epsilon});\n}\n\nfunction clone (color) {\n\treturn {\n\t\tspace: color.space,\n\t\tcoords: color.coords.slice(),\n\t\talpha: color.alpha\n\t};\n}\n\n/**\n * Force coordinates to be in gamut of a certain color space.\n * Mutates the color it is passed.\n * @param {Object} options\n * @param {string} options.method - How to force into gamut.\n *        If \"clip\", coordinates are just clipped to their reference range.\n *        If in the form [colorSpaceId].[coordName], that coordinate is reduced\n *        until the color is in gamut. Please note that this may produce nonsensical\n *        results for certain coordinates (e.g. hue) or infinite loops if reducing the coordinate never brings the color in gamut.\n * @param {ColorSpace|string} options.space - The space whose gamut we want to map to\n */\nfunction toGamut (color, {method = defaults.gamut_mapping, space = color.space} = {}) {\n\tif (isString(arguments[1])) {\n\t\tspace = arguments[1];\n\t}\n\n\tspace = ColorSpace.get(space);\n\n\tif (inGamut(color, space, {epsilon: 0})) {\n\t\treturn color;\n\t}\n\n\t// 3 spaces:\n\t// color.space: current color space\n\t// space: space whose gamut we are mapping to\n\t// mapSpace: space with the coord we're reducing\n\tlet spaceColor = to(color, space);\n\n\tif (method !== \"clip\" && !inGamut(color, space)) {\n\t\tlet clipped = toGamut(clone(spaceColor), {method: \"clip\", space});\n\t\tif (deltaE2000(color, clipped) > 2) {\n\t\t\t// Reduce a coordinate of a certain color space until the color is in gamut\n\t\t\tlet coordMeta = ColorSpace.resolveCoord(method);\n\t\t\tlet mapSpace = coordMeta.space;\n\t\t\tlet coordId = coordMeta.id;\n\n\t\t\tlet mappedColor = to(spaceColor, mapSpace);\n\t\t\tlet bounds = coordMeta.range || coordMeta.refRange;\n\t\t\tlet min = bounds[0];\n\t\t\tlet ε = .01; // for deltaE\n\t\t\tlet low = min;\n\t\t\tlet high = get(mappedColor, coordId);\n\n\t\t\twhile (high - low > ε) {\n\t\t\t\tlet clipped = clone(mappedColor);\n\t\t\t\tclipped = toGamut(clipped, {space, method: \"clip\"});\n\t\t\t\tlet deltaE = deltaE2000(mappedColor, clipped);\n\n\t\t\t\tif (deltaE - 2 < ε) {\n\t\t\t\t\tlow = get(mappedColor, coordId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thigh = get(mappedColor, coordId);\n\t\t\t\t}\n\n\t\t\t\tset(mappedColor, coordId, (low + high) / 2);\n\t\t\t}\n\n\t\t\tspaceColor = to(mappedColor, space);\n\t\t}\n\t\telse {\n\t\t\tspaceColor = clipped;\n\t\t}\n\t}\n\n\tif (method === \"clip\" // Dumb coord clipping\n\t\t// finish off smarter gamut mapping with clip to get rid of ε, see #17\n\t\t|| !inGamut(spaceColor, space, {epsilon: 0})\n\t) {\n\t\tlet bounds = Object.values(space.coords).map(c => c.range || []);\n\n\t\tspaceColor.coords = spaceColor.coords.map((c, i) => {\n\t\t\tlet [min, max] = bounds[i];\n\n\t\t\tif (min !== undefined) {\n\t\t\t\tc = Math.max(min, c);\n\t\t\t}\n\n\t\t\tif (max !== undefined) {\n\t\t\t\tc = Math.min(c, max);\n\t\t\t}\n\n\t\t\treturn c;\n\t\t});\n\t}\n\n\tif (space !== color.space) {\n\t\tspaceColor = to(spaceColor, color.space);\n\t}\n\n\tcolor.coords = spaceColor.coords;\n\treturn color;\n}\n\ntoGamut.returns = \"color\";\n\n/**\n * Convert to color space and return a new color\n * @param {Object|string} space - Color space object or id\n * @param {Object} options\n * @param {boolean} options.inGamut - Whether to force resulting color in gamut\n * @returns {Color}\n */\nfunction to (color, space, {inGamut} = {}) {\n\tcolor = getColor(color);\n\tspace = ColorSpace.get(space);\n\n\tlet coords = space.from(color);\n\tlet ret = {space, coords, alpha: color.alpha};\n\n\tif (inGamut) {\n\t\tret = toGamut(ret);\n\t}\n\n\treturn ret;\n}\n\nto.returns = \"color\";\n\n/**\n * Generic toString() method, outputs a color(spaceId ...coords) function, a functional syntax, or custom formats defined by the color space\n * @param {Object} options\n * @param {number} options.precision - Significant digits\n * @param {boolean} options.inGamut - Adjust coordinates to fit in gamut first? [default: false]\n */\nfunction serialize (color, {\n\tprecision = defaults.precision,\n\tformat = \"default\",\n\tinGamut: inGamut$1 = true,\n\t...customOptions\n} = {}) {\n\tlet ret;\n\n\tcolor = getColor(color);\n\n\tlet formatId = format;\n\tformat = color.space.getFormat(format)\n\t\t   ?? color.space.getFormat(\"default\")\n\t\t   ?? ColorSpace.DEFAULT_FORMAT;\n\n\tinGamut$1 ||= format.toGamut;\n\n\tlet coords = color.coords;\n\n\t// Convert NaN to zeros to have a chance at a valid CSS color\n\t// Also convert -0 to 0\n\t// This also clones it so we can manipulate it\n\tcoords = coords.map(c => c? c : 0);\n\n\tif (inGamut$1 && !inGamut(color)) {\n\t\tcoords = toGamut(clone(color), inGamut$1 === true? undefined : inGamut$1).coords;\n\t}\n\n\tif (format.type === \"custom\") {\n\t\tcustomOptions.precision = precision;\n\n\t\tif (format.serialize) {\n\t\t\tret = format.serialize(coords, color.alpha, customOptions);\n\t\t}\n\t\telse {\n\t\t\tthrow new TypeError(`format ${formatId} can only be used to parse colors, not for serialization`);\n\t\t}\n\t}\n\telse {\n\t\t// Functional syntax\n\t\tlet name = format.name || \"color\";\n\n\t\tif (format.serializeCoords) {\n\t\t\tcoords = format.serializeCoords(coords, precision);\n\t\t}\n\t\telse {\n\t\t\tif (precision !== null) {\n\t\t\t\tcoords = coords.map(c => toPrecision(c, precision));\n\t\t\t}\n\t\t}\n\n\t\tlet args = [...coords];\n\n\t\tif (name === \"color\") {\n\t\t\t// If output is a color() function, add colorspace id as first argument\n\t\t\tlet cssId = format.id || format.ids?.[0] || color.space.id;\n\t\t\targs.unshift(cssId);\n\t\t}\n\n\t\tlet alpha = color.alpha;\n\t\tif (precision !== null) {\n\t\t\talpha = toPrecision(alpha, precision);\n\t\t}\n\n\t\tlet strAlpha = color.alpha < 1 && !format.noAlpha? `${format.commas? \",\" : \" /\"} ${alpha}` : \"\";\n\t\tret = `${name}(${args.join(format.commas? \", \" : \" \")}${strAlpha})`;\n\t}\n\n\treturn ret;\n}\n\n// convert an array of linear-light rec2020 values to CIE XYZ\n// using  D65 (no chromatic adaptation)\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// 0 is actually calculated as  4.994106574466076e-17\nconst toXYZ_M$5 = [\n\t[ 0.6369580483012914, 0.14461690358620832,  0.1688809751641721  ],\n\t[ 0.2627002120112671, 0.6779980715188708,   0.05930171646986196 ],\n\t[ 0.000000000000000,  0.028072693049087428, 1.060985057710791   ]\n];\n\n// from ITU-R BT.2124-0 Annex 2 p.3\nconst fromXYZ_M$5 = [\n\t[  1.716651187971268,  -0.355670783776392, -0.253366281373660  ],\n\t[ -0.666684351832489,   1.616481236634939,  0.0157685458139111 ],\n\t[  0.017639857445311,  -0.042770613257809,  0.942103121235474  ]\n];\n\nvar REC2020Linear = new RGBColorSpace({\n\tid: \"rec2020-linear\",\n\tname: \"Linear REC.2020\",\n\twhite: \"D65\",\n\ttoXYZ_M: toXYZ_M$5,\n\tfromXYZ_M: fromXYZ_M$5,\n\tformats: {\n\t\tcolor: {},\n\t}\n});\n\n// import sRGB from \"./srgb.js\";\n\nconst α = 1.09929682680944;\nconst β = 0.018053968510807;\n\nvar REC2020 = new RGBColorSpace({\n\tid: \"rec2020\",\n\tname: \"REC.2020\",\n\tbase: REC2020Linear,\n\t// Non-linear transfer function from Rec. ITU-R BT.2020-2 table 4\n\ttoBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val < β * 4.5 ) {\n\t\t\t\treturn val / 4.5;\n\t\t\t}\n\n\t\t\treturn Math.pow((val + α -1 ) / α, 1/0.45);\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val >= β ) {\n\t\t\t\treturn α * Math.pow(val, 0.45) - (α - 1);\n\t\t\t}\n\n\t\t\treturn 4.5 * val;\n\t\t});\n\t},\n\tformats: {\n\t\tcolor: {},\n\t}\n});\n\nconst toXYZ_M$4 = [\n\t[0.4865709486482162, 0.26566769316909306, 0.1982172852343625],\n\t[0.2289745640697488, 0.6917385218365064,  0.079286914093745],\n\t[0.0000000000000000, 0.04511338185890264, 1.043944368900976]\n];\n\nconst fromXYZ_M$4 = [\n\t[ 2.493496911941425,   -0.9313836179191239, -0.40271078445071684],\n\t[-0.8294889695615747,   1.7626640603183463,  0.023624685841943577],\n\t[ 0.03584583024378447, -0.07617238926804182, 0.9568845240076872]\n];\n\nvar P3Linear = new RGBColorSpace({\n\tid: \"p3-linear\",\n\tname: \"Linear P3\",\n\twhite: \"D65\",\n\ttoXYZ_M: toXYZ_M$4,\n\tfromXYZ_M: fromXYZ_M$4\n});\n\n// This is the linear-light version of sRGB\n// as used for example in SVG filters\n// or in Canvas\n\n// This matrix was calculated directly from the RGB and white chromaticities\n// when rounded to 8 decimal places, it agrees completely with the official matrix\n// see https://github.com/w3c/csswg-drafts/issues/5922\nconst toXYZ_M$3 = [\n\t[ 0.41239079926595934, 0.357584339383878,   0.1804807884018343  ],\n\t[ 0.21263900587151027, 0.715168678767756,   0.07219231536073371 ],\n\t[ 0.01933081871559182, 0.11919477979462598, 0.9505321522496607  ]\n];\n\n// This matrix is the inverse of the above;\n// again it agrees with the official definition when rounded to 8 decimal places\nconst fromXYZ_M$3 = [\n\t[  3.2409699419045226,  -1.537383177570094,   -0.4986107602930034  ],\n\t[ -0.9692436362808796,   1.8759675015077202,   0.04155505740717559 ],\n\t[  0.05563007969699366, -0.20397695888897652,  1.0569715142428786  ]\n];\n\nvar sRGBLinear = new RGBColorSpace({\n\tid: \"srgb-linear\",\n\tname: \"Linear sRGB\",\n\twhite: \"D65\",\n\ttoXYZ_M: toXYZ_M$3,\n\tfromXYZ_M: fromXYZ_M$3,\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\n/* List of CSS color keywords\n * Note that this does not include currentColor, transparent,\n * or system colors\n */\n\n// To produce: Visit https://www.w3.org/TR/css-color-4/#named-colors\n// and run in the console:\n// copy($$(\"tr\", $(\".named-color-table tbody\")).map(tr => `\"${tr.cells[2].textContent.trim()}\": [${tr.cells[4].textContent.trim().split(/\\s+/).map(c => c === \"0\"? \"0\" : c === \"255\"? \"1\" : c + \" / 255\").join(\", \")}]`).join(\",\\n\"))\nvar KEYWORDS = {\n\t\"aliceblue\": [240 / 255, 248 / 255, 1],\n\t\"antiquewhite\": [250 / 255, 235 / 255, 215 / 255],\n\t\"aqua\": [0, 1, 1],\n\t\"aquamarine\": [127 / 255, 1, 212 / 255],\n\t\"azure\": [240 / 255, 1, 1],\n\t\"beige\": [245 / 255, 245 / 255, 220 / 255],\n\t\"bisque\": [1, 228 / 255, 196 / 255],\n\t\"black\": [0, 0, 0],\n\t\"blanchedalmond\": [1, 235 / 255, 205 / 255],\n\t\"blue\": [0, 0, 1],\n\t\"blueviolet\": [138 / 255, 43 / 255, 226 / 255],\n\t\"brown\": [165 / 255, 42 / 255, 42 / 255],\n\t\"burlywood\": [222 / 255, 184 / 255, 135 / 255],\n\t\"cadetblue\": [95 / 255, 158 / 255, 160 / 255],\n\t\"chartreuse\": [127 / 255, 1, 0],\n\t\"chocolate\": [210 / 255, 105 / 255, 30 / 255],\n\t\"coral\": [1, 127 / 255, 80 / 255],\n\t\"cornflowerblue\": [100 / 255, 149 / 255, 237 / 255],\n\t\"cornsilk\": [1, 248 / 255, 220 / 255],\n\t\"crimson\": [220 / 255, 20 / 255, 60 / 255],\n\t\"cyan\": [0, 1, 1],\n\t\"darkblue\": [0, 0, 139 / 255],\n\t\"darkcyan\": [0, 139 / 255, 139 / 255],\n\t\"darkgoldenrod\": [184 / 255, 134 / 255, 11 / 255],\n\t\"darkgray\": [169 / 255, 169 / 255, 169 / 255],\n\t\"darkgreen\": [0, 100 / 255, 0],\n\t\"darkgrey\": [169 / 255, 169 / 255, 169 / 255],\n\t\"darkkhaki\": [189 / 255, 183 / 255, 107 / 255],\n\t\"darkmagenta\": [139 / 255, 0, 139 / 255],\n\t\"darkolivegreen\": [85 / 255, 107 / 255, 47 / 255],\n\t\"darkorange\": [1, 140 / 255, 0],\n\t\"darkorchid\": [153 / 255, 50 / 255, 204 / 255],\n\t\"darkred\": [139 / 255, 0, 0],\n\t\"darksalmon\": [233 / 255, 150 / 255, 122 / 255],\n\t\"darkseagreen\": [143 / 255, 188 / 255, 143 / 255],\n\t\"darkslateblue\": [72 / 255, 61 / 255, 139 / 255],\n\t\"darkslategray\": [47 / 255, 79 / 255, 79 / 255],\n\t\"darkslategrey\": [47 / 255, 79 / 255, 79 / 255],\n\t\"darkturquoise\": [0, 206 / 255, 209 / 255],\n\t\"darkviolet\": [148 / 255, 0, 211 / 255],\n\t\"deeppink\": [1, 20 / 255, 147 / 255],\n\t\"deepskyblue\": [0, 191 / 255, 1],\n\t\"dimgray\": [105 / 255, 105 / 255, 105 / 255],\n\t\"dimgrey\": [105 / 255, 105 / 255, 105 / 255],\n\t\"dodgerblue\": [30 / 255, 144 / 255, 1],\n\t\"firebrick\": [178 / 255, 34 / 255, 34 / 255],\n\t\"floralwhite\": [1, 250 / 255, 240 / 255],\n\t\"forestgreen\": [34 / 255, 139 / 255, 34 / 255],\n\t\"fuchsia\": [1, 0, 1],\n\t\"gainsboro\": [220 / 255, 220 / 255, 220 / 255],\n\t\"ghostwhite\": [248 / 255, 248 / 255, 1],\n\t\"gold\": [1, 215 / 255, 0],\n\t\"goldenrod\": [218 / 255, 165 / 255, 32 / 255],\n\t\"gray\": [128 / 255, 128 / 255, 128 / 255],\n\t\"green\": [0, 128 / 255, 0],\n\t\"greenyellow\": [173 / 255, 1, 47 / 255],\n\t\"grey\": [128 / 255, 128 / 255, 128 / 255],\n\t\"honeydew\": [240 / 255, 1, 240 / 255],\n\t\"hotpink\": [1, 105 / 255, 180 / 255],\n\t\"indianred\": [205 / 255, 92 / 255, 92 / 255],\n\t\"indigo\": [75 / 255, 0, 130 / 255],\n\t\"ivory\": [1, 1, 240 / 255],\n\t\"khaki\": [240 / 255, 230 / 255, 140 / 255],\n\t\"lavender\": [230 / 255, 230 / 255, 250 / 255],\n\t\"lavenderblush\": [1, 240 / 255, 245 / 255],\n\t\"lawngreen\": [124 / 255, 252 / 255, 0],\n\t\"lemonchiffon\": [1, 250 / 255, 205 / 255],\n\t\"lightblue\": [173 / 255, 216 / 255, 230 / 255],\n\t\"lightcoral\": [240 / 255, 128 / 255, 128 / 255],\n\t\"lightcyan\": [224 / 255, 1, 1],\n\t\"lightgoldenrodyellow\": [250 / 255, 250 / 255, 210 / 255],\n\t\"lightgray\": [211 / 255, 211 / 255, 211 / 255],\n\t\"lightgreen\": [144 / 255, 238 / 255, 144 / 255],\n\t\"lightgrey\": [211 / 255, 211 / 255, 211 / 255],\n\t\"lightpink\": [1, 182 / 255, 193 / 255],\n\t\"lightsalmon\": [1, 160 / 255, 122 / 255],\n\t\"lightseagreen\": [32 / 255, 178 / 255, 170 / 255],\n\t\"lightskyblue\": [135 / 255, 206 / 255, 250 / 255],\n\t\"lightslategray\": [119 / 255, 136 / 255, 153 / 255],\n\t\"lightslategrey\": [119 / 255, 136 / 255, 153 / 255],\n\t\"lightsteelblue\": [176 / 255, 196 / 255, 222 / 255],\n\t\"lightyellow\": [1, 1, 224 / 255],\n\t\"lime\": [0, 1, 0],\n\t\"limegreen\": [50 / 255, 205 / 255, 50 / 255],\n\t\"linen\": [250 / 255, 240 / 255, 230 / 255],\n\t\"magenta\": [1, 0, 1],\n\t\"maroon\": [128 / 255, 0, 0],\n\t\"mediumaquamarine\": [102 / 255, 205 / 255, 170 / 255],\n\t\"mediumblue\": [0, 0, 205 / 255],\n\t\"mediumorchid\": [186 / 255, 85 / 255, 211 / 255],\n\t\"mediumpurple\": [147 / 255, 112 / 255, 219 / 255],\n\t\"mediumseagreen\": [60 / 255, 179 / 255, 113 / 255],\n\t\"mediumslateblue\": [123 / 255, 104 / 255, 238 / 255],\n\t\"mediumspringgreen\": [0, 250 / 255, 154 / 255],\n\t\"mediumturquoise\": [72 / 255, 209 / 255, 204 / 255],\n\t\"mediumvioletred\": [199 / 255, 21 / 255, 133 / 255],\n\t\"midnightblue\": [25 / 255, 25 / 255, 112 / 255],\n\t\"mintcream\": [245 / 255, 1, 250 / 255],\n\t\"mistyrose\": [1, 228 / 255, 225 / 255],\n\t\"moccasin\": [1, 228 / 255, 181 / 255],\n\t\"navajowhite\": [1, 222 / 255, 173 / 255],\n\t\"navy\": [0, 0, 128 / 255],\n\t\"oldlace\": [253 / 255, 245 / 255, 230 / 255],\n\t\"olive\": [128 / 255, 128 / 255, 0],\n\t\"olivedrab\": [107 / 255, 142 / 255, 35 / 255],\n\t\"orange\": [1, 165 / 255, 0],\n\t\"orangered\": [1, 69 / 255, 0],\n\t\"orchid\": [218 / 255, 112 / 255, 214 / 255],\n\t\"palegoldenrod\": [238 / 255, 232 / 255, 170 / 255],\n\t\"palegreen\": [152 / 255, 251 / 255, 152 / 255],\n\t\"paleturquoise\": [175 / 255, 238 / 255, 238 / 255],\n\t\"palevioletred\": [219 / 255, 112 / 255, 147 / 255],\n\t\"papayawhip\": [1, 239 / 255, 213 / 255],\n\t\"peachpuff\": [1, 218 / 255, 185 / 255],\n\t\"peru\": [205 / 255, 133 / 255, 63 / 255],\n\t\"pink\": [1, 192 / 255, 203 / 255],\n\t\"plum\": [221 / 255, 160 / 255, 221 / 255],\n\t\"powderblue\": [176 / 255, 224 / 255, 230 / 255],\n\t\"purple\": [128 / 255, 0, 128 / 255],\n\t\"rebeccapurple\": [102 / 255, 51 / 255, 153 / 255],\n\t\"red\": [1, 0, 0],\n\t\"rosybrown\": [188 / 255, 143 / 255, 143 / 255],\n\t\"royalblue\": [65 / 255, 105 / 255, 225 / 255],\n\t\"saddlebrown\": [139 / 255, 69 / 255, 19 / 255],\n\t\"salmon\": [250 / 255, 128 / 255, 114 / 255],\n\t\"sandybrown\": [244 / 255, 164 / 255, 96 / 255],\n\t\"seagreen\": [46 / 255, 139 / 255, 87 / 255],\n\t\"seashell\": [1, 245 / 255, 238 / 255],\n\t\"sienna\": [160 / 255, 82 / 255, 45 / 255],\n\t\"silver\": [192 / 255, 192 / 255, 192 / 255],\n\t\"skyblue\": [135 / 255, 206 / 255, 235 / 255],\n\t\"slateblue\": [106 / 255, 90 / 255, 205 / 255],\n\t\"slategray\": [112 / 255, 128 / 255, 144 / 255],\n\t\"slategrey\": [112 / 255, 128 / 255, 144 / 255],\n\t\"snow\": [1, 250 / 255, 250 / 255],\n\t\"springgreen\": [0, 1, 127 / 255],\n\t\"steelblue\": [70 / 255, 130 / 255, 180 / 255],\n\t\"tan\": [210 / 255, 180 / 255, 140 / 255],\n\t\"teal\": [0, 128 / 255, 128 / 255],\n\t\"thistle\": [216 / 255, 191 / 255, 216 / 255],\n\t\"tomato\": [1, 99 / 255, 71 / 255],\n\t\"turquoise\": [64 / 255, 224 / 255, 208 / 255],\n\t\"violet\": [238 / 255, 130 / 255, 238 / 255],\n\t\"wheat\": [245 / 255, 222 / 255, 179 / 255],\n\t\"white\": [1, 1, 1],\n\t\"whitesmoke\": [245 / 255, 245 / 255, 245 / 255],\n\t\"yellow\": [1, 1, 0],\n\t\"yellowgreen\": [154 / 255, 205 / 255, 50 / 255]\n};\n\nlet coordGrammar = Array(3).fill(\"<percentage> | <number>[0, 255]\");\nlet coordGrammarNumber = Array(3).fill(\"<number>[0, 255]\");\n\nvar sRGB = new RGBColorSpace({\n\tid: \"srgb\",\n\tname: \"sRGB\",\n\tbase: sRGBLinear,\n\tfromBase: rgb => {\n\t\t// convert an array of linear-light sRGB values in the range 0.0-1.0\n\t\t// to gamma corrected form\n\t\t// https://en.wikipedia.org/wiki/SRGB\n\t\treturn rgb.map(val => {\n\t\t\tlet sign = val < 0? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs > 0.0031308) {\n\t\t\t\treturn sign * (1.055 * (abs ** (1/2.4)) - 0.055);\n\t\t\t}\n\n\t\t\treturn 12.92 * val;\n\t\t});\n\t},\n\ttoBase: rgb => {\n\t\t// convert an array of sRGB values in the range 0.0 - 1.0\n\t\t// to linear light (un-companded) form.\n\t\t// https://en.wikipedia.org/wiki/SRGB\n\t\treturn rgb.map(val => {\n\t\t\tlet sign = val < 0? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs < 0.04045) {\n\t\t\t\treturn val / 12.92;\n\t\t\t}\n\n\t\t\treturn sign * (((abs + 0.055) / 1.055) ** 2.4);\n\t\t});\n\t},\n\tformats: {\n\t\t\"rgb\": {\n\t\t\tcoords: coordGrammar,\n\t\t},\n\t\t\"rgb_number\": {\n\t\t\tname: \"rgb\",\n\t\t\tcommas: true,\n\t\t\tcoords: coordGrammarNumber,\n\t\t\tnoAlpha: true,\n\t\t},\n\t\t\"color\": { /* use defaults */ },\n\t\t\"rgba\": {\n\t\t\tcoords: coordGrammar,\n\t\t\tcommas: true,\n\t\t\tlastAlpha: true,\n\t\t},\n\t\t\"rgba_number\": {\n\t\t\tname: \"rgba\",\n\t\t\tcommas: true,\n\t\t\tcoords: coordGrammarNumber\n\t\t},\n\t\t\"hex\": {\n\t\t\ttype: \"custom\",\n\t\t\ttoGamut: true,\n\t\t\ttest: str => /^#([a-f0-9]{3,4}){1,2}$/i.test(str),\n\t\t\tparse (str) {\n\t\t\t\tif (str.length <= 5) {\n\t\t\t\t\t// #rgb or #rgba, duplicate digits\n\t\t\t\t\tstr = str.replace(/[a-f0-9]/gi, \"$&$&\");\n\t\t\t\t}\n\n\t\t\t\tlet rgba = [];\n\t\t\t\tstr.replace(/[a-f0-9]{2}/gi, component => {\n\t\t\t\t\trgba.push(parseInt(component, 16) / 255);\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tspaceId: \"srgb\",\n\t\t\t\t\tcoords: rgba.slice(0, 3),\n\t\t\t\t\talpha: rgba.slice(3)[0]\n\t\t\t\t};\n\t\t\t},\n\t\t\tserialize: (coords, alpha, {\n\t\t\t\tcollapse = true // collapse to 3-4 digit hex when possible?\n\t\t\t} = {}) => {\n\t\t\t\tif (alpha < 1) {\n\t\t\t\t\tcoords.push(alpha);\n\t\t\t\t}\n\n\t\t\t\tcoords = coords.map(c => Math.round(c * 255));\n\n\t\t\t\tlet collapsible = collapse && coords.every(c => c % 17 === 0);\n\n\t\t\t\tlet hex = coords.map(c => {\n\t\t\t\t\tif (collapsible) {\n\t\t\t\t\t\treturn (c/17).toString(16);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn c.toString(16).padStart(2, \"0\");\n\t\t\t\t}).join(\"\");\n\n\t\t\t\treturn \"#\" + hex;\n\t\t\t}\n\t\t},\n\t\t\"keyword\": {\n\t\t\ttype: \"custom\",\n\t\t\ttest: str => /^[a-z]+$/i.test(str),\n\t\t\tparse (str) {\n\t\t\t\tstr = str.toLowerCase();\n\t\t\t\tlet ret = {spaceId: \"srgb\", coords: null, alpha: 1};\n\n\t\t\t\tif (str === \"transparent\") {\n\t\t\t\t\tret.coords = KEYWORDS.black;\n\t\t\t\t\tret.alpha = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.coords = KEYWORDS[str];\n\t\t\t\t}\n\n\t\t\t\tif (ret.coords) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t}\n});\n\nvar P3 = new RGBColorSpace({\n\tid: \"p3\",\n\tname: \"P3\",\n\tbase: P3Linear,\n\t// Gamma encoding/decoding is the same as sRGB\n\tfromBase: sRGB.fromBase,\n\ttoBase: sRGB.toBase,\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"display-p3\",\n\t\t}\n\t},\n});\n\n// Default space for CSS output. Code in Color.js makes this wider if there's a DOM available\ndefaults.display_space = sRGB;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n\t// Find widest supported color space for CSS\n\tfor (let space of [lab, REC2020, P3]) {\n\t\tlet coords = space.getMinCoords();\n\t\tlet color = {space, coords, alpha: 1};\n\t\tlet str = serialize(color);\n\n\t\tif (CSS.supports(\"color\", str)) {\n\t\t\tdefaults.display_space = space;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/**\n * Returns a serialization of the color that can actually be displayed in the browser.\n * If the default serialization can be displayed, it is returned.\n * Otherwise, the color is converted to Lab, REC2020, or P3, whichever is the widest supported.\n * In Node.js, this is basically equivalent to `serialize()` but returns a `String` object instead.\n *\n * @export\n * @param {{space, coords} | Color | string} color\n * @param {*} [options={}] Options to be passed to serialize()\n * @param {ColorSpace | string} [options.space = defaults.display_space] Color space to use for serialization if default is not supported\n * @returns {String} String object containing the serialized color with a color property containing the converted color (or the original, if no conversion was necessary)\n */\nfunction display (color, {space = defaults.display_space, ...options} = {}) {\n\tlet ret = serialize(color, options);\n\n\tif (typeof CSS === \"undefined\" || CSS.supports(\"color\", ret) || !defaults.display_space) {\n\t\tret = new String(ret);\n\t\tret.color = color;\n\t}\n\telse {\n\t\t// If we're here, what we were about to output is not supported\n\t\t// Fall back to fallback space\n\t\tlet fallbackColor = to(color, space);\n\t\tret = new String(serialize(fallbackColor, options));\n\t\tret.color = fallbackColor;\n\t}\n\n\treturn ret;\n}\n\n/**\n * Euclidean distance of colors in an arbitrary color space\n */\nfunction distance (color1, color2, space = \"lab\") {\n\tspace = ColorSpace.get(space);\n\n\tlet coords1 = space.from(color1);\n\tlet coords2 = space.from(color2);\n\n\treturn Math.sqrt(coords1.reduce((acc, c1, i) => {\n\t\tlet c2 = coords2[i];\n\t\tif (isNaN(c1) || isNaN(c2)) {\n\t\t\treturn acc;\n\t\t}\n\n\t\treturn acc + (c2 - c1) ** 2;\n\t}, 0));\n}\n\nfunction equals (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\treturn color1.space === color2.space\n\t\t   && color1.alpha === color2.alpha\n\t\t   && color1.coords.every((c, i) => c === color2.coords[i]);\n}\n\n/**\n * Relative luminance\n */\n\nfunction getLuminance (color) {\n\treturn get(color, [XYZ_D65, \"y\"]);\n}\n\nfunction setLuminance (color, value) {\n\tset(color, [XYZ_D65, \"y\"], value);\n}\n\nfunction register$2 (Color) {\n\tObject.defineProperty(Color.prototype, \"luminance\", {\n\t\tget () {\n\t\t\treturn getLuminance(this);\n\t\t},\n\t\tset (value) {\n\t\t\tsetLuminance(this, value);\n\t\t}\n\t});\n}\n\nvar luminance = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tgetLuminance: getLuminance,\n\tsetLuminance: setLuminance,\n\tregister: register$2\n});\n\n// WCAG 2.0 contrast https://www.w3.org/TR/WCAG20-TECHS/G18.html\n\nfunction contrastWCAG21 (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\treturn (Y1 + .05) / (Y2 + .05);\n}\n\n// APCA 0.0.98G\n\n// exponents\nconst normBG = 0.56;\nconst normTXT = 0.57;\nconst revTXT = 0.62;\nconst revBG = 0.65;\n\n// clamps\nconst blkThrs = 0.022;\nconst blkClmp = 1.414;\nconst loClip = 0.1;\nconst deltaYmin = 0.0005;\n\n// scalers\n// see https://github.com/w3c/silver/issues/645\nconst scaleBoW = 1.14;\nconst loBoWoffset = 0.027;\nconst scaleWoB= 1.14;\n\nfunction fclamp (Y) {\n\tif (Y >= blkThrs) {\n\t\treturn Y;\n\t}\n\treturn Y + (blkThrs - Y) ** blkClmp;\n}\n\nfunction linearize (val) {\n\tlet sign = val < 0? -1 : 1;\n\tlet abs = Math.abs(val);\n\treturn sign * Math.pow(abs, 2.4);\n}\n\n// Not symmetric, requires a foreground (text) color, and a background color\nfunction contrastAPCA (background, foreground) {\n\tforeground = getColor(foreground);\n\tbackground = getColor(background);\n\n\tlet S;\n\tlet C;\n\tlet Sapc;\n\n\t// Myndex as-published, assumes sRGB inputs\n\tlet R, G, B;\n\n\tforeground = to(foreground, \"srgb\");\n\t// Should these be clamped to in-gamut values?\n\n\t// Calculates \"screen luminance\" with non-standard simple gamma EOTF\n\t// weights should be from CSS Color 4, not the ones here which are via Myndex and copied from Lindbloom\n\t[R, G, B] = foreground.coords;\n\tlet lumTxt = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.0721750;\n\n\tbackground = to(background, \"srgb\");\n\t[R, G, B] = background.coords;\n\tlet lumBg = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.0721750;\n\n\t// toe clamping of very dark values to account for flare\n\tlet Ytxt = fclamp(lumTxt);\n\tlet Ybg = fclamp(lumBg);\n\n\t// are we \"Black on White\" (dark on light), or light on dark?\n\tlet BoW = Ybg > Ytxt;\n\n\t// why is this a delta, when Y is not perceptually uniform?\n\t// Answer: it is a noise gate, see\n\t// https://github.com/LeaVerou/color.js/issues/208\n\tif (Math.abs(Ybg - Ytxt) < deltaYmin) {\n\t\tC = 0;\n\t}\n\telse {\n\t\tif (BoW) {\n\t\t\t// dark text on light background\n\t\t\tS = Ybg ** normBG - Ytxt ** normTXT;\n\t\t\tC = S * scaleBoW;\n\t\t}\n\t\telse {\n\t\t\t// light text on dark background\n\t\t\tS = Ybg ** revBG - Ytxt ** revTXT;\n\t\t\tC = S * scaleWoB;\n\t\t}\n\t}\n\tif (Math.abs(C) < loClip) {\n\t\tSapc = 0;\n\t}\n\telse if (C > 0) {\n\t\t// not clear whether Woffset is loBoWoffset or loWoBoffset\n\t\t// but they have the same value\n\t\tSapc = C - loBoWoffset;\n\t}\n\telse {\n\t\tSapc = C + loBoWoffset;\n\t}\n\n\treturn Sapc * 100;\n}\n\n// Michelson  luminance contrast\n\nfunction contrastMichelson (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\tlet denom = (Y1 + Y2);\n\treturn denom === 0 ? 0 : (Y1 - Y2) / denom;\n}\n\n// Weber luminance contrast\n\n// the darkest sRGB color above black is #000001 and this produces\n// a plain Weber contrast of ~45647.\n// So, setting the divide-by-zero result at 50000 is a reasonable\n// max clamp for the plain Weber\nconst max = 50000;\n\nfunction contrastWeber (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\treturn Y2 === 0 ? max : (Y1 - Y2) / Y2;\n}\n\n// CIE Lightness difference, as used by Google Material Design\n\nfunction contrastLstar (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet L1 = get(color1, [lab, \"l\"]);\n\tlet L2 = get(color2, [lab, \"l\"]);\n\n\treturn Math.abs(L1 - L2);\n}\n\n// κ * ε  = 2^3 = 8\nconst ε$1 = 216/24389;  // 6^3/29^3 == (24/116)^3\nconst ε3 = 24/116;\nconst κ = 24389/27;   // 29^3/3^3\n\nlet white = WHITES.D65;\n\nvar lab_d65 = new ColorSpace({\n\tid: \"lab-d65\",\n\tname: \"Lab D65\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"L\"\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-125, 125]\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-125, 125]\n\t\t}\n\t},\n\n\t// Assuming XYZ is relative to D65, convert to CIE Lab\n\t// from CIE standard, which now defines these as a rational fraction\n\twhite,\n\n\tbase: XYZ_D65,\n\t// Convert D65-adapted XYZ to Lab\n\t//  CIE 15.3:2004 section 8.2.1.1\n\tfromBase (XYZ) {\n\t\t// compute xyz, which is XYZ scaled relative to reference white\n\t\tlet xyz = XYZ.map((value, i) => value / white[i]);\n\n\t\t// now compute f\n\t\tlet f = xyz.map(value => value > ε$1 ? Math.cbrt(value) : (κ * value + 16)/116);\n\n\t\treturn [\n\t\t\t(116 * f[1]) - 16, \t // L\n\t\t\t500 * (f[0] - f[1]), // a\n\t\t\t200 * (f[1] - f[2])  // b\n\t\t];\n\t},\n\t// Convert Lab to D65-adapted XYZ\n\t// Same result as CIE 15.3:2004 Appendix D although the derivation is different\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\ttoBase (Lab) {\n\t\t// compute f, starting with the luminance-related term\n\t\tlet f = [];\n\t\tf[1] = (Lab[0] + 16)/116;\n\t\tf[0] = Lab[1]/500 + f[1];\n\t\tf[2] = f[1] - Lab[2]/200;\n\n\t\t// compute xyz\n\t\tlet xyz = [\n\t\t\tf[0]   > ε3  ?  Math.pow(f[0], 3)            : (116*f[0]-16)/κ,\n\t\t\tLab[0] > 8   ?  Math.pow((Lab[0]+16)/116, 3) : Lab[0]/κ,\n\t\t\tf[2]   > ε3  ?  Math.pow(f[2], 3)            : (116*f[2]-16)/κ\n\t\t];\n\n\t\t// Compute XYZ by scaling xyz by reference white\n\t\treturn xyz.map((value, i) => value * white[i]);\n\t},\n\n\tformats: {\n\t\t\"lab-d65\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number>\", \"<number>\"],\n\t\t}\n\t}\n});\n\n// Delta Phi Star perceptual lightness contrast\n\nconst phi = Math.pow(5, 0.5) * 0.5 + 0.5; // Math.phi can be used if Math.js\n\nfunction contrastDeltaPhi (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Lstr1 = get(color1, [lab_d65, \"l\"]);\n\tlet Lstr2 = get(color2, [lab_d65, \"l\"]);\n\n\tlet deltaPhiStar = Math.abs(Math.pow(Lstr1, phi) - Math.pow(Lstr2, phi));\n\n\tlet contrast = Math.pow(deltaPhiStar, (1 / phi)) * Math.SQRT2 - 40;\n\n\treturn (contrast < 7.5) ? 0.0 : contrast ;\n}\n\nvar contrastMethods = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tcontrastWCAG21: contrastWCAG21,\n\tcontrastAPCA: contrastAPCA,\n\tcontrastMichelson: contrastMichelson,\n\tcontrastWeber: contrastWeber,\n\tcontrastLstar: contrastLstar,\n\tcontrastDeltaPhi: contrastDeltaPhi\n});\n\nfunction contrast (background, foreground, o = {}) {\n\tif (isString(o)) {\n\t\to = {algorithm: o};\n\t}\n\n\tlet {algorithm, ...rest} = o;\n\n\tif (!algorithm) {\n\t\tlet algorithms = Object.keys(contrastMethods).map(a => a.replace(/^contrast/, \"\")).join(\", \");\n\t\tthrow new TypeError(`contrast() function needs a contrast algorithm. Please specify one of: ${algorithms}`);\n\t}\n\n\tbackground = getColor(background);\n\tforeground = getColor(foreground);\n\n\tfor (let a in contrastMethods) {\n\t\tif (\"contrast\" + algorithm.toLowerCase() === a.toLowerCase()) {\n\t\t\treturn contrastMethods[a](background, foreground, rest);\n\t\t}\n\t}\n\n\tthrow new TypeError(`Unknown contrast algorithm: ${algorithm}`);\n}\n\n// Chromaticity coordinates\nfunction uv (color) {\n\tlet [X, Y, Z] = getAll(color, XYZ_D65);\n\tlet denom = X + 15 * Y + 3 * Z;\n\treturn [4 * X / denom, 9 * Y / denom];\n}\n\nfunction xy (color) {\n\tlet [X, Y, Z] = getAll(color, XYZ_D65);\n\tlet  sum = X + Y + Z;\n\treturn [X / sum, Y / sum];\n}\n\nfunction register$1 (Color) {\n\t// no setters, as lightness information is lost\n\t// when converting color to chromaticity\n\tObject.defineProperty(Color.prototype, \"uv\", {\n\t\tget () {\n\t\t\treturn uv(this);\n\t\t}\n\t});\n\n\tObject.defineProperty(Color.prototype, \"xy\", {\n\t\tget () {\n\t\t\treturn xy(this);\n\t\t}\n\t});\n}\n\nvar chromaticity = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tuv: uv,\n\txy: xy,\n\tregister: register$1\n});\n\nfunction deltaE76 (color, sample) {\n\treturn distance(color, sample, \"lab\");\n}\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// CMC by the Color Measurement Committee of the\n// Bradford Society of Dyeists and Colorsts, 1994.\n// Uses LCH rather than Lab,\n// with different weights for L, C and H differences\n// A nice increase in accuracy for modest increase in complexity\nconst π = Math.PI;\nconst d2r = π / 180;\n\nfunction deltaECMC (color, sample, {l = 2, c = 1} = {}) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE CMC.\n\n\t// This implementation assumes the parametric\n\t// weighting factors l:c are 2:1\n\t// which is typical for non-textile uses.\n\n\tlet [L1, a1, b1] = lab.from(color);\n\tlet [, C1, H1] = lch.from(lab, [L1, a1, b1]);\n\tlet [L2, a2, b2] = lab.from(sample);\n\tlet C2 = lch.from(lab, [L2, a2, b2])[1];\n\n\t// let [L1, a1, b1] = color.getAll(lab);\n\t// let C1 = color.get(\"lch.c\");\n\t// let H1 = color.get(\"lch.h\");\n\t// let [L2, a2, b2] = sample.getAll(lab);\n\t// let C2 = sample.get(\"lch.c\");\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\t// we don't need H2 as ΔH is calculated from Δa, Δb and ΔC\n\n\t// Lightness and Chroma differences\n\t// These are (color - sample), unlike deltaE2000\n\tlet ΔL = L1 - L2;\n\tlet ΔC = C1 - C2;\n\n\tlet Δa = a1 - a2;\n\tlet Δb = b1 - b2;\n\n\t// weighted Hue difference, less for larger Chroma difference\n\n\tlet H2 = (Δa ** 2) + (Δb ** 2) - (ΔC ** 2);\n\t// due to roundoff error it is possible that, for zero a and b,\n\t// ΔC > Δa + Δb is 0, resulting in attempting\n\t// to take the square root of a negative number\n\n\t// trying instead the equation from Industrial Color Physics\n\t// By Georg A. Klein\n\n\t// let ΔH = ((a1 * b2) - (a2 * b1)) / Math.sqrt(0.5 * ((C2 * C1) + (a2 * a1) + (b2 * b1)));\n\t// console.log({ΔH});\n\t// This gives the same result to 12 decimal places\n\t// except it sometimes NaNs when trying to root a negative number\n\n\t// let ΔH = Math.sqrt(H2); we never actually use the root, it gets squared again!!\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor, depends entirely on L1 not L2\n\tlet SL = 0.511;\t// linear portion of the Y to L transfer function\n\tif (L1 >= 16) {\t// cubic portion\n\t\tSL = (0.040975 * L1) / (1 + 0.01765 * L1);\n\t}\n\n\t// SC Chroma factor\n\tlet SC = ((0.0638 * C1) / (1 + 0.0131 * C1)) + 0.638;\n\n\t// Cross term T for blue non-linearity\n\tlet T;\n\tif ( Number.isNaN(H1)) {\n\t\tH1 = 0;\n\t}\n\n\tif (H1 >= 164 && H1 <= 345) {\n\t\tT = 0.56 + Math.abs(0.2 * Math.cos((H1 + 168) * d2r));\n\t}\n\telse {\n\t\tT = 0.36 + Math.abs(0.4 * Math.cos((H1 + 35) * d2r));\n\t}\n\t// console.log({T});\n\n\t// SH Hue factor also depends on C1,\n\tlet C4 = Math.pow(C1, 4);\n\tlet F = Math.sqrt(C4 / (C4 + 1900));\n\tlet SH = SC * ((F * T) + 1 - F);\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ΔL / (l * SL)) ** 2;\n\tdE += (ΔC / (c * SC)) ** 2;\n\tdE += (H2 / (SH ** 2));\n\t// dE += (ΔH / SH)  ** 2;\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n}\n\nconst Yw$1 = 203;\t// absolute luminance of media white\n\nvar XYZ_Abs_D65 = new ColorSpace({\n// Absolute CIE XYZ, with a D65 whitepoint,\n// as used in most HDR colorspaces as a starting point.\n// SDR spaces are converted per BT.2048\n// so that diffuse, media white is 203 cd/m²\n\tid: \"xyz-abs-d65\",\n\tname: \"Absolute XYZ D65\",\n\tcoords: {\n\t\tx: {\n\t\t\trefRange: [0, 9504.7],\n\t\t\tname: \"Xa\",\n\t\t},\n\t\ty: {\n\t\t\trefRange: [0, 10000],\n\t\t\tname: \"Ya\",\n\t\t},\n\t\tz: {\n\t\t\trefRange: [0, 10888.3],\n\t\t\tname: \"Za\",\n\t\t}\n\t},\n\n\tbase: XYZ_D65,\n\tfromBase (XYZ) {\n\t\t// Make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\treturn XYZ.map (v => Math.max(v * Yw$1, 0));\n\t},\n\ttoBase (AbsXYZ) {\n\t\t// Convert to media-white relative XYZ\n\t\treturn AbsXYZ.map(v => Math.max(v / Yw$1, 0));\n\t}\n});\n\nconst b$1 = 1.15;\nconst g = 0.66;\nconst n$1 = 2610 / (2 ** 14);\nconst ninv$1 = (2 ** 14) / 2610;\nconst c1$2 = 3424 / (2 ** 12);\nconst c2$2 = 2413 / (2 ** 7);\nconst c3$2 = 2392 / (2 ** 7);\nconst p = 1.7 * 2523 / (2 ** 5);\nconst pinv = (2 ** 5) / (1.7 * 2523);\nconst d = -0.56;\nconst d0 = 1.6295499532821566E-11;\n\nconst XYZtoCone_M = [\n\t[  0.41478972, 0.579999,  0.0146480 ],\n\t[ -0.2015100,  1.120649,  0.0531008 ],\n\t[ -0.0166008,  0.264800,  0.6684799 ]\n];\n// XYZtoCone_M inverted\nconst ConetoXYZ_M = [\n\t[  1.9242264357876067,  -1.0047923125953657,  0.037651404030618   ],\n\t[  0.35031676209499907,  0.7264811939316552, -0.06538442294808501 ],\n\t[ -0.09098281098284752, -0.3127282905230739,  1.5227665613052603  ]\n];\nconst ConetoIab_M = [\n\t[  0.5,       0.5,       0        ],\n\t[  3.524000, -4.066708,  0.542708 ],\n\t[  0.199076,  1.096799, -1.295875 ]\n];\n// ConetoIab_M inverted\nconst IabtoCone_M = [\n\t[ 1,                   0.1386050432715393,   0.05804731615611886 ],\n\t[ 0.9999999999999999, -0.1386050432715393,  -0.05804731615611886 ],\n\t[ 0.9999999999999998, -0.09601924202631895, -0.8118918960560388  ]\n];\n\nvar Jzazbz = new ColorSpace({\n\tid: \"jzazbz\",\n\tname: \"Jzazbz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\taz: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t},\n\t\tbz: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t}\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// First make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\t// BT.2048 says media white Y=203 at PQ 58\n\n\t\tlet [ Xa, Ya, Za ] = XYZ;\n\n\t\t// modify X and Y\n\t\tlet Xm = (b$1 * Xa) - ((b$1 - 1) * Za);\n\t\tlet Ym = (g * Ya) - ((g - 1) * Xa);\n\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoCone_M, [ Xm, Ym, Za ]);\n\n\t\t// PQ-encode LMS\n\t\tlet PQLMS = LMS.map (function (val) {\n\t\t\tlet num = c1$2 + (c2$2 * ((val / 10000) ** n$1));\n\t\t\tlet denom = 1 + (c3$2 * ((val / 10000) ** n$1));\n\n\t\t\treturn (num / denom)  ** p;\n\t\t});\n\n\t\t// almost there, calculate Iz az bz\n\t\tlet [ Iz, az, bz] = multiplyMatrices(ConetoIab_M, PQLMS);\n\t\t// console.log({Iz, az, bz});\n\n\t\tlet Jz = ((1 + d) * Iz) / (1 + (d * Iz)) - d0;\n\t\treturn [Jz, az, bz];\n\t},\n\ttoBase (Jzazbz) {\n\t\tlet [Jz, az, bz] = Jzazbz;\n\t\tlet Iz = (Jz + d0) / (1 + d - d * (Jz + d0));\n\n\t\t// bring into LMS cone domain\n\t\tlet PQLMS = multiplyMatrices(IabtoCone_M, [ Iz, az, bz ]);\n\n\t\t// convert from PQ-coded to linear-light\n\t\tlet LMS = PQLMS.map(function (val) {\n\t\t\tlet num = (c1$2 - (val ** pinv));\n\t\t\tlet denom = (c3$2 * (val ** pinv)) - c2$2;\n\t\t\tlet x = 10000 * ((num / denom) ** ninv$1);\n\n\t\t\treturn (x); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\n\t\t// modified abs XYZ\n\t\tlet [ Xm, Ym, Za ] = multiplyMatrices(ConetoXYZ_M, LMS);\n\n\t\t// restore standard D50 relative XYZ, relative to media white\n\t\tlet Xa = (Xm + ((b$1 -1) * Za)) / b$1;\n\t\tlet Ya = (Ym + ((g -1) * Xa)) / g;\n\t\treturn [ Xa, Ya, Za ];\n\t},\n\n\tformats: {\n\t\t// https://drafts.csswg.org/css-color-hdr/#Jzazbz\n\t\t\"color\": {}\n\t}\n});\n\nvar jzczhz = new ColorSpace({\n\tid: \"jzczhz\",\n\tname: \"JzCzHz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\tcz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\thz: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t}\n\t},\n\n\tbase: Jzazbz,\n\tfromBase (jzazbz) {\n\t\t// Convert to polar form\n\t\tlet [Jz, az, bz] = jzazbz;\n\t\tlet hue;\n\t\tconst ε = 0.0002; // chromatic components much smaller than a,b\n\n\t\tif (Math.abs(az) < ε && Math.abs(bz) < ε) {\n\t\t\thue = NaN;\n\t\t}\n\t\telse {\n\t\t\thue = Math.atan2(bz, az) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tJz, // Jz is still Jz\n\t\t\tMath.sqrt(az ** 2 + bz ** 2), // Chroma\n\t\t\tconstrain(hue) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\ttoBase (jzczhz) {\n\t\t// Convert from polar form\n\t\t// debugger;\n\t\treturn [\n\t\t\tjzczhz[0], // Jz is still Jz\n\t\t\tjzczhz[1] * Math.cos(jzczhz[2] * Math.PI / 180), // az\n\t\t\tjzczhz[1] * Math.sin(jzczhz[2] * Math.PI / 180)  // bz\n\t\t];\n\t},\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// Uses JzCzHz, which has improved perceptual uniformity\n// and thus a simple Euclidean root-sum of ΔL² ΔC² ΔH²\n// gives good results.\n\nfunction deltaEJz (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in JzCzHz.\n\tlet [Jz1, Cz1, Hz1] = jzczhz.from(color);\n\tlet [Jz2, Cz2, Hz2] = jzczhz.from(sample);\n\n\t// Lightness and Chroma differences\n\t// sign does not matter as they are squared.\n\tlet ΔJ = Jz1 - Jz2;\n\tlet ΔC = Cz1 - Cz2;\n\n\t// length of chord for ΔH\n\tif ((Number.isNaN(Hz1)) && (Number.isNaN(Hz2))) {\n\t\t// both undefined hues\n\t\tHz1 = 0;\n\t\tHz2 = 0;\n\t}\n\telse if (Number.isNaN(Hz1)) {\n\t\t// one undefined, set to the defined hue\n\t\tHz1 = Hz2;\n\t}\n\telse if (Number.isNaN(Hz2)) {\n\t\tHz2 = Hz1;\n\t}\n\n\tlet Δh = Hz1 - Hz2;\n\tlet ΔH = 2 * Math.sqrt(Cz1 * Cz2) * Math.sin((Δh / 2) * (Math.PI / 180));\n\n\treturn Math.sqrt(ΔJ ** 2 + ΔC ** 2 + ΔH ** 2);\n}\n\nconst c1$1 = 3424 / 4096;\nconst c2$1 = 2413 / 128;\nconst c3$1 = 2392 / 128;\nconst m1 = 2610 / 16384;\nconst m2 = 2523 / 32;\nconst im1 = 16384 / 2610;\nconst im2 = 32 / 2523;\n\n// The matrix below includes the 4% crosstalk components\n// and is from the Dolby \"What is ICtCp\" paper\"\nconst XYZtoLMS_M$1 = [\n\t[ 0.3592,  0.6976, -0.0358],\n\t[-0.1922,  1.1004,  0.0755],\n\t[ 0.0070,  0.0749,  0.8434]\n];\n// linear-light Rec.2020 to LMS, again with crosstalk\n// rational terms from Jan Fröhlich,\n// Encoding High Dynamic Range andWide Color Gamut Imagery, p.97\n// and ITU-R BT.2124-0 p.2\n/*\nconst Rec2020toLMS_M = [\n\t[ 1688 / 4096,  2146 / 4096,   262 / 4096 ],\n\t[  683 / 4096,  2951 / 4096,   462 / 4096 ],\n\t[   99 / 4096,   309 / 4096,  3688 / 4096 ]\n];\n*/\n// this includes the Ebner LMS coefficients,\n// the rotation, and the scaling to [-0.5,0.5] range\n// rational terms from Fröhlich p.97\n// and ITU-R BT.2124-0 pp.2-3\nconst LMStoIPT_M = [\n\t[  2048 / 4096,   2048 / 4096,       0      ],\n\t[  6610 / 4096, -13613 / 4096,  7003 / 4096 ],\n\t[ 17933 / 4096, -17390 / 4096,  -543 / 4096 ]\n];\n\n// inverted matrices, calculated from the above\nconst IPTtoLMS_M = [\n\t[0.99998889656284013833, 0.00860505014728705821,  0.1110343715986164786 ],\n\t[1.0000111034371598616, -0.00860505014728705821, -0.1110343715986164786 ],\n\t[1.000032063391005412,   0.56004913547279000113, -0.32063391005412026469],\n];\n/*\nconst LMStoRec2020_M = [\n\t[ 3.4375568932814012112,   -2.5072112125095058195,   0.069654319228104608382],\n\t[-0.79142868665644156125,   1.9838372198740089874,  -0.19240853321756742626 ],\n\t[-0.025646662911506476363, -0.099240248643945566751, 1.1248869115554520431  ]\n];\n*/\nconst LMStoXYZ_M$1 = [\n\t[ 2.0701800566956135096,   -1.3264568761030210255,    0.20661600684785517081 ],\n\t[ 0.36498825003265747974,   0.68046736285223514102,  -0.045421753075853231409],\n\t[-0.049595542238932107896, -0.049421161186757487412,  1.1879959417328034394  ]\n];\n\n// Only the PQ form of ICtCp is implemented here. There is also an HLG form.\n// from Dolby, \"WHAT IS ICTCP?\"\n// https://professional.dolby.com/siteassets/pdfs/ictcp_dolbywhitepaper_v071.pdf\n// and\n// Dolby, \"Perceptual Color Volume\n// Measuring the Distinguishable Colors of HDR and WCG Displays\"\n// https://professional.dolby.com/siteassets/pdfs/dolby-vision-measuring-perceptual-color-volume-v7.1.pdf\nvar ictcp = new ColorSpace({\n\tid: \"ictcp\",\n\tname: \"ICTCP\",\n\t// From BT.2100-2 page 7:\n\t// During production, signal values are expected to exceed the\n\t// range E′ = [0.0 : 1.0]. This provides processing headroom and avoids\n\t// signal degradation during cascaded processing. Such values of E′,\n\t// below 0.0 or exceeding 1.0, should not be clipped during production\n\t// and exchange.\n\t// Values below 0.0 should not be clipped in reference displays (even\n\t// though they represent “negative” light) to allow the black level of\n\t// the signal (LB) to be properly set using test signals known as “PLUGE”\n\tcoords: {\n\t\ti: {\n\t\t\trefRange: [0, 1],\t// Constant luminance,\n\t\t\tname: \"I\"\n\t\t},\n\t\tct: {\n\t\t\trefRange: [-0.5, 0.5],\t// Full BT.2020 gamut in range [-0.5, 0.5]\n\t\t\tname: \"CT\"\n\t\t},\n\t\tcp: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t\tname: \"CP\"\n\t\t}\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoLMS_M$1, XYZ);\n\n\t\treturn LMStoICtCp(LMS);\n\t},\n\ttoBase (ICtCp) {\n\t\tlet LMS = ICtCptoLMS(ICtCp);\n\n\t\treturn multiplyMatrices(LMStoXYZ_M$1, LMS);\n\t},\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\nfunction LMStoICtCp (LMS) {\n\t// apply the PQ EOTF\n\t// we can't ever be dividing by zero because of the \"1 +\" in the denominator\n\tlet PQLMS = LMS.map (function (val) {\n\t\tlet num = c1$1 + (c2$1 * ((val / 10000) ** m1));\n\t\tlet denom = 1 + (c3$1 * ((val / 10000) ** m1));\n\n\t\treturn (num / denom)  ** m2;\n\t});\n\n\t// LMS to IPT, with rotation for Y'C'bC'r compatibility\n\treturn multiplyMatrices(LMStoIPT_M, PQLMS);\n}\n\nfunction ICtCptoLMS (ICtCp) {\n\tlet PQLMS = multiplyMatrices(IPTtoLMS_M, ICtCp);\n\n\t// From BT.2124-0 Annex 2 Conversion 3\n\tlet LMS = PQLMS.map (function (val) {\n\t\tlet num  = Math.max((val ** im2) - c1$1, 0);\n\t\tlet denom = (c2$1 - (c3$1 * (val ** im2)));\n\t\treturn 10000 * ((num / denom) ** im1);\n\t});\n\n\treturn LMS;\n}\n\n// Delta E in ICtCp space,\n// which the ITU calls Delta E ITP, which is shorter\n// formulae from ITU Rec. ITU-R BT.2124-0\n\nfunction deltaEITP (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in ICtCp\n\t// which is simply the Euclidean distance\n\n\tlet [ I1, T1, P1 ] = ictcp.from(color);\n\tlet [ I2, T2, P2 ] = ictcp.from(sample);\n\n\t// the 0.25 factor is to undo the encoding scaling in Ct\n\t// the 720 is so that 1 deltaE = 1 JND\n\t// per  ITU-R BT.2124-0 p.3\n\n\treturn 720 * Math.sqrt((I1 - I2) ** 2 + (0.25 * (T1 -T2) ** 2) + (P1 - P2) ** 2);\n}\n\n// Recalculated for consistent reference white\n// see https://github.com/w3c/csswg-drafts/issues/6642#issuecomment-943521484\nconst XYZtoLMS_M = [\n\t[ 0.8190224432164319,    0.3619062562801221,   -0.12887378261216414 ],\n\t[ 0.0329836671980271,    0.9292868468965546,     0.03614466816999844 ],\n\t[ 0.048177199566046255,  0.26423952494422764,    0.6335478258136937  ]\n];\n// inverse of XYZtoLMS_M\nconst LMStoXYZ_M = [\n\t[  1.2268798733741557,  -0.5578149965554813,   0.28139105017721583],\n\t[ -0.04057576262431372,  1.1122868293970594,  -0.07171106666151701],\n\t[ -0.07637294974672142, -0.4214933239627914,   1.5869240244272418 ]\n];\nconst LMStoLab_M = [\n\t[  0.2104542553,   0.7936177850,  -0.0040720468 ],\n\t[  1.9779984951,  -2.4285922050,   0.4505937099 ],\n\t[  0.0259040371,   0.7827717662,  -0.8086757660 ]\n];\n// LMStoIab_M inverted\nconst LabtoLMS_M = [\n\t[ 0.99999999845051981432,  0.39633779217376785678,   0.21580375806075880339  ],\n\t[ 1.0000000088817607767,  -0.1055613423236563494,   -0.063854174771705903402 ],\n\t[ 1.0000000546724109177,  -0.089484182094965759684, -1.2914855378640917399   ]\n];\n\nvar OKLab = new ColorSpace({\n\tid: \"oklab\",\n    name: \"OKLab\",\n    coords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"L\"\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-0.4, 0.4]\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-0.4, 0.4]\n\t\t}\n    },\n\n\t// Note that XYZ is relative to D65\n  white: \"D65\",\n\tbase: XYZ_D65,\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoLMS_M, XYZ);\n\n\t\t// non-linearity\n\t\tlet LMSg = LMS.map(val => Math.cbrt(val));\n\n\t\treturn multiplyMatrices(LMStoLab_M, LMSg);\n\n\t},\n\ttoBase (OKLab) {\n\t\t// move to LMS cone domain\n\t\tlet LMSg = multiplyMatrices(LabtoLMS_M, OKLab);\n\n\t\t// restore linearity\n\t\tlet LMS = LMSg.map(val => val ** 3);\n\n\t\treturn multiplyMatrices(LMStoXYZ_M, LMS);\n\t},\n\n\tformats: {\n\t\t\"oklab\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number>\", \"<number>\"],\n\t\t}\n\t}\n});\n\n// More accurate color-difference formulae\n\nfunction deltaEOK (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaEOK, term by term as root sum of squares\n\tlet [L1, a1, b1] = OKLab.from(color);\n\tlet [L2, a2, b2] = OKLab.from(sample);\n\tlet ΔL = L1 - L2;\n\tlet Δa = a1 - a2;\n\tlet Δb = b1 - b2;\n\treturn Math.sqrt(ΔL ** 2 + Δa ** 2 + Δb ** 2);\n}\n\nvar deltaEMethods = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdeltaE76: deltaE76,\n\tdeltaECMC: deltaECMC,\n\tdeltaE2000: deltaE2000,\n\tdeltaEJz: deltaEJz,\n\tdeltaEITP: deltaEITP,\n\tdeltaEOK: deltaEOK\n});\n\nfunction deltaE (c1, c2, o = {}) {\n\tif (isString(o)) {\n\t\to = {method: o};\n\t}\n\n\tlet {method = defaults.deltaE, ...rest} = o;\n\n\tc1 = getColor(c1);\n\tc2 = getColor(c2);\n\n\tfor (let m in deltaEMethods) {\n\t\tif (\"deltae\" + method.toLowerCase() === m.toLowerCase()) {\n\t\t\treturn deltaEMethods[m](c1, c2, rest);\n\t\t}\n\t}\n\n\tthrow new TypeError(`Unknown deltaE method: ${method}`);\n}\n\nfunction lighten (color, amount = .25) {\n\tlet space = ColorSpace.get(\"oklch\", \"lch\");\n\tlet lightness = [space, \"l\"];\n\treturn set(color, lightness, l => l * (1 + amount));\n}\n\nfunction darken (color, amount = .25) {\n\tlet space = ColorSpace.get(\"oklch\", \"lch\");\n\tlet lightness = [space, \"l\"];\n\treturn set(color, lightness, l => l * (1 - amount));\n}\n\nvar variations = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tlighten: lighten,\n\tdarken: darken\n});\n\n/**\n * Functions related to color interpolation\n */\n\n/**\n * Return an intermediate color between two colors\n * Signatures: mix(c1, c2, p, options)\n *             mix(c1, c2, options)\n *             mix(color)\n * @param {Color | string} c1 The first color\n * @param {Color | string} [c2] The second color\n * @param {number} [p=.5] A 0-1 percentage where 0 is c1 and 1 is c2\n * @param {Object} [o={}]\n * @return {Color}\n */\nfunction mix (c1, c2, p = .5, o = {}) {\n\t[c1, c2] = [getColor(c1), getColor(c2)];\n\n\tif (type(p) === \"object\") {\n\t\t[p, o] = [.5, p];\n\t}\n\n\tlet {space, outputSpace, premultiplied} = o;\n\n\tlet r = range(c1, c2, {space, outputSpace, premultiplied});\n\treturn r(p);\n}\n\n/**\n *\n * @param {Color | string | Function} c1 The first color or a range\n * @param {Color | string} [c2] The second color if c1 is not a range\n * @param {Object} [options={}]\n * @return {Color[]}\n */\nfunction steps (c1, c2, options = {}) {\n\tlet colorRange;\n\n\tif (isRange(c1)) {\n\t\t// Tweaking existing range\n\t\t[colorRange, options] = [c1, c2];\n\t\t[c1, c2] = colorRange.rangeArgs.colors;\n\t}\n\n\tlet {\n\t\tmaxDeltaE, deltaEMethod,\n\t\tsteps = 2, maxSteps = 1000,\n\t\t...rangeOptions\n\t} = options;\n\n\tif (!colorRange) {\n\t\t[c1, c2] = [getColor(c1), getColor(c2)];\n\t\tcolorRange = range(c1, c2, rangeOptions);\n\t}\n\n\tlet totalDelta = deltaE(c1, c2);\n\tlet actualSteps = maxDeltaE > 0? Math.max(steps, Math.ceil(totalDelta / maxDeltaE) + 1) : steps;\n\tlet ret = [];\n\n\tif (maxSteps !== undefined) {\n\t\tactualSteps = Math.min(actualSteps, maxSteps);\n\t}\n\n\tif (actualSteps === 1) {\n\t\tret = [{p: .5, color: colorRange(.5)}];\n\t}\n\telse {\n\t\tlet step = 1 / (actualSteps - 1);\n\t\tret = Array.from({length: actualSteps}, (_, i) => {\n\t\t\tlet p = i * step;\n\t\t\treturn {p, color: colorRange(p)};\n\t\t});\n\t}\n\n\tif (maxDeltaE > 0) {\n\t\t// Iterate over all stops and find max deltaE\n\t\tlet maxDelta = ret.reduce((acc, cur, i) => {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet ΔΕ = deltaE(cur.color, ret[i - 1].color, deltaEMethod);\n\t\t\treturn Math.max(acc, ΔΕ);\n\t\t}, 0);\n\n\t\twhile (maxDelta > maxDeltaE) {\n\t\t\t// Insert intermediate stops and measure maxDelta again\n\t\t\t// We need to do this for all pairs, otherwise the midpoint shifts\n\t\t\tmaxDelta = 0;\n\n\t\t\tfor (let i = 1; (i < ret.length) && (ret.length < maxSteps); i++) {\n\t\t\t\tlet prev = ret[i - 1];\n\t\t\t\tlet cur = ret[i];\n\n\t\t\t\tlet p = (cur.p + prev.p) / 2;\n\t\t\t\tlet color = colorRange(p);\n\t\t\t\tmaxDelta = Math.max(maxDelta, deltaE(color, prev.color), deltaE(color, cur.color));\n\t\t\t\tret.splice(i, 0, {p, color: colorRange(p)});\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\n\tret = ret.map(a => a.color);\n\n\treturn ret;\n}\n/**\n * Interpolate to color2 and return a function that takes a 0-1 percentage\n * @param {Color | string | Function} color1 The first color or an existing range\n * @param {Color | string} [color2] If color1 is a color, this is the second color\n * @param {Object} [options={}]\n * @returns {Function} A function that takes a 0-1 percentage and returns a color\n */\nfunction range (color1, color2, options = {}) {\n\tif (isRange(color1)) {\n\t\t// Tweaking existing range\n\t\tlet [r, options] = [color1, color2];\n\n\t\treturn range(...r.rangeArgs.colors, {...r.rangeArgs.options, ...options});\n\t}\n\n\tlet {space, outputSpace, progression, premultiplied} = options;\n\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\t// Make sure we're working on copies of these colors\n\tcolor1 = clone(color1);\n\tcolor2 = clone(color2);\n\n\tlet rangeArgs = {colors: [color1, color2], options};\n\n\tif (space) {\n\t\tspace = ColorSpace.get(space);\n\t}\n\telse {\n\t\tspace = ColorSpace.registry[defaults.interpolationSpace] || color1.space;\n\t}\n\n\toutputSpace = outputSpace? ColorSpace.get(outputSpace) : space;\n\n\tcolor1 = to(color1, space);\n\tcolor2 = to(color2, space);\n\n\t// Gamut map to avoid areas of flat color\n\tcolor1 = toGamut(color1);\n\tcolor2 = toGamut(color2);\n\n\t// Handle hue interpolation\n\t// See https://github.com/w3c/csswg-drafts/issues/4735#issuecomment-635741840\n\tif (space.coords.h && space.coords.h.type === \"angle\") {\n\t\tlet arc = options.hue = options.hue || \"shorter\";\n\n\t\tlet hue = [space, \"h\"];\n\t\tlet [θ1, θ2] = [get(color1, hue), get(color2, hue)];\n\t\t[θ1, θ2] = adjust(arc, [θ1, θ2]);\n\t\tset(color1, hue, θ1);\n\t\tset(color2, hue, θ2);\n\t}\n\n\tif (premultiplied) {\n\t\t// not coping with polar spaces yet\n\t\tcolor1.coords = color1.coords.map(c => c * color1.alpha);\n\t\tcolor2.coords = color2.coords.map(c => c * color2.alpha);\n\t}\n\n\treturn Object.assign(p => {\n\t\tp = progression? progression(p) : p;\n\t\tlet coords = color1.coords.map((start, i) => {\n\t\t\tlet end = color2.coords[i];\n\t\t\treturn interpolate(start, end, p);\n\t\t});\n\n\t\tlet alpha = interpolate(color1.alpha, color2.alpha, p);\n\t\tlet ret = {space, coords, alpha};\n\n\t\tif (premultiplied) {\n\t\t\t// undo premultiplication\n\t\t\tret.coords = ret.coords.map(c => c / alpha);\n\t\t}\n\n\t\tif (outputSpace !== space) {\n\t\t\tret = to(ret, outputSpace);\n\t\t}\n\n\t\treturn ret;\n\t}, {\n\t\trangeArgs\n\t});\n}\nfunction isRange (val) {\n\treturn type(val) === \"function\" && !!val.rangeArgs;\n}\ndefaults.interpolationSpace = \"lab\";\n\nfunction register (Color) {\n\tColor.defineFunction(\"mix\", mix, {returns: \"color\"});\n\tColor.defineFunction(\"range\", range, {returns: \"function<color>\"});\n\tColor.defineFunction(\"steps\", steps, {returns: \"array<color>\"});\n}\n\nvar interpolation = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tmix: mix,\n\tsteps: steps,\n\trange: range,\n\tisRange: isRange,\n\tregister: register\n});\n\nvar HSL = new ColorSpace({\n\tid: \"hsl\",\n\tname: \"HSL\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\"\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Lightness\"\n\t\t}\n\t},\n\n\tbase: sRGB,\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB\n\tfromBase: rgb => {\n\t\tlet max = Math.max(...rgb);\n\t\tlet min = Math.min(...rgb);\n\t\tlet [r, g, b] = rgb;\n\t\tlet [h, s, l] = [NaN, 0, (min + max)/2];\n\t\tlet d = max - min;\n\n\t\tif (d !== 0) {\n\t\t\ts = (l === 0 || l === 1) ? 0 : (max - l) / Math.min(l, 1 - l);\n\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4;\n\t\t\t}\n\n\t\t\th = h * 60;\n\t\t}\n\n\t\treturn [h, s * 100, l * 100];\n\t},\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\n\ttoBase: hsl => {\n\t\tlet [h, s, l] = hsl;\n\t\th = h % 360;\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\ts /= 100;\n\t\tl /= 100;\n\n\t\tfunction f (n) {\n\t\t\tlet k = (n + h/30) % 12;\n\t\t\tlet a = s * Math.min(l, 1 - l);\n\t\t\treturn l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n\t\t}\n\n\t\treturn [f(0), f(8), f(4)];\n\t},\n\n\tformats: {\n\t\t\"hsl\": {\n\t\t\ttoGamut: true,\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t},\n\t\t\"hsla\": {\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t\tcommas: true,\n\t\t\tlastAlpha: true,\n\t\t}\n\t},\n});\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nvar HSV = new ColorSpace({\n\tid: \"hsv\",\n\tname: \"HSV\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\"\n\t\t},\n\t\tv: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Value\"\n\t\t}\n\t},\n\n\tbase: HSL,\n\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n\tfromBase (hsl) {\n\t\tlet [h, s, l] = hsl;\n\t\ts /= 100;\n\t\tl /= 100;\n\n\t\tlet v = l + s * Math.min(l, 1 - l);\n\n\t\treturn [\n\t\t\th, // h is the same\n\t\t\tv === 0? 0 : 200 * (1 - l / v), // s\n\t\t\t100 * v\n\t\t];\n\t},\n\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n\ttoBase (hsv) {\n\t\tlet [h, s, v] = hsv;\n\n\t\ts /= 100;\n\t\tv /= 100;\n\n\t\tlet l = v * (1 - s/2);\n\n\t\treturn [\n\t\t\th, // h is the same\n\t\t\t(l === 0 || l === 1)? 0 : ((v - l) / Math.min(l, 1 - l)) * 100,\n\t\t\tl * 100\n\t\t];\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\ttoGamut: true,\n\t\t}\n\t}\n});\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nvar hwb = new ColorSpace({\n\tid: \"hwb\",\n\tname: \"HWB\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\tw: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Whiteness\"\n\t\t},\n\t\tb: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Blackness\"\n\t\t}\n\t},\n\n\tbase: HSV,\n\tfromBase (hsv) {\n\t\tlet [h, s, v] = hsv;\n\n\t\treturn [h, v * (100 - s) / 100, 100 - v];\n\t},\n\ttoBase (hwb) {\n\t\tlet [h, w, b] = hwb;\n\n\t\t// Now convert percentages to [0..1]\n\t\tw /= 100;\n\t\tb /= 100;\n\n\t\t// Achromatic check (white plus black >= 1)\n\t\tlet sum = w + b;\n\t\tif (sum >= 1) {\n\t\t\t let gray = w / sum;\n\t\t\t return [h, 0, gray * 100];\n\t\t}\n\n\t\tlet v = (1 - b);\n\t\tlet s = (v === 0) ? 0 : 1 - w / v;\n\t\treturn [h, s * 100, v * 100];\n\t},\n\n\tformats: {\n\t\t\"hwb\": {\n\t\t\ttoGamut: true,\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t}\n\t}\n});\n\n// convert an array of linear-light a98-rgb values to CIE XYZ\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// has greater numerical precision than section 4.3.5.3 of\n// https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\n// but the values below were calculated from first principles\n// from the chromaticity coordinates of R G B W\nconst toXYZ_M$2 = [\n\t[ 0.5766690429101305,   0.1855582379065463,   0.1882286462349947  ],\n\t[ 0.29734497525053605,  0.6273635662554661,   0.07529145849399788 ],\n\t[ 0.02703136138641234,  0.07068885253582723,  0.9913375368376388  ]\n];\n\nconst fromXYZ_M$2 = [\n\t[  2.0415879038107465,    -0.5650069742788596,   -0.34473135077832956 ],\n\t[ -0.9692436362808795,     1.8759675015077202,    0.04155505740717557 ],\n\t[  0.013444280632031142,  -0.11836239223101838,   1.0151749943912054  ]\n];\n\nvar A98Linear = new RGBColorSpace({\n\tid: \"a98rgb-linear\",\n\tname: \"Linear Adobe® 98 RGB compatible\",\n\twhite: \"D65\",\n\ttoXYZ_M: toXYZ_M$2,\n\tfromXYZ_M: fromXYZ_M$2\n});\n\nvar a98rgb = new RGBColorSpace({\n\tid: \"a98rgb\",\n\tname: \"Adobe® 98 RGB compatible\",\n\tbase: A98Linear,\n\ttoBase: RGB => RGB.map(val => Math.pow(Math.abs(val), 563 / 256) * Math.sign(val)),\n\tfromBase: RGB => RGB.map(val => Math.pow(Math.abs(val), 256 / 563) * Math.sign(val)),\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"a98-rgb\"\n\t\t}\n\t},\n});\n\n// convert an array of  prophoto-rgb values to CIE XYZ\n// using  D50 (so no chromatic adaptation needed afterwards)\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\nconst toXYZ_M$1 = [\n\t[ 0.7977604896723027,  0.13518583717574031,  0.0313493495815248     ],\n\t[ 0.2880711282292934,  0.7118432178101014,   0.00008565396060525902 ],\n\t[ 0.0,                 0.0,                  0.8251046025104601     ]\n];\n\nconst fromXYZ_M$1 = [\n\t[  1.3457989731028281,  -0.25558010007997534,  -0.05110628506753401 ],\n\t[ -0.5446224939028347,   1.5082327413132781,    0.02053603239147973 ],\n\t[  0.0,                  0.0,                   1.2119675456389454  ]\n];\n\nvar ProPhotoLinear = new RGBColorSpace({\n\tid: \"prophoto-linear\",\n\tname: \"Linear ProPhoto\",\n\twhite: \"D50\",\n\tbase: XYZ_D50,\n\ttoXYZ_M: toXYZ_M$1,\n\tfromXYZ_M: fromXYZ_M$1\n});\n\nconst Et = 1/512;\nconst Et2 = 16/512;\n\nvar prophoto = new RGBColorSpace({\n\tid: \"prophoto\",\n\tname: \"ProPhoto\",\n\tbase: ProPhotoLinear,\n\ttoBase (RGB) {\n\t\t// Transfer curve is gamma 1.8 with a small linear portion\n\t\treturn RGB.map(v => v < Et2? v / 16 : v ** 1.8);\n\t},\n\tfromBase (RGB) {\n\t\treturn RGB.map(v => v >= Et? v ** (1/1.8) : 16 * v);\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"prophoto-rgb\"\n\t\t}\n\t},\n});\n\nvar oklch = new ColorSpace({\n\tid: \"oklch\",\n\tname: \"OKLCh\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Lightness\"\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 0.4],\n\t\t\tname: \"Chroma\"\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t}\n\t},\n\twhite: \"D65\",\n\n\tbase: OKLab,\n\tfromBase (oklab) {\n\t\t// Convert to polar form\n\t\tlet [L, a, b] = oklab;\n\t\tlet h;\n\t\tconst ε = 0.0002; // chromatic components much smaller than a,b\n\n\t\tif (Math.abs(a) < ε && Math.abs(b) < ε) {\n\t\t\th = NaN;\n\t\t}\n\t\telse {\n\t\t\th = Math.atan2(b, a) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tL, // OKLab L is still L\n\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\tconstrain(h) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\t// Convert from polar form\n\ttoBase (oklch) {\n\t\tlet [L, C, h] = oklch;\n\t\tlet a, b;\n\n\t\t// check for NaN hue\n\t\tif (isNaN(h)) {\n\t\t\ta = 0;\n\t\t\tb = 0;\n\t\t}\n\t\telse {\n\t\t\ta = C * Math.cos(h * Math.PI / 180);\n\t\t\tb = C * Math.sin(h * Math.PI / 180);\n\t\t}\n\n\t\treturn [ L, a, b ];\n\t},\n\n\tformats: {\n\t\t\"oklch\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number>\", \"<number> | <angle>\"],\n\t\t}\n\t}\n});\n\nconst Yw = 203;\t// absolute luminance of media white, cd/m²\nconst n = 2610 / (2 ** 14);\nconst ninv = (2 ** 14) / 2610;\nconst m = 2523 / (2 ** 5);\nconst minv = (2 ** 5) / 2523;\nconst c1 = 3424 / (2 ** 12);\nconst c2 = 2413 / (2 ** 7);\nconst c3 = 2392 / (2 ** 7);\n\nvar rec2100Pq = new RGBColorSpace({\n\tid: \"rec2100pq\",\n\tname: \"REC.2100-PQ\",\n\tbase: REC2020Linear,\n\ttoBase (RGB) {\n\t\t// given PQ encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = ((Math.max(((val ** minv) - c1), 0) / (c2 - (c3 * (val ** minv)))) ** ninv);\n\t\t\treturn (x * 10000 / Yw); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// returnPQ encoded component in range [0, 1]\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = Math.max(val * Yw / 10000, 0); \t// absolute luminance of peak white is 10,000 cd/m².\n\t\t\tlet num = (c1 + (c2 * (x ** n)));\n\t\t\tlet denom = (1 + (c3 * (x ** n)));\n\n\t\t\treturn ((num / denom)  ** m);\n\t\t});\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"rec2100-pq\"\n\t\t},\n\t},\n});\n\n// FIXME see https://github.com/LeaVerou/color.js/issues/190\n\nconst a = 0.17883277;\nconst b = 0.28466892; // 1 - (4 * a)\nconst c = 0.55991073; // 0.5 - a * Math.log(4 *a)\n\nconst scale = 3.7743;\t// Place 18% grey at HLG 0.38, so media white at 0.75\n\nvar rec2100Hlg = new RGBColorSpace({\n\tid: \"rec2100hlg\",\n\tcssid: \"rec2100-hlg\",\n\tname: \"REC.2100-HLG\",\n\treferred: \"scene\",\n\n\tbase: REC2020Linear,\n\ttoBase (RGB) {\n\t\t// given HLG encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\t// first the HLG EOTF\n\t\t\t// ITU-R BT.2390-10 p.30 section\n\t\t\t// 6.3 The hybrid log-gamma electro-optical transfer function (EOTF)\n\t\t\t// Then scale by 3 so media white is 1.0\n\t\t\tif (val <= 0.5) {\n\t\t\t\treturn (val ** 2) / 3 * scale;\n\t\t\t}\n\t\t\treturn Math.exp(((val - c) / a) + b) / 12 * scale;\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// where diffuse white is 1.0,\n\t\t// return HLG encoded component in range [0, 1]\n\t\treturn RGB.map(function (val) {\n\t\t\t// first scale to put linear-light media white at 1/3\n\t\t\tval /= scale;\n\t\t\t// now the HLG OETF\n\t\t\t// ITU-R BT.2390-10 p.23\n\t\t\t// 6.1 The hybrid log-gamma opto-electronic transfer function (OETF)\n\t\t\tif (val <= 1/12) {\n\t\t\t\treturn Math.sqrt( 3 * val);\n\t\t\t}\n\t\t\treturn a * Math.log(12 * val - b) + c;\n\t\t});\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"rec2100-hlg\"\n\t\t},\n\t},\n});\n\nconst CATs = {};\n\nhooks.add(\"chromatic-adaptation-start\", env => {\n\tif (env.options.method) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nhooks.add(\"chromatic-adaptation-end\", env => {\n\tif (!env.M) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nfunction defineCAT ({id, toCone_M, fromCone_M}) {\n\t// Use id, toCone_M, fromCone_M like variables\n\tCATs[id] = arguments[0];\n}\nfunction adapt (W1, W2, id = \"Bradford\") {\n\t// adapt from a source whitepoint or illuminant W1\n\t// to a destination whitepoint or illuminant W2,\n\t// using the given chromatic adaptation transform (CAT)\n\t// debugger;\n\tlet method = CATs[id];\n\n\tlet [ρs, γs, βs] = multiplyMatrices(method.toCone_M, W1);\n\tlet [ρd, γd, βd] = multiplyMatrices(method.toCone_M, W2);\n\n\t// all practical illuminants have non-zero XYZ so no division by zero can occur below\n\tlet scale = [\n\t\t[ρd/ρs,    0,      0      ],\n\t\t[0,        γd/γs,  0      ],\n\t\t[0,        0,      βd/βs  ]\n\t];\n\t// console.log({scale});\n\n\tlet scaled_cone_M = multiplyMatrices(scale, method.toCone_M);\n\tlet adapt_M\t= multiplyMatrices(method.fromCone_M, scaled_cone_M);\n\t// console.log({scaled_cone_M, adapt_M});\n\treturn adapt_M;\n}\ndefineCAT({\n\tid: \"von Kries\",\n\ttoCone_M: [\n\t\t[  0.4002400,  0.7076000, -0.0808100 ],\n\t\t[ -0.2263000,  1.1653200,  0.0457000 ],\n\t\t[  0.0000000,  0.0000000,  0.9182200 ]\n\t],\n\tfromCone_M: [\n\t\t[  1.8599364, -1.1293816,  0.2198974 ],\n\t\t[  0.3611914,  0.6388125, -0.0000064 ],\n\t\t[  0.0000000,  0.0000000,  1.0890636 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"Bradford\",\n\t// Convert an array of XYZ values in the range 0.0 - 1.0\n\t// to cone fundamentals\n\ttoCone_M: [\n\t\t[  0.8951000,  0.2664000, -0.1614000 ],\n\t\t[ -0.7502000,  1.7135000,  0.0367000 ],\n\t\t[  0.0389000, -0.0685000,  1.0296000 ]\n\t],\n\t// and back\n\tfromCone_M: [\n\t\t[  0.9869929, -0.1470543,  0.1599627 ],\n\t\t[  0.4323053,  0.5183603,  0.0492912 ],\n\t\t[ -0.0085287,  0.0400428,  0.9684867 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"CAT02\",\n\t// with complete chromatic adaptation to W2, so D = 1.0\n\ttoCone_M: [\n\t\t[  0.7328000,  0.4296000, -0.1624000 ],\n\t\t[ -0.7036000,  1.6975000,  0.0061000 ],\n\t\t[  0.0030000,  0.0136000,  0.9834000 ]\n\t],\n\tfromCone_M: [\n\t\t[  1.0961238, -0.2788690,  0.1827452 ],\n\t\t[  0.4543690,  0.4735332,  0.0720978 ],\n\t\t[ -0.0096276, -0.0056980,  1.0153256 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"CAT16\",\n\ttoCone_M: [\n\t\t[  0.401288,  0.650173, -0.051461 ],\n\t\t[ -0.250268,  1.204414,  0.045854 ],\n\t\t[ -0.002079,  0.048952,  0.953127 ]\n\t],\n\t// the extra precision is needed to avoid roundtripping errors\n\tfromCone_M: [\n\t\t[  1.862067855087233e+0, -1.011254630531685e+0,   1.491867754444518e-1 ],\n\t\t[  3.875265432361372e-1,  6.214474419314753e-1,  -8.973985167612518e-3 ],\n\t\t[ -1.584149884933386e-2, -3.412293802851557e-2,   1.049964436877850e+0 ]\n\t]\n});\n\nObject.assign(WHITES, {\n\t// whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\n\t// all normalized to Y (luminance) = 1.00000\n\t// Illuminant A is a tungsten electric light, giving a very warm, orange light.\n\tA:  [1.09850, 1.00000, 0.35585],\n\n\t// Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\n\tC:   [0.98074, 1.000000, 1.18232],\n\n\t// The daylight series of illuminants simulate natural daylight.\n\t// The color temperature (in degrees Kelvin/100) ranges from\n\t// cool, overcast daylight (D50) to bright, direct sunlight (D65).\n\tD55: [0.95682, 1.00000, 0.92149],\n\tD75: [0.94972, 1.00000, 1.22638],\n\n\t// Equal-energy illuminant, used in two-stage CAT16\n\tE:   [1.00000, 1.00000, 1.00000],\n\n\t// The F series of illuminants represent fluorescent lights\n\tF2:  [0.99186, 1.00000, 0.67393],\n\tF7:  [0.95041, 1.00000, 1.08747],\n\tF11: [1.00962, 1.00000, 0.64350],\n});\n\n// The ACES whitepoint\n// see TB-2018-001 Derivation of the ACES White Point CIE Chromaticity Coordinates\n// also https://github.com/ampas/aces-dev/blob/master/documents/python/TB-2018-001/aces_wp.py\n// Similar to D60\nWHITES.ACES = [0.32168/0.33767, 1.00000, (1.00000 - 0.32168 - 0.33767)/0.33767];\n\n// convert an array of linear-light ACEScc values to CIE XYZ\nconst toXYZ_M = [\n\t[  0.6624541811085053,   0.13400420645643313,  0.1561876870049078  ],\n\t[  0.27222871678091454,  0.6740817658111484,   0.05368951740793705 ],\n\t[ -0.005574649490394108, 0.004060733528982826, 1.0103391003129971  ]\n];\nconst fromXYZ_M = [\n\t[  1.6410233796943257,   -0.32480329418479,    -0.23642469523761225  ],\n\t[ -0.6636628587229829,    1.6153315916573379,   0.016756347685530137 ],\n\t[  0.011721894328375376, -0.008284441996237409, 0.9883948585390215   ]\n];\n\nvar ACEScg = new RGBColorSpace({\n\tid: \"acescg\",\n\tname: \"ACEScg\",\n\n\t// ACEScg – A scene-referred, linear-light encoding of ACES Data\n\t// https://docs.acescentral.com/specifications/acescg/\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\tcoords: {\n\t\tr: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Red\"\n\t\t},\n\t\tg: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Green\"\n\t\t},\n\t\tb: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Blue\"\n\t\t}\n\t},\n\n\treferred: \"scene\",\n\n\twhite: WHITES.ACES,\n\n\ttoXYZ_M,\n\tfromXYZ_M,\n\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\n// export default Color;\n\nconst ε = 2 ** -16;\n\n// the smallest value which, in the 32bit IEEE 754 float encoding,\n// decodes as a non-negative value\nconst ACES_min_nonzero = -0.35828683;\n\n// brightest encoded value, decodes to 65504\nconst ACES_cc_max = (Math.log2(65504) + 9.72) / 17.52; // 1.468\n\nvar acescc = new RGBColorSpace({\n\tid: \"acescc\",\n\tname: \"ACEScc\",\n\t// see S-2014-003 ACEScc – A Logarithmic Encoding of ACES Data\n\t// https://docs.acescentral.com/specifications/acescc/\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\n\t// Appendix A: \"Very small ACES scene referred values below 7 1/4 stops\n\t// below 18% middle gray are encoded as negative ACEScc values.\n\t// These values should be preserved per the encoding in Section 4.4\n\t// so that all positive ACES values are maintained.\"\n\tcoords: {\n\t\tr: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Red\"\n\t\t},\n\t\tg: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Green\"\n\t\t},\n\t\tb: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Blue\"\n\t\t}\n\t},\n\treferred: \"scene\",\n\n\tbase: ACEScg,\n\t// from section 4.4.2 Decoding Function\n\ttoBase (RGB) {\n\t\tconst low = (9.72 - 15) / 17.52; // -0.3014\n\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= low) {\n\t\t\t\treturn (2 ** ((val * 17.52) - 9.72) - ε) * 2; // very low values, below -0.3014\n\t\t\t}\n\t\t\telse if (val < ACES_cc_max) {\n\t\t\t\treturn 2 ** ((val * 17.52) - 9.72);\n\t\t\t}\n\t\t\telse { // val >= ACES_cc_max\n\t\t\t\treturn 65504;\n\t\t\t}\n\t\t});\n\t},\n\n\t// Non-linear encoding function from S-2014-003, section 4.4.1 Encoding Function\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= 0) {\n\t\t\t\treturn (Math.log2(ε) + 9.72) / 17.52; // -0.3584\n\t\t\t}\n\t\t\telse if (val < ε) {\n\t\t\t\treturn  (Math.log2(ε + val * 0.5) + 9.72) / 17.52;\n\t\t\t}\n\t\t\telse { // val >= ε\n\t\t\t\treturn  (Math.log2(val) + 9.72) / 17.52;\n\t\t\t}\n\t\t});\n\t},\n\t// encoded media white (rgb 1,1,1) => linear  [ 222.861, 222.861, 222.861 ]\n\t// encoded media black (rgb 0,0,0) => linear [ 0.0011857, 0.0011857, 0.0011857]\n\tformats: {\n\t\tcolor: {}\n\t}\n});\n\nvar spaces = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tXYZ_D65: XYZ_D65,\n\tXYZ_D50: XYZ_D50,\n\tXYZ_ABS_D65: XYZ_Abs_D65,\n\tLab_D65: lab_d65,\n\tLab: lab,\n\tLCH: lch,\n\tsRGB_Linear: sRGBLinear,\n\tsRGB: sRGB,\n\tHSL: HSL,\n\tHWB: hwb,\n\tHSV: HSV,\n\tP3_Linear: P3Linear,\n\tP3: P3,\n\tA98RGB_Linear: A98Linear,\n\tA98RGB: a98rgb,\n\tProPhoto_Linear: ProPhotoLinear,\n\tProPhoto: prophoto,\n\tREC_2020_Linear: REC2020Linear,\n\tREC_2020: REC2020,\n\tOKLab: OKLab,\n\tOKLCH: oklch,\n\tJzazbz: Jzazbz,\n\tJzCzHz: jzczhz,\n\tICTCP: ictcp,\n\tREC_2100_PQ: rec2100Pq,\n\tREC_2100_HLG: rec2100Hlg,\n\tACEScg: ACEScg,\n\tACEScc: acescc\n});\n\n/**\n * Class that represents a color\n */\nclass Color {\n\t/**\n\t * Creates an instance of Color.\n\t * Signatures:\n\t * - `new Color(stringToParse)`\n\t * - `new Color(otherColor)`\n\t * - `new Color({space, coords, alpha})`\n\t * - `new Color(space, coords, alpha)`\n\t * - `new Color(spaceId, coords, alpha)`\n\t */\n\tconstructor (...args) {\n\t\tlet color;\n\n\t\tif (args.length === 1) {\n\t\t\tcolor = getColor(args[0]);\n\t\t}\n\n\t\tlet space, coords, alpha;\n\n\t\tif (color) {\n\t\t\tspace = color.space || color.spaceId;\n\t\t\tcoords = color.coords;\n\t\t\talpha = color.alpha;\n\t\t}\n\t\telse {\n\t\t\t// default signature new Color(ColorSpace, array [, alpha])\n\t\t\t[space, coords, alpha] = args;\n\t\t}\n\n\t\tthis.#space = ColorSpace.get(space);\n\t\tthis.coords = coords? coords.slice() : [0, 0, 0];\n\t\tthis.alpha = alpha < 1? alpha : 1; // this also deals with NaN etc\n\n\t\t// Convert \"NaN\" to NaN\n\t\tfor (let i = 0; i < this.coords.length; i++) {\n\t\t\tif (this.coords[i] === \"NaN\") {\n\t\t\t\tthis.coords[i] = NaN;\n\t\t\t}\n\t\t}\n\n\t\t// Define getters and setters for each coordinate\n\t\tfor (let id in this.#space.coords) {\n\t\t\tObject.defineProperty(this, id, {\n\t\t\t\tget: () => this.get(id),\n\t\t\t\tset: value => this.set(id, value)\n\t\t\t});\n\t\t}\n\t}\n\n\t#space;\n\n\tget space () {\n\t\treturn this.#space;\n\t}\n\n\tget spaceId () {\n\t\treturn this.#space.id;\n\t}\n\n\tclone () {\n\t\treturn new Color(this.space, this.coords, this.alpha);\n\t}\n\n\ttoJSON () {\n\t\treturn {\n\t\t\tspaceId: this.spaceId,\n\t\t\tcoords: this.coords,\n\t\t\talpha: this.alpha\n\t\t};\n\t}\n\n\tdisplay (...args) {\n\t\tlet ret = display(this, ...args);\n\n\t\t// Convert color object to Color instance\n\t\tret.color = new Color(ret.color);\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Get a color from the argument passed\n\t * Basically gets us the same result as new Color(color) but doesn't clone an existing color object\n\t */\n\tstatic get (color, ...args) {\n\t\tif (color instanceof Color) {\n\t\t\treturn color;\n\t\t}\n\n\t\treturn new Color(color, ...args);\n\t}\n\n\tstatic defineFunction (name, code, o = code) {\n\t\tlet {instance = true, returns} = o;\n\n\t\tlet func = function (...args) {\n\t\t\tlet ret = code(...args);\n\n\t\t\tif (returns === \"color\") {\n\t\t\t\tret = Color.get(ret);\n\t\t\t}\n\t\t\telse if (returns === \"function<color>\") {\n\t\t\t\tlet f = ret;\n\t\t\t\tret = function (...args) {\n\t\t\t\t\tlet ret = f(...args);\n\t\t\t\t\treturn Color.get(ret);\n\t\t\t\t};\n\t\t\t\t// Copy any function metadata\n\t\t\t\tObject.assign(ret, f);\n\t\t\t}\n\t\t\telse if (returns === \"array<color>\") {\n\t\t\t\tret = ret.map(c => Color.get(c));\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t};\n\n\t\tif (!(name in Color)) {\n\t\t\tColor[name] = func;\n\t\t}\n\n\t\tif (instance) {\n\t\t\tColor.prototype[name] = function (...args) {\n\t\t\t\treturn func(this, ...args);\n\t\t\t};\n\t\t}\n\t}\n\n\tstatic defineFunctions (o) {\n\t\tfor (let name in o) {\n\t\t\tColor.defineFunction(name, o[name], o[name]);\n\t\t}\n\t}\n\n\tstatic extend (exports) {\n\t\tif (exports.register) {\n\t\t\texports.register(Color);\n\t\t}\n\t\telse {\n\t\t\t// No register method, just add the module's functions\n\t\t\tfor (let name in exports) {\n\t\t\t\tColor.defineFunction(name, exports[name]);\n\t\t\t}\n\t\t}\n\t}\n}\nColor.defineFunctions({\n\tget,\n\tgetAll,\n\tset,\n\tsetAll,\n\tto,\n\tequals,\n\tinGamut,\n\ttoGamut,\n\tdistance,\n\ttoString: serialize,\n});\n\nObject.assign(Color, {\n\tutil,\n\thooks,\n\tWHITES,\n\tSpace: ColorSpace,\n\tspaces: ColorSpace.registry,\n\tparse,\n\n\t// Global defaults one may want to configure\n\tdefaults\n});\n\nfor (let key of Object.keys(spaces)) {\n\tColorSpace.register(spaces[key]);\n}\n\n/**\n * This plugin defines getters and setters for color[spaceId]\n * e.g. color.lch on *any* color gives us the lch coords\n */\n\n// Add space accessors to existing color spaces\nfor (let id in ColorSpace.registry) {\n\taddSpaceAccessors(id, ColorSpace.registry[id]);\n}\n\n// Add space accessors to color spaces not yet created\nhooks.add(\"colorspace-init-end\", space => {\n\taddSpaceAccessors(space.id, space);\n\tspace.aliases?.forEach(alias => {\n\t\taddSpaceAccessors(alias, space);\n\t});\n});\n\nfunction addSpaceAccessors (id, space) {\n\t// Coordinates can be looked up by both id and name\n\tObject.keys(space.coords);\n\tObject.values(space.coords).map(c => c.name);\n\n\n\tlet propId = id.replace(/-/g, \"_\");\n\n\tObject.defineProperty(Color.prototype, propId, {\n\t\t// Convert coords to coords in another colorspace and return them\n\t\t// Source colorspace: this.spaceId\n\t\t// Target colorspace: id\n\t\tget () {\n\t\t\tlet ret = this.getAll(id);\n\n\t\t\tif (typeof Proxy === \"undefined\") {\n\t\t\t\t// If proxies are not supported, just return a static array\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Enable color.spaceId.coordName syntax\n\t\t\treturn new Proxy(ret, {\n\t\t\t\thas: (obj, property) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tColorSpace.resolveCoord([space, property]);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {}\n\n\t\t\t\t\treturn Reflect.has(obj, property);\n\t\t\t\t},\n\t\t\t\tget: (obj, property, receiver) => {\n\t\t\t\t\tif (property && typeof property !== \"symbol\" && !(property in obj)) {\n\t\t\t\t\t\tlet {index} = ColorSpace.resolveCoord([space, property]);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\treturn obj[index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Reflect.get(obj, property, receiver);\n\t\t\t\t},\n\t\t\t\tset: (obj, property, value, receiver) => {\n\t\t\t\t\tif (property && typeof property !== \"symbol\" && !(property in obj) || property >= 0) {\n\t\t\t\t\t\tlet {index} = ColorSpace.resolveCoord([space, property]);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tobj[index] = value;\n\n\t\t\t\t\t\t\t// Update color.coords\n\t\t\t\t\t\t\tthis.setAll(id, obj);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Reflect.set(obj, property, value, receiver);\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\t// Convert coords in another colorspace to internal coords and set them\n\t\t// Target colorspace: this.spaceId\n\t\t// Source colorspace: id\n\t\tset (coords) {\n\t\t\tthis.setAll(id, coords);\n\t\t},\n\t\tconfigurable: true,\n\t\tenumerable: true\n\t});\n}\n\n// Import all modules of Color.js\n\nColor.extend(deltaEMethods);\nColor.extend({deltaE});\nColor.extend(variations);\nColor.extend({contrast});\nColor.extend(chromaticity);\nColor.extend(luminance);\nColor.extend(interpolation);\nColor.extend(contrastMethods);\n\nexport { Color as default };\n//# sourceMappingURL=color.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { parseAbcefTokens} from \"./tests/parseAndResolve\";\n\nconsole.log('Starting benchmark...')\n\n\n// parseDefaultTokens()\n\n// parseNestedTokens()\n\n// parseMergeResolveTokens()\n\nparseAbcefTokens()\n\nconsole.log('All benchmarks ran...')\n\n//Glob match all tests, throttle?\n//sort the order so each run is consistent\n//Import 0x - run each test in isolation.\n//Remove bottom \n\n\n//Nested tokens\n//reference-chains a > b > c > d > e\n//reference-chains with eval math. b = a * a, c = b * b, d = c * c\n\n//Interaction with figma DOM?!"],"names":["transform","abcdef","parseAbcefTokens","reversed","Object","fromEntries","entries","reverse","t0","performance","now","core","expandTypography","expandShadow","expandComposition","preserveRawValue","throwErrorWhenNotResolved","resolveReferences","expandBorder","t1","t2","console","log","set","extend","tokenTypes","TokenTypes","transformName","name","COLOR","SPACING","SIZING","BOX_SHADOW","BORDER_RADIUS","BORDER_WIDTH","OPACITY","FONT_FAMILIES","FONT_WEIGHTS","FONT_SIZES","LINE_HEIGHTS","TYPOGRAPHY","LETTER_SPACING","PARAGRAPH_SPACING","COMPOSITION","BORDER","ASSET","OTHER","appendTypeToToken","token","typeToSet","type","split","slice","toString","createTokensObject","tokens","tokenFilter","length","obj","reduce","acc","cur","toLowerCase","search","propToSet","values","mappedTokens","tokenObj","tokenObjects","forEach","key","group","checkAliasStartRegex","AliasRegex","AliasDollarRegex","BoxShadowTypes","DROP_SHADOW","INNER_SHADOW","ColorModifierTypes","LIGHTEN","DARKEN","MIX","ALPHA","ColorSpaceTypes","LCH","SRGB","P3","HSL","Properties","sizing","height","width","spacing","verticalPadding","horizontalPadding","paddingTop","paddingRight","paddingBottom","paddingLeft","itemSpacing","fill","backgroundBlur","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderRadiusTopLeft","borderRadiusTopRight","borderRadiusBottomRight","borderRadiusBottomLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","boxShadow","opacity","fontFamilies","fontWeights","fontSizes","lineHeights","typography","composition","letterSpacing","paragraphSpacing","textCase","dimension","textDecoration","asset","visibility","text","number","tokenValue","value","tokenName","description","StorageProviderType","LOCAL","GENERIC_VERSIONED_STORAGE","JSONBIN","GITHUB","GITLAB","SUPERNOVA","ADO","URL","BITBUCKET","TokenSetStatus","DISABLED","SOURCE","ENABLED","TEXT","PARAGRAPH_INDENT","TEXT_DECORATION","TEXT_CASE","DIMENSION","BOOLEAN","NUMBER","convertOpacityToFigma","matched","match","Number","omit","checkIfAlias","checkIfContainsAlias","getAliasValue","isSingleToken","findAllAliases","filter","resolveTokenValues","previousCount","aliases","returnedTokens","map","t","_","tokensInProgress","returnValue","failedToResolve","Array","isArray","item","itemFailedToResolve","compositionReturnValue","property","resolvedValue","returnObject","rawValue","mergeTokenGroups","usedSets","mergedTokens","tokenSetsToMerge","status","tokenSet","tokenSetOrder","$metadata","tokenEntries","sort","a","b","indexOf","tokenGroup","includes","mergedTokenIndex","findIndex","mergedToken","push","internal__Parent","splice","allTokens","aliasToken","Boolean","String","arrayValue","some","singleValue","aliasValue","e","getRootReferences","findReferences","convertToRgb","convertModifiedColorToHex","isSingleTokenValueObject","checkAndEvaluateMath","getReturnedValue","replaceAliasWithResolvedReference","reference","resolvedReference","stringValue","resolved","replace","isResolved","returnedValue","tokenReferences","resolvedReferences","from","ref","foundToken","nameToLookFor","startsWith","substring","nameToLookForReferences","tokenAliasSplitted","tokenAliasSplittedLast","pop","tokenAliasLastExcluded","join","tokenAliasSplittedLastPrevious","tokenAliasLastPreviousExcluded","find","hasOwnProperty","undefined","rawValueEntry","index","remainingReferences","couldBeNumberValue","rgbColor","$extensions","modify","color","err","JSON","stringify","parseToRgba","toHex","hexRegex","hslaRegex","rgbaRegex","returnedColor","matchesRgba","matchAll","m","matchesHsla","matchedString","matchedColor","matchesHexInsideRgba","r","g","alpha","trim","n","error","darken","colorSpace","amount","lightness","lch","l","difference","newChroma","Math","max","c","newLightness","hsl","colorInP3","to","newRed","p3","newGreen","newBlue","srgb","readableColorIsBlack","lightOrDark","lighten","min","Color","mix","mixColor","mixValue","transparentize","modifyColor","baseColor","modifier","returnedColorInSpace","format","convertToDefaultProperty","isSingleBorderToken","isSingleBoxShadowToken","isSingleCompositionToken","isSingleTypographyToken","isTokenGroupWithType","checkForTokens","root","returnValuesOnly","inheritType","groupLevel","currentTypeLevel","shouldExpandTypography","shouldExpandShadow","shouldExpandComposition","shouldExpandBorder","inheritTypeLevel","val","tokenToCheck","tokenValues","result","convertToTokenArray","convertTokensToGroupedObject","parseTokenValues","convertTokensObjectToResolved","excludedSets","options","parsed","merged","object","expand","getValueWithReferences","Error","tokenWithType","expanded","OPENING_BRACE","CLOSING_BRACE","matches","findDollarReferences","findMatchingReferences","valueToLookFor","references","replaceReferences","oldName","newName","newValue","array","depth","startIndex","i","concat","getSimpleValue","singleAliasRegEx","oneOrMoreAliasRegEx","aliasRegEx","test","getComplexValue","rawVal","shadow","isGitProvider","provider","isMatchingStyle","tokenPath","style","splitName","trimmedName","isPrimitiveValue","isPropertyType","input","isSingleBoxShadowValue","every","v","isSingleTypographyValue","isTokenType","Parser","calcAstParser","parser","functions","clamped","x","lerp","start","end","norm","cubicBezier1D","x1","x2","xx","coeffs","sample","func","args","expr","calcParsed","parse","ex","calcReduced","reduceExpression","unitlessExpr","unit","RegExp","evaluated","evaluate","parseFloat","toFixed","space","inGamut","precision","global","reducedTokens","prev","parsedGroup","convertedToArray","sets","excludes","multiplyMatrices","A","B","p","B_cols","product","row","col","ret","isString","str","o","prototype","call","toPrecision","integerLength","floor","p10","round","parseFunction","isFunctionRegex","isNumberRegex","parts","$0","arg","rawName","rawArgs","last","arr","interpolate","isNaN","interpolateInv","mapRange","parseCoordGrammar","coordGrammars","coordGrammar","range","util","freeze","__proto__","Hooks","add","callback","first","arguments","run","env","context","hooks","defaults","gamut_mapping","deltaE","WHITES","D50","D65","getWhite","adapt$1","W1","W2","XYZ","TypeError","M","ε$4","ColorSpace","id","base","get","fromBase","toBase","coords","white","formats","cssId","defineProperty","referred","path","getPath","epsilon","isPolar","coordMeta","meta","getFormat","processFormat","myPath","otherPath","connectionSpace","connectionSpaceIndex","getMinCoords","refRange","all","Set","registry","register","alias","alternatives","argType","resolveCoord","workingSpace","coordType","coord","coordId","normalizedCoord","keys","DEFAULT_FORMAT","coordFormats","outputType","fromRange","toRange","suffix","serializeCoords","XYZ_D65","y","z","ids","RGBColorSpace","toXYZ_M","fromXYZ_M","rgb","xyz","shift","colorSpec","argCount","spaceId","didYouMean","lastAlpha","providedType","coordName","formatId","getColor","getAll","prop","setAll","XYZ_D50","ε$3","ε3$1","κ$1","white$1","lab","f","cbrt","Lab","pow","constrain","angle","adjust","arc","angles","a1","a2","angleDiff","h","L","hue","ε","abs","NaN","atan2","PI","sqrt","Lightness","Chroma","Hue","cos","sin","Gfactor","π$1","r2d","d2r$1","deltaE2000","kL","kC","kH","L1","b1","C1","L2","b2","C2","Cbar","C7","G","adash1","adash2","Cdash1","Cdash2","h1","h2","ΔL","ΔC","hdiff","hsum","habs","Δh","ΔH","Ldash","Cdash","Cdash7","hdash","lsq","SL","SC","T","SH","Δθ","exp","RC","RT","dE","ε$2","clone","toGamut","method","spaceColor","clipped","mapSpace","mappedColor","bounds","low","high","returns","serialize","inGamut$1","customOptions","unshift","strAlpha","noAlpha","commas","toXYZ_M$5","fromXYZ_M$5","REC2020Linear","α","β","REC2020","RGB","toXYZ_M$4","fromXYZ_M$4","P3Linear","toXYZ_M$3","fromXYZ_M$3","sRGBLinear","KEYWORDS","coordGrammarNumber","sRGB","sign","rgba","component","parseInt","collapse","collapsible","hex","padStart","black","display_space","CSS","supports","display","fallbackColor","distance","color1","color2","coords1","coords2","c1","c2","equals","getLuminance","setLuminance","register$2","luminance","contrastWCAG21","Y1","Y2","normBG","normTXT","revTXT","revBG","blkThrs","blkClmp","loClip","deltaYmin","scaleBoW","loBoWoffset","scaleWoB","fclamp","Y","linearize","contrastAPCA","background","foreground","S","C","Sapc","R","lumTxt","lumBg","Ytxt","Ybg","BoW","contrastMichelson","denom","contrastWeber","contrastLstar","ε$1","ε3","κ","lab_d65","phi","contrastDeltaPhi","Lstr1","Lstr2","deltaPhiStar","contrast","SQRT2","contrastMethods","algorithm","rest","algorithms","uv","X","Z","xy","sum","register$1","chromaticity","deltaE76","π","d2r","deltaECMC","H1","Δa","Δb","H2","C4","F","Yw$1","XYZ_Abs_D65","AbsXYZ","b$1","n$1","ninv$1","c1$2","c2$2","c3$2","pinv","d","d0","XYZtoCone_M","ConetoXYZ_M","ConetoIab_M","IabtoCone_M","Jzazbz","jz","az","bz","Xa","Ya","Za","Xm","Ym","LMS","PQLMS","num","Iz","Jz","jzczhz","cz","hz","jzazbz","deltaEJz","Jz1","Cz1","Hz1","Jz2","Cz2","Hz2","ΔJ","c1$1","c2$1","c3$1","m1","m2","im1","im2","XYZtoLMS_M$1","LMStoIPT_M","IPTtoLMS_M","LMStoXYZ_M$1","ictcp","ct","cp","LMStoICtCp","ICtCp","ICtCptoLMS","deltaEITP","I1","T1","P1","I2","T2","P2","XYZtoLMS_M","LMStoXYZ_M","LMStoLab_M","LabtoLMS_M","OKLab","LMSg","deltaEOK","deltaEMethods","variations","outputSpace","premultiplied","steps","colorRange","isRange","rangeArgs","colors","maxDeltaE","deltaEMethod","maxSteps","rangeOptions","totalDelta","actualSteps","ceil","step","maxDelta","ΔΕ","progression","interpolationSpace","θ1","θ2","assign","defineFunction","interpolation","s","k","HSV","hsv","hwb","w","gray","toXYZ_M$2","fromXYZ_M$2","A98Linear","a98rgb","toXYZ_M$1","fromXYZ_M$1","ProPhotoLinear","Et","Et2","prophoto","oklch","oklab","Yw","ninv","minv","c3","rec2100Pq","scale","rec2100Hlg","cssid","CATs","adapt","defineCAT","toCone_M","fromCone_M","ρs","γs","βs","ρd","γd","βd","scaled_cone_M","adapt_M","D55","D75","E","F2","F7","F11","ACES","ACEScg","ACES_min_nonzero","ACES_cc_max","log2","acescc","spaces","XYZ_ABS_D65","Lab_D65","sRGB_Linear","HWB","P3_Linear","A98RGB_Linear","A98RGB","ProPhoto_Linear","ProPhoto","REC_2020_Linear","REC_2020","OKLCH","JzCzHz","ICTCP","REC_2100_PQ","REC_2100_HLG","ACEScc","toJSON","code","instance","defineFunctions","exports","Space","addSpaceAccessors","propId","Proxy","has","Reflect","receiver","configurable","enumerable","default"],"sourceRoot":""}