@tailwind base;

@tailwind components;

.button-property + .property-wrapper {
  @apply mt-4;
}

.property-wrapper:not(:last-of-type) {
  @apply mb-4;
}

.property-wrapper .heading {
  @apply text-xs text-foreground-muted mb-2;
}

.property-wrapper .property-wrapper {
  @apply mb-0 rounded-none pl-2 pb-2 border-l border-border-muted;
}

.property-wrapper:last-of-type {
  @apply mb-0;
}

.button {
  @apply border border-border-muted rounded text-foreground-muted font-medium text-xs p-2;
}

.button-disabled {
  @apply border-border-muted;
}

.button-property {
  @apply border-none rounded bg-background-subtle px-0 py-0;
}

.button-property button {
  @apply rounded;
}

.button-property:hover {
  @apply bg-background-hover bg-opacity-50;
}

.button-property-edit {
  @apply opacity-0;
}

.button-active {
  @apply bg-primary-100 shadow-focus-muted;
}

.button-property button:focus {
  @apply bg-opacity-75 outline-none shadow-focus-subtle;
}

.button-property-color {
  @apply rounded-full bg-transparent;
}

.button-property-color button:focus {
  @apply rounded-full bg-transparent;
  outline: none;
  box-shadow: 0 0 0 2px theme('colors.primary.500');
}

.button-property-color .button-text::before {
  @apply w-6 h-6 my-auto flex-shrink-0;
  border: 1px solid white;
  content: '';
  border-radius: 100%;
  background: var(--backgroundColor);
  border-color: var(--borderColor);
}

.button-property-color-listing {
  @apply rounded w-full p-1 -mb-1;
}

.button-text {
  @apply text-foreground px-2 py-1 flex items-center justify-start flex-shrink-0;
}

.button-property-color .button-text span {
  @apply ml-2;
}

.button-property-color .button-text {
  @apply p-0;
}

@tailwind utilities;
